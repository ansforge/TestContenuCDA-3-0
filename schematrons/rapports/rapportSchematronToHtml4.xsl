<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" version="1.0">

    <xsl:output method="html" indent="yes" version="4.01" encoding="ISO-8859-15"
        doctype-system="http://www.w3.org/TR/html4/strict.dtd"
        doctype-public="-//W3C//DTD HTML 4.01//EN"/>
    
    <xsl:template match="svrl:schematron-output">
        <xsl:variable name="anomalies">
            <xsl:value-of select="count(//svrl:failed-assert)"/>
        </xsl:variable>
        <xsl:variable name="patterns">
            <xsl:value-of select="count(//svrl:active-pattern)"/>
        </xsl:variable>
        <xsl:variable name="regles">
            <xsl:value-of select="count(//svrl:fired-rule)"/>
        </xsl:variable>
        <xsl:variable name="docSource">
            <xsl:value-of select="@document"/>
        </xsl:variable>
        <xsl:variable name="verif">
            <!-- FMA 15/01/2014 <xsl:value-of select="substring-after($docSource, 'tmp/')"/> -->
            <!-- NMA 28/02/2022 ajout de l'exempleCDA dans le path suite à la nouvelle structure du testContenuCDA -->
            <xsl:value-of select="substring-after($docSource, '../../ExemplesCDA/')"/>
        </xsl:variable>   
        <xsl:variable name="validCDA">
            <!-- FMA 15/01/2014 <xsl:value-of select="concat(substring-before(substring-after($docSource, 'tmp/'), '.xml'), '_validCDA.xml')"/> -->
            <!-- NMA 28/02/2022 ajout de l'exempleCDA dans le path suite à la nouvelle structure du testContenuCDA -->
            <xsl:value-of select="concat(substring-before(substring-after($docSource, '../../ExemplesCDA/'), '.xml'), '_validCDA.xml')"/>
        </xsl:variable>            
        <xsl:variable name="val">
            <xsl:value-of select="document($validCDA)//xsd-validation/@result"/>
        </xsl:variable>
        <html>
            <xsl:comment> This HTML was generated by an XSLT transformation from the file <xsl:value-of select="$verif"/></xsl:comment>
            <head>
                <title>
                    <xsl:value-of select="@title"/>
                </title>
                <style type="text/css">
                    td.blue {color:blue}
                    td.green {color:darkgreen;font-weight:bold}
                    td.inva {color:cyan;font-weight:bold}
                    td.brown {color:brown}
                    table.neutre {border-width:1px;border-style:solid;border-color:black;width:78%;background-color:LightGray}
                    table.bon {border-width:1px;border-style:solid;border-color:black;width:78%;background-color:PaleGreen}
                    table.ano {border-width:1px;border-style:solid;border-color:black;width:78%;background-color:LightSalmon}
                    table.invalide {border-width:1px;border-style:solid;border-color:black;width:78%;background-color:BurlyWood}
                    table.liste {width:78%}
                    span.gras {font-weight:bold}
                </style>
            </head>
            <body>
                <h2><xsl:value-of select="@title"/></h2>
                <table cellspacing="10">
                    <xsl:attribute name="class">
                        <xsl:choose>
                            <xsl:when test="$regles=0 and $val='OK'">neutre</xsl:when>
                            <xsl:when test="$anomalies=0 and $val='OK'">bon</xsl:when>   
                            <xsl:when test="$val!='OK'">invalide</xsl:when>   
                            <xsl:otherwise>ano</xsl:otherwise>
                        </xsl:choose>  
                    </xsl:attribute>
                    <th width="15%"/><th width="73%"/>
                    <tr><td>Document analysé : </td><td class="blue"><xsl:value-of select="$docSource"/></td></tr>
                    <tr><td>Schematron ISO : </td><td class="blue"><xsl:value-of select="@schemaVersion"/></td></tr>
                    <tr><td>Exécution : </td><td class="blue"><xsl:value-of select="@dateHeure"/></td></tr>
                    <tr>
                        <td>Contrôle/schéma CDA : </td>
                        <td>
                            <xsl:attribute name="class">
                                <xsl:choose>
                                    <xsl:when test="$val='OK'">blue</xsl:when>
                                    <xsl:otherwise>inva</xsl:otherwise>
                                </xsl:choose>  
                            </xsl:attribute>
                            <a>
                                <xsl:attribute name="href">file:<xsl:value-of select="$validCDA"/></xsl:attribute>
                                <xsl:value-of select="$validCDA"/>
                            </a>
                            : le document analysé est
                            <xsl:if test="$val!='OK'"> in</xsl:if>valide par rapport au schéma CDA
                        </td>
                    </tr>
                    <tr>
                        <td>Schématron, phase  : </td>
                        <td>
                            &quot;<xsl:value-of select="@phase"/>&quot; 
                            ; <xsl:value-of select="$patterns"/> patterns activés ; <xsl:value-of select="$regles"/> règles exécutées ; 
                            <span class="gras">
                               <xsl:choose>
                                <xsl:when test="$anomalies=0">le document est conforme au schématron</xsl:when>   
                                <xsl:otherwise><xsl:value-of select="$anomalies"/> anomalie(s) détectée(s) détaillée(s) ci-dessous :</xsl:otherwise>
                               </xsl:choose>  
                            </span>
                        </td>
                    </tr>
                </table>
                <xsl:apply-templates select="svrl:failed-assert"/>
            </body>
        </html>
    </xsl:template>     
    <xsl:template match="svrl:failed-assert">
        <br/>
        <table class="liste">
            <th width="15%"/><th width="73%"/>
            <tr><td nowrap="nowrap">Anomalie détectée dans</td><td class="blue"><xsl:value-of select="@location"/></td></tr>
            <tr><td/><td class="brown" ><xsl:value-of select="svrl:text"/></td></tr>
        </table>               
    </xsl:template>
</xsl:stylesheet>
