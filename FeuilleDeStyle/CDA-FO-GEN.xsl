<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl" xmlns:hl7="urn:hl7-org:v3"
    xmlns:ps3-20="urn:dicom-org:ps3-20" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:sdtc="urn:hl7-org:sdtc" xmlns:fo="http://www.w3.org/1999/XSL/Format"
    xmlns:saxon="http://saxon.sf.net/" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions"
    xmlns="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:data="urn:asip-sante:ci-sis" exclude-result-prefixes="xd hl7 xsi sdtc ps3-20">

    <xsl:output method="xml" omit-xml-declaration="yes"/>

    <xsl:strip-space elements="*"/>

    <xsl:variable name="table-elem-attrs" select="document('cda_narrativeblock.xml')/tableElems"/>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myMargin">
        <xsl:attribute name="margin-left">0.1cm</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBorder">
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
        <xsl:attribute name="width">100%</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBorder1">
        <xsl:attribute name="border">0</xsl:attribute>
        <xsl:attribute name="width">100%</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock1">
        <xsl:attribute name="font-family">Verdana, Tahoma, sans-serif</xsl:attribute>
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="margin-top">10px</xsl:attribute>
        <xsl:attribute name="text-align">center</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock2">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">#DCF0FF</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock3">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="background-color">#DCF0FF</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock4">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">#DCF0FF</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock5">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="background-color">#DCF0FF</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock15">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock6">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock7">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock8">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">LightGrey</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>
    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock9">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>
    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock10">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock11">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock12">
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock13">
        <xsl:attribute name="text-align">center</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm white</xsl:attribute>
        <xsl:attribute name="background-color">LightGrey</xsl:attribute>
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock14">
        <xsl:attribute name="border">solid 0.1mm white</xsl:attribute>
        <xsl:attribute name="background-color">gainsboro</xsl:attribute>
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock15">
        <xsl:attribute name="border">solid 0.1mm white</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
    </xsl:attribute-set>

    <!-- Extension FR : PDF -->
    <xsl:attribute-set name="myBlock16">
        <xsl:attribute name="font-style">italic</xsl:attribute>
        <xsl:attribute name="text-decoration">underline</xsl:attribute>
        <xsl:attribute name="font-family">Verdana, Tahoma, sans-serif</xsl:attribute>
        <xsl:attribute name="font-size">8</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
    </xsl:attribute-set>

    <xd:doc scope="stylesheet">
        <xd:desc>
            <xd:p><xd:b>Title:</xd:b> CDA R2 StyleSheet</xd:p>
            <xd:p><xd:b>Version:</xd:b> 1.0.0</xd:p>
        </xd:desc>
    </xd:doc>

    <xd:doc>
        <xd:desc>
            <xd:p>XSLT 1.0 does not have date function, so we need something to compare against e.g.
                to get someones age</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="currentDate" select="(/hl7:ClinicalDocument/hl7:effectiveTime/@value)[1]"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Vocabulary file containing language dependant strings such as labels</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="vocFile" select="'cda_l10n.xml'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Cache language dependant strings</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="vocMessages" select="document($vocFile)"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Default language for retrieval of language dependant strings such as labels, e.g.
                'en-US'. This is the fallback language in case the string is not available in the
                actual language. See also <xd:ref name="textLang" type="parameter"
                >textLang</xd:ref>.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="textlangDefault" select="'fr-fr'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Actual language for retrieval of language dependant strings such as labels, e.g.
                'en-US'. Unless supplied, this is taken from the ClinicalDocument/language/@code
                attribute, or in case that is not present from <xd:ref name="textlangDefault"
                    type="parameter">textlangDefault</xd:ref>.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="textLang">
        <xsl:choose>
            <xsl:when test="/hl7:ClinicalDocument/hl7:languageCode/@code">
                <xsl:value-of select="/hl7:ClinicalDocument/hl7:languageCode/@code"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="$textlangDefault"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Boolean value for whether the result document may contain JavaScript. Some
                environments forbid the use of JavaScript. Without JavaScript, certain more dynamic
                features may not work.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="useJavascript" select="'true'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Absolute or relative URI to an external Cascading Stylesheet (CSS) file that
                contains style attributes for custom markup, e.g. in the @styleCode attribute in
                Section.text</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="externalCss"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font family for the whole document unless overruled
                somewhere</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-family" select="'Verdana, Tahoma, sans-serif'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for all text unless otherwise specified, and is the base
                value for other font sizes</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-main" select="'9pt'"/>

    <xsl:param name="font-size-min" select="'7pt'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for text in the h1 tag, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref> + 3</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-h1">
        <xsl:call-template name="raiseFontSize">
            <xsl:with-param name="with" select="3"/>
        </xsl:call-template>
    </xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for text in the h2 tag, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref> + 2</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-h2">
        <xsl:call-template name="raiseFontSize">
            <xsl:with-param name="with" select="2"/>
        </xsl:call-template>
    </xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for text in the h3 tag, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref> + 1</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-h3">
        <xsl:call-template name="raiseFontSize">
            <xsl:with-param name="with" select="1"/>
        </xsl:call-template>
    </xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for text in the h4 tag, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref></xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-h4" select="$font-size-main"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for text in the h5 tag, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref></xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-h5" select="$font-size-main"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for text in the h6 tag, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref></xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-h6" select="$font-size-main"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the font size for footnote text, defaults to <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref> - 1</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="font-size-footnote">
        <xsl:call-template name="raiseFontSize">
            <xsl:with-param name="with" select="-1"/>
        </xsl:call-template>
    </xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the background-color, as any legal hex, rgb or named color, for header
                like table elements, e.g. th tags, defaults to "LightGrey".</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="bgcolor-th">LightGrey</xsl:param>

    <xsl:param name="bgcolor-blue-th">#DCF0FF</xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines the background-color, as any legal hex, rgb or named color, for body
                like table elements, e.g. td tags, defaults to "#f2f2f2".</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="bgcolor-td">#f2f2f2</xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines if the document title and top level summary of header information
                (patient/guardian/author/encounter/documentationOf, inFulfillmentOf) should be
                rendered. Defaults to "true", any other value is interpreted as "do not render".
                Some systems may have a context around the rendering of the document that would make
                rendering the header superfluous. Note that the footer, which may be switched off
                separately contains everything that the header does and more.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="dohtmlheader">true</xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Determines if the document footer containing a listing of everything in the CDA
                Header should be rendered. Defaults to "true", any other value is interpreted as "do
                not render". Some systems may have a context around the rendering of the document
                that would make rendering the footer superfluous, or just want to concentrate on
                document contents.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="dohtmlfooter">true</xsl:param>

    <xd:doc>
        <xd:desc>
            <xd:p>Security parameter. May contain a vertical bar separated list of URI prefixes,
                such as "http://www.example.com|https://www.example.com". See parameter <xd:ref
                    name="limit-external-images" type="parameter">limit-external-images</xd:ref> for
                more detail.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="external-image-whitelist"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Security parameter. When set to 'yes' limits the URIs to images (if any) to
                locally attached images and/or images that are on the <xd:ref
                    name="external-image-whitelist" type="parameter"
                    >external-image-whitelist</xd:ref>. When set to anything other than 'yes' also
                allows for arbitrary external images (e.g. through http:// or https://). Default
                value is 'yes' which is considered defensive against potential security risks that
                could stem from resources loaded from arbitrary source.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="limit-external-images" select="'yes'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Security parameter. When set to 'yes' <xd:a
                    href="https://html.spec.whatwg.org/multipage/origin.html#sandboxed-plugins-browsing-context-flag"
                    >sandboxes the iframe for pdfs</xd:a>. Sandboxed iframe disallow plug-ins,
                including the plug-in needed to render pdf. Effectively this setting thus prohibits
                pdf rendering. When set to anything other than 'yes', pdf carrying iframes are not
                sandboxed and pdf rendering is possible. Default value is 'yes' which is considered
                defensive against potential security risks that could stem from resources loaded
                from arbitrary source.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="limit-pdf" select="'no'"/>

    <xd:doc>
        <xd:desc>Determines depth of menu at the top of the document. Default is 1, which means just
            head section. Max is 3 which is head section + 2 levels (if any)</xd:desc>
    </xd:doc>
    <xsl:param name="menu-depth" select="3"/>

    <xd:doc>
        <xd:desc>Privacy parameter. Accepts a comma separated list of patient ID root values
            (normally OID's). When a patient ID is encountered with a root value in this list, then
            the rendering of the extension will be xxx-xxx-xxx regardless of what the actual value
            is. This is useful to prevent public display of for example the US SSN. Default is to
            render any ID as it occurs in the document. Note that this setting only affects human
            rendering and that it does not affect automated processing of the underlying document.
            If the same value also occurs in the <xd:ref name="skip-ids" type="parameter"
                >skip-ids</xd:ref> list, then that takes precedence.</xd:desc>
    </xd:doc>
    <xsl:param name="skip-ids"/>
    <xsl:variable name="skip-ids-var" select="concat(',', $skip-ids, ',')"/>

    <xd:doc>
        <xd:desc>Privacy parameter. Accepts a comma separated list of patient ID root values
            (normally OID's). When a patient ID is encountered with a root value in this list, then
            the rendering of this ID will be skipped. This is useful to prevent public display of
            for example the US SSN. Default is to render any ID as it occurs in the document. Note
            that this setting only affects human rendering and that it does not affect automated
            processing of the underlying document.</xd:desc>
    </xd:doc>
    <xsl:param name="mask-ids"/>
    <xsl:variable name="mask-ids-var" select="concat(',', $mask-ids, ',')"/>

    <xd:doc>
        <xd:desc>Determines if sections will receive numbering according to ClinicalDocument order.
            Value 'true' activates numbering. Top level sections are 1, 2, 3, 4, sub level sections
            are 1.1, 1.2, 1.2.1, 1.2.2 etc.</xd:desc>
    </xd:doc>
    <xsl:param name="dosectionnumbering" select="'false'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Do lowercase compare of language+region</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="textLangLowerCase">
        <xsl:call-template name="caseDown">
            <xsl:with-param name="data" select="$textLang"/>
        </xsl:call-template>
    </xsl:variable>

    <xd:doc>
        <xd:desc>
            <xd:p>Do lowercase compare of language (assume alpha2 not alpha3)</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="textLangPartLowerCase" select="substring($textLangLowerCase, 1, 2)"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Do lowercase compare of default language+region</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="textLangDefaultLowerCase">
        <xsl:call-template name="caseDown">
            <xsl:with-param name="data" select="$textlangDefault"/>
        </xsl:call-template>
    </xsl:variable>

    <xd:doc>
        <xd:desc>
            <xd:p>Do lowercase compare of default language (assume alpha2 not alpha3)</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="textLangDefaultPartLowerCase"
        select="substring($textLangDefaultLowerCase, 1, 2)"/>

    <xd:doc>
        <xd:desc>
            <xd:p>String processing variable. Removes the following characters, in addition to line
                breaks "':;?`{}“”„‚’</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="simple-sanitizer-match">
        <xsl:text>&#10;&#13;&#34;&#39;&#58;&#59;&#63;&#96;&#123;&#125;&#8220;&#8221;&#8222;&#8218;&#8217;</xsl:text>
    </xsl:variable>

    <xd:doc>
        <xd:desc>
            <xd:p>Non XML Body</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="nonXML" select="//hl7:ClinicalDocument/hl7:component/hl7:nonXMLBody"/>

    <xd:doc>
        <xd:desc>
            <xd:p>String processing variable.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="simple-sanitizer-replace" select="'***************'"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Use XHTML 1.0 Strict with UTF-8 encoding. CDAr3 specifies an XHTML subset of tags
                in Section.text so that makes mapping easier.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:output indent="yes" encoding="utf-8" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN"
        doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Main template. Triggers on all top level ClinicalDocument elements</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="/">
        <fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
            <fo:layout-master-set>
                <fo:simple-page-master margin-top="0.2in" margin-left="0.2in" margin-bottom="0.2in"
                    margin-right="0.2in" master-name="first">
                    <fo:region-body region-name="xsl-region-body"/>
                    <fo:region-after extent="3mm" region-name="xsl-region-after"/>
                </fo:simple-page-master>
                <fo:simple-page-master margin-top="0.2in" margin-left="0.2in" margin-bottom="0.2in"
                    margin-right="0.2in" master-name="rest">
                    <fo:region-body margin-top="50pt" region-name="xsl-region-body"/>
                    <fo:region-before extent="10mm" region-name="xsl-region-before"/>
                    <fo:region-after extent="3mm" region-name="xsl-region-after"/>
                </fo:simple-page-master>
                <fo:page-sequence-master master-name="only">
                    <fo:repeatable-page-master-alternatives>
                        <fo:conditional-page-master-reference master-reference="first"
                            page-position="first"/>
                        <fo:conditional-page-master-reference master-reference="rest"
                            page-position="any"/>
                    </fo:repeatable-page-master-alternatives>
                </fo:page-sequence-master>
            </fo:layout-master-set>
            <fo:page-sequence master-reference="only">
                <fo:static-content flow-name="xsl-region-before">
                    <fo:block text-align="start" font-size="6">
                        <xsl:call-template name="show-title-header"/>
                    </fo:block>
                    <fo:block>
                        <fo:leader leader-pattern="rule" leader-length="100%" rule-thickness="0.1pt"
                        />
                    </fo:block>
                </fo:static-content>
                <fo:static-content flow-name="xsl-region-after">
                    <fo:block>
                        <fo:leader leader-pattern="rule" leader-length="100%" rule-thickness="0.1pt"
                        />
                    </fo:block>
                    <fo:block text-align="end" font-size="6">
                        <fo:page-number/> / <fo:page-number-citation ref-id="citation"/>
                    </fo:block>
                </fo:static-content>
                <fo:flow flow-name="xsl-region-body">
                    <xsl:apply-templates select="//hl7:ClinicalDocument"/>
                    <fo:block id="citation"/>
                </fo:flow>
            </fo:page-sequence>
            <xsl:if test="$nonXML">
                <xsl:call-template name="encodedPdf"/>
            </xsl:if>
            <xsl:for-each select="descendant::hl7:observationMedia">
                <xsl:if test="hl7:value[@mediaType = 'application/pdf']">
                    <xsl:if test="not(preceding::hl7:templateId[@root = '1.2.250.1.213.1.1.2.243'])">
                        <xsl:variable name="id" select="@ID"/>
                        <xsl:variable name="value"
                            select="translate(normalize-space(hl7:value[@mediaType = 'application/pdf']/text()), ' ', '')"/>
                        <fox:external-document content-type="pdf" id="{$id}">
                            <xsl:attribute name="src">
                                <xsl:value-of
                                    select="concat('data:', 'application/pdf', ';base64,', $value)"
                                />
                            </xsl:attribute>
                        </fox:external-document>
                    </xsl:if>
                </xsl:if>
            </xsl:for-each>
        </fo:root>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Encoded nonXMLBody FILE</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="encodedPdf">
        <xsl:variable name="nonXMLText"
            select="//hl7:ClinicalDocument/hl7:component/hl7:nonXMLBody/hl7:text"/>
        <xsl:variable name="value" select="normalize-space($nonXMLText/text())"/>
        <fox:external-document content-type="pdf" id="nonXmlId">
            <xsl:attribute name="src">
                <xsl:value-of select="concat('data:', $nonXMLText/@mediaType, ';base64,', $value)"/>
            </xsl:attribute>
        </fox:external-document>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Starts an HTML document containing a rendering of the ClinicalDocument</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:ClinicalDocument[not(ancestor::hl7:ClinicalDocument)]">
        <xsl:comment> Do NOT edit this HTML directly: it was generated via an XSLT transformation from a CDA Release 2 or 3 XML document. </xsl:comment>
            <xsl:if test="$dohtmlheader = 'true'">
                <fo:block xsl:use-attribute-sets="myBlock1">
                    <xsl:call-template name="show-title"/>
                </fo:block>
                <fo:block line-height="0.1cm">&#160;</fo:block>
                <xsl:call-template name="show-header"/>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:if>
            <fo:block id="documentbody">
                <xsl:if test="$nonXML">
                    <fo:block xsl:use-attribute-sets="myBlock16">
                        <fo:basic-link internal-destination="nonXmlId">
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key"
                                    select="'iframe-warning-display-pdf-non-xml'"/>
                            </xsl:call-template>
                            <fo:inline>
                                <xsl:value-of select="nonXmlId"/>
                            </fo:inline>
                        </fo:basic-link>
                    </fo:block>
                </xsl:if>
                <xsl:apply-templates select="hl7:component/hl7:structuredBody"/>
            </fo:block>
            <xsl:if test="$dohtmlfooter = 'true'">
                <xsl:call-template name="recordTarget"/>
                <xsl:call-template name="authorization"/>
                <xsl:call-template name="guardian"/>
                <xsl:call-template name="section-informant"/>
                <xsl:call-template name="section-informant-confiance"/>
                <xsl:call-template name="section-informant-aidant"/>
                <xsl:call-template name="section-informant-aide"/>
                <xsl:call-template name="documentGeneral"/>
                <xsl:call-template name="documentationOf"/>
                <xsl:call-template name="componentOf"/>
                <xsl:call-template name="inFulfillmentOf"/>
                <xsl:call-template name="participant"/>
            </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle structuredBody</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:component/hl7:structuredBody">
            <xsl:for-each select="hl7:component/hl7:section">
                <xsl:call-template name="section">
                    <xsl:with-param name="level" select="3"/>
                </xsl:call-template>
            </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle nonXMLBody and observationMedia</xd:p>
        </xd:desc>
        <xd:param name="usemap"/>
    </xd:doc>
    <xsl:template match="hl7:component/hl7:nonXMLBody | hl7:observationMedia">
        <xsl:param name="usemap"/>
        <xsl:variable name="renderID">
            <xsl:choose>
                <xsl:when test="@ID">
                    <xsl:value-of select="@ID"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="concat(generate-id(.), '_', local-name(.))"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="renderAltText">
            <xsl:variable name="i18nid">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'id'"/>
                </xsl:call-template>
            </xsl:variable>
            <xsl:if test="hl7:id">
                <xsl:value-of
                    select="concat($i18nid, ' = ', hl7:id[1]/@root, ' ', hl7:id[1]/@extension)"/>
            </xsl:if>
        </xsl:variable>
        <xsl:variable name="renderElement"
            select="self::hl7:nonXMLBody/hl7:text | self::hl7:observationMedia/hl7:value"/>
        <xsl:choose>
            <!-- Minimal mitigation for security risk based on malicious input -->
            <!-- if there is a reference, use that in an iframe -->
            <xsl:when test="$renderElement/hl7:reference">
                <xsl:variable name="source" select="string($renderElement/hl7:reference/@value)"/>
                <xsl:variable name="lcSource"
                    select="translate($source, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')"/>
                <xsl:variable name="scrubbedSource"
                    select="translate($source, $simple-sanitizer-match, $simple-sanitizer-replace)"/>
                <xsl:message><xsl:value-of select="$source"/>, <xsl:value-of select="$lcSource"
                    /></xsl:message>
                <xsl:choose>
                    <xsl:when test="not($source = $scrubbedSource)">
                        <fo:block>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'malicious-content-warning'"/>
                            </xsl:call-template>
                        </fo:block>
                        <xsl:message>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'malicious-content-warning'"/>
                            </xsl:call-template>
                        </xsl:message>
                    </xsl:when>
                    <xsl:when test="$renderElement[starts-with(@mediaType, 'image/')]">
                        <fo:external-graphic content-height="scale-to-fit" content-width="70%"
                            scaling="non-uniform" src="{$scrubbedSource}"> </fo:external-graphic>
                    </xsl:when>
                </xsl:choose>
            </xsl:when>
            <!-- This is an image of some sort -->
            <xsl:when test="$renderElement[starts-with(@mediaType, 'image/')]">
                <xsl:if test="$renderElement/text()">
                    <fo:external-graphic content-height="scale-to-fit" content-width="70%"
                        scaling="non-uniform">
                        <xsl:attribute name="src">
                            <xsl:value-of
                                select="normalize-space(concat('data:', $renderElement/@mediaType, ';base64,', $renderElement/text()))"
                            />
                        </xsl:attribute>
                    </fo:external-graphic>
                </xsl:if>
            </xsl:when>
            <!-- This is plain text -->
            <xsl:when test="$renderElement[not(@mediaType) or @mediaType = 'text/plain']">
                <fo:block>
                    <xsl:value-of select="$renderElement/text()"/>
                </fo:block>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>component/section: display title and text, and process any nested
                component/sections increasing margin-left as we go deeper</xd:p>
        </xd:desc>
        <xd:param name="level">Header level element to call, e.g. h1, h2 or h3</xd:param>
        <xd:param name="margin">Margin defined in em</xd:param>
    </xd:doc>
    <xsl:template name="section">
        <xsl:param name="level" select="3"/>
        <xsl:param name="margin" select="0"/>
            <fo:block xsl:use-attribute-sets="myMargin">
                <fo:block xsl:use-attribute-sets="myBlock9">
                    <xsl:call-template name="section-title">
                        <xsl:with-param name="level" select="$level"/>
                    </xsl:call-template>
                </fo:block>
                <fo:block line-height="0.1cm">&#160;</fo:block>
                <fo:block>
                    <xsl:if test="hl7:author | hl7:informant | hl7:subject">
                        <fo:block xsl:use-attribute-sets="myBlock12">
                            <xsl:call-template name="section-author"/>
                            <xsl:call-template name="section-informant"/>
                            <xsl:call-template name="section-subject"/>
                        </fo:block>
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                    </xsl:if>
                    <fo:block xsl:use-attribute-sets="myBlock15">
                        <xsl:if test="hl7:text">
                            <xsl:call-template name="section-text"/>
                        </xsl:if>
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                        <xsl:for-each select="hl7:component/hl7:section">
                            <xsl:call-template name="section">
                                <xsl:with-param name="margin" select="$margin + 2"/>
                            </xsl:call-template>
                        </xsl:for-each>
                        <xsl:if test="not(hl7:text | hl7:component/hl7:section)">
                            <xsl:text>&#160;</xsl:text>
                        </xsl:if>
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                    </fo:block>
                </fo:block>
            </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc> nested component/section </xd:desc>
        <xd:param name="margin"/>
    </xd:doc>
    <xsl:template name="nestedSection">
        <xsl:param name="margin"/>
        <fo:block margin-left="{$margin}em" font-weight="bold" font-size="8">
            <xsl:value-of select="hl7:title"/>
        </fo:block>
        <fo:block line-height="0.3cm">&#160;</fo:block>
        <fo:block margin-left="{$margin}em" font-size="8">
            <xsl:apply-templates select="hl7:text"/>
        </fo:block>
        <xsl:for-each select="hl7:component/hl7:section">
            <xsl:call-template name="nestedSection">
                <xsl:with-param name="margin" select="2 * $margin"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>


    <xd:doc>
        <xd:desc>
            <xd:p>Produces a section title with at least an anchor based on relative position in the
                document (for the Table of Contents), and a second anchor if the section has the @ID
                tag</xd:p>
        </xd:desc>
        <xd:param name="level">Header level element to call, e.g. h1, h2 or h3</xd:param>
        <xd:param name="title"/>
    </xd:doc>
    <xsl:template name="section-title">
        <xsl:param name="level" select="3"/>
        <xsl:param name="title"/>
            <fo:block>
                <xsl:attribute name="id">
                    <xsl:choose>
                        <xsl:when test="@ID">
                            <xsl:value-of select="@ID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:apply-templates select="." mode="getAnchorName"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:attribute>
                <xsl:choose>
                    <xsl:when
                        test="count(hl7:component/hl7:structuredBody/hl7:component[hl7:section]) &gt; 1">
                        <!-- Add link to go back to top if the document has more than one section, otherwise superfluous -->
                        <xsl:if test="not(hl7:templateId[@root = '1.2.250.1.213.1.1.2.243'])">
                            <fo:basic-link internal-destination="#_toc">
                                <xsl:apply-templates select="." mode="getTitleName"/>
                            </fo:basic-link>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="not(hl7:templateId[@root = '1.2.250.1.213.1.1.2.243'])">
                            <xsl:apply-templates select="." mode="getTitleName"/>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
            </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Produces a legal style of numbering for a section. E.g. 1.1, 1.2.1, 1.2.2
                etc.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:section" mode="getNumbering">
        <xsl:for-each select="ancestor-or-self::hl7:section">
            <xsl:value-of select="count(parent::hl7:component/preceding-sibling::hl7:component) + 1"/>
            <xsl:if test="position() != last()">
                <xsl:text>.</xsl:text>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Produces an anchor name suitable for the HTML &lt;a/&gt; tag</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:section" mode="getAnchorName">
        <xsl:value-of select="'section_'"/>
        <xsl:apply-templates select="." mode="getNumbering"/>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Produces a human readable section title based on its title, or code as
                fallback</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:section" mode="getTitleName">
        <xsl:if test="$dosectionnumbering = 'true'">
            <xsl:apply-templates select="." mode="getNumbering"/>
            <xsl:text> </xsl:text>
        </xsl:if>
        <xsl:choose>
            <xsl:when test="hl7:title">
                <xsl:call-template name="show-text-set">
                    <xsl:with-param name="in" select="hl7:title"/>
                    <xsl:with-param name="sep" select="', '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="hl7:code">
                <xsl:call-template name="show-code-set">
                    <xsl:with-param name="in" select="hl7:code"/>
                    <xsl:with-param name="sep" select="', '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="hl7:id">
                <xsl:call-template name="show-id-set">
                    <xsl:with-param name="in" select="hl7:id"/>
                    <xsl:with-param name="sep" select="', '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'section'"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle section author</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-author">
        <xsl:if test="hl7:author">
            <fo:block>
                <fo:block font-weight="bold">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'sectionAuthor'"/>
                        <xsl:with-param name="post" select="': '"/>
                    </xsl:call-template>
                </fo:block>
                <fo:block>
                    <xsl:for-each select="hl7:author">
                        <xsl:choose>
                            <xsl:when test="hl7:assignedAuthor/hl7:assignedPerson">
                                <xsl:call-template name="show-name-set">
                                    <xsl:with-param name="in"
                                        select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name"/>
                                </xsl:call-template>
                                <xsl:if test="hl7:assignedAuthor/hl7:assignedPerson/hl7:desc">
                                    <xsl:value-of
                                        select="hl7:assignedAuthor/hl7:assignedPerson/hl7:desc"/>
                                </xsl:if>
                                <xsl:if test="hl7:assignedAuthor/hl7:assignedPerson/hl7:birthTime">
                                    <xsl:text> </xsl:text>
                                    <xsl:call-template name="getLocalizedString">
                                        <xsl:with-param name="key" select="'birthTimeLong'"/>
                                    </xsl:call-template>
                                    <xsl:text> </xsl:text>
                                    <xsl:call-template name="show-timestamp">
                                        <xsl:with-param name="in"
                                            select="hl7:assignedAuthor/hl7:assignedPerson/hl7:birthTime"
                                        />
                                    </xsl:call-template>
                                </xsl:if>
                            </xsl:when>
                            <xsl:when test="hl7:assignedAuthor/hl7:assignedAuthoringDevice">
                                <xsl:value-of
                                    select="hl7:assignedAuthor/hl7:assignedAuthoringDevice/hl7:softwareName"
                                />
                            </xsl:when>
                            <xsl:when test="hl7:assignedAuthor/hl7:assignedDevice/hl7:softwareName">
                                <xsl:value-of
                                    select="hl7:assignedAuthor/hl7:assignedDevice/hl7:softwareName/@value"
                                />
                            </xsl:when>
                            <xsl:when test="hl7:assignedAuthor/hl7:id">
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="key" select="'id'"/>
                                    <xsl:with-param name="post" select="': '"/>
                                </xsl:call-template>
                                <xsl:call-template name="show-id-set">
                                    <xsl:with-param name="in" select="hl7:assignedAuthor/hl7:id"/>
                                </xsl:call-template>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:if test="hl7:assignedAuthor/hl7:code">
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="pre" select="' - '"/>
                                <xsl:with-param name="key" select="'code'"/>
                                <xsl:with-param name="post" select="': '"/>
                            </xsl:call-template>
                            <xsl:call-template name="show-code-set">
                                <xsl:with-param name="in" select="hl7:assignedAuthor/hl7:code"/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="hl7:assignedAuthor/hl7:representedOrganization/hl7:name">
                                <xsl:text>, </xsl:text>
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="key" select="'organization'"/>
                                    <xsl:with-param name="post" select="': '"/>
                                </xsl:call-template>
                                <xsl:call-template name="show-name-set">
                                    <xsl:with-param name="in"
                                        select="hl7:assignedAuthor/hl7:representedOrganization/hl7:name"
                                    />
                                </xsl:call-template>
                            </xsl:when>
                            <xsl:when test="hl7:assignedAuthor/hl7:representedOrganization/hl7:id">
                                <xsl:text>, </xsl:text>
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="key" select="'organization'"/>
                                    <xsl:with-param name="post" select="': '"/>
                                </xsl:call-template>
                                <xsl:call-template name="show-id-set">
                                    <xsl:with-param name="in"
                                        select="hl7:assignedAuthor/hl7:representedOrganization/hl7:id"
                                    />
                                </xsl:call-template>
                            </xsl:when>
                        </xsl:choose>
                        <xsl:if test="hl7:assignedAuthor/hl7:telecom">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                            <xsl:call-template name="show-telecom-set">
                                <xsl:with-param name="in" select="hl7:assignedAuthor/hl7:telecom"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                </fo:block>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle section informant aidant</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-informant-aidant">
        <xsl:variable name="number"
            select="count(hl7:informant/hl7:relatedEntity[@classCode = 'CAREGIVER'])"/>
        <xsl:if test="hl7:informant/hl7:relatedEntity[@classCode = 'CAREGIVER']">
            <fo:block line-height="0.4cm">&#160;</fo:block>
            <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                <fo:block xsl:use-attribute-sets="myBlock10">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="''"/>
                        <xsl:with-param name="key" select="'contactAidant'"/>
                        <xsl:with-param name="post" select="''"/>
                    </xsl:call-template>
                </fo:block>
                <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                    <fo:table-column column-number="1" column-width="40%"/>
                    <fo:table-column column-number="2" column-width="25%"/>
                    <fo:table-column column-number="3" column-width="35%"/>
                    <fo:table-body>
                        <xsl:for-each
                            select="hl7:informant/hl7:relatedEntity[@classCode = 'CAREGIVER']">
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                    <fo:block>
                                        <xsl:if test="hl7:relatedPerson/hl7:name">
                                            <xsl:call-template name="show-name-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:relatedPerson/hl7:name"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                        <xsl:if test="hl7:code/@displayName">
                                            <xsl:text> (</xsl:text>
                                            <xsl:value-of select="hl7:code/@displayName"/>
                                            <xsl:text>)</xsl:text>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:if test="./hl7:addr">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'addr'"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                    <fo:block>
                                        <xsl:if test="./hl7:addr">
                                            <xsl:call-template
                                                name="show-contactInfo-patient-recordTarget">
                                                <xsl:with-param name="contact" select="./hl7:addr"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                            <fo:table-row>
                                <fo:table-cell number-columns-spanned="1">
                                    <fo:block/>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:if test="./hl7:telecom">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                    <fo:block>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <xsl:if
                                            test="./hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:block>
                                    <xsl:if test="./hl7:telecom/@use = 'H'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'MC'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'WP'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'EC'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'HP'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'HV'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'DIR'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'PUB'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'PG'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                </fo:table-cell>
                            </fo:table-row>
                            <fo:table-row>
                                <fo:table-cell number-columns-spanned="1">
                                    <fo:block/>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:if test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'emailSecure'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                    <fo:block>
                                        <xsl:for-each
                                            select="./hl7:telecom[starts-with(@value, 'mailto')]">
                                            <xsl:if test=".">
                                                <xsl:if test="./@use">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </xsl:if>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </xsl:for-each>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                            <xsl:if test="position() &lt; ($number)">
                                <fo:table-row>
                                    <fo:table-cell number-columns-spanned="3">
                                        <fo:block>
                                            <fo:leader leader-pattern="rule" font-weight="normal"
                                                leader-length="100%" rule-thickness="0.1pt"
                                                text-align="center" color="black"/>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                        </xsl:for-each>
                    </fo:table-body>
                </fo:table>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle section informant aide</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-informant-aide">
        <xsl:if test="hl7:informant/hl7:relatedEntity[@classCode = 'PAT']">
            <fo:block line-height="0.4cm">&#160;</fo:block>
            <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                <fo:block xsl:use-attribute-sets="myBlock10">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="''"/>
                        <xsl:with-param name="key" select="'contactAide'"/>
                        <xsl:with-param name="post" select="''"/>
                    </xsl:call-template>
                </fo:block>
                <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                    <fo:table-column column-number="1" column-width="45%"/>
                    <fo:table-column column-number="2" column-width="20%"/>
                    <fo:table-column column-number="3" column-width="35%"/>
                    <fo:table-body>
                        <xsl:variable name="number"
                            select="count(hl7:informant/hl7:relatedEntity[@classCode = 'PAT'])"/>
                        <xsl:for-each select="hl7:informant/hl7:relatedEntity[@classCode = 'PAT']">
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                    <fo:block>
                                        <xsl:if test="hl7:relatedPerson/hl7:name">
                                            <xsl:call-template name="show-name-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:relatedPerson/hl7:name"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                        <xsl:if test="hl7:code">
                                            <xsl:text> (</xsl:text>
                                            <xsl:value-of select="hl7:code/@displayName"/>
                                            <xsl:text>)</xsl:text>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:if test="hl7:addr">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'addr'"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                    <fo:block>
                                        <xsl:if test="hl7:addr">
                                            <xsl:call-template
                                                name="show-contactInfo-patient-recordTarget">
                                                <xsl:with-param name="contact" select="./hl7:addr"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                            <fo:table-row>
                                <fo:table-cell>
                                    <fo:block/>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:if test="hl7:telecom">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                    <fo:block>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <xsl:if test="hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                    <xsl:if test="./hl7:telecom/@use = 'H'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'WP'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'MC'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact" select="."/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'EC'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'HP'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'HV'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'DIR'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'PUB'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                    <xsl:if test="./hl7:telecom/@use = 'PG'">
                                        <fo:block>
                                            <fo:inline color="black">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                </xsl:call-template>
                                                <xsl:text> : </xsl:text>
                                            </fo:inline>
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in" select="./hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </xsl:if>
                                </fo:table-cell>
                            </fo:table-row>
                            <fo:table-row>
                                <fo:table-cell>
                                    <fo:block/>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:if test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'emailSecure'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                    <fo:block>
                                        <xsl:for-each
                                            select="./hl7:telecom[starts-with(@value, 'mailto')]">
                                            <xsl:if test=".">
                                                <xsl:if test="./@use">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </xsl:if>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </xsl:for-each>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                            <xsl:if test="position() &lt; ($number)">
                                <fo:table-row>
                                    <fo:table-cell number-columns-spanned="3">
                                        <fo:block>
                                            <fo:leader leader-pattern="rule" font-weight="normal"
                                                leader-length="100%" rule-thickness="0.1pt"
                                                text-align="center" color="black"/>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                        </xsl:for-each>
                    </fo:table-body>
                </fo:table>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle section informant confiance</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-informant-confiance">
        <xsl:if test="hl7:informant">
            <xsl:if test="hl7:informant/hl7:relatedEntity[@classCode = 'NOK']">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:block xsl:use-attribute-sets="myBlock10">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="''"/>
                            <xsl:with-param name="key" select="'contactConfiance'"/>
                            <xsl:with-param name="post" select="''"/>
                        </xsl:call-template>
                    </fo:block>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="45%"/>
                        <fo:table-column column-number="2" column-width="20%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <xsl:variable name="number"
                                select="count(hl7:informant/hl7:relatedEntity[@classCode = 'NOK'])"/>
                            <xsl:for-each
                                select="hl7:informant/hl7:relatedEntity[@classCode = 'NOK']">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                        <fo:block>
                                            <xsl:if test="hl7:relatedPerson/hl7:name">
                                                <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedPerson/hl7:name"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                            <xsl:if test="/hl7:code">
                                                <xsl:text> (</xsl:text>
                                                <xsl:value-of select="hl7:code/@displayName"/>
                                                <xsl:text>)</xsl:text>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="./hl7:addr">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'addr'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if test="./hl7:addr">
                                                <xsl:call-template
                                                  name="show-contactInfo-patient-recordTarget">
                                                  <xsl:with-param name="contact" select="./hl7:addr"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                                <fo:table-row>
                                    <fo:table-cell>
                                        <fo:block/>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="./hl7:telecom">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if
                                                test="./hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                        <xsl:if test="./hl7:telecom/@use = 'H'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'WP'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'MC'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'EC'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'HP'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'HV'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'DIR'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'PUB'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'PG'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                    </fo:table-cell>
                                </fo:table-row>
                                <fo:table-row>
                                    <fo:table-cell>
                                        <fo:block/>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:for-each
                                                select="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:if test=".">
                                                  <xsl:if test="./@use">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </xsl:if>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                                <xsl:if test="position() &lt; ($number)">
                                    <fo:table-row>
                                        <fo:table-cell number-columns-spanned="3">
                                            <fo:block>
                                                <fo:leader leader-pattern="rule"
                                                  font-weight="normal" leader-length="100%"
                                                  rule-thickness="0.1pt" text-align="center"
                                                  color="black"/>
                                            </fo:block>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle section informant</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-informant">
        <xsl:if test="hl7:informant">
            <xsl:if test="hl7:informant/hl7:relatedEntity[@classCode = 'ECON']">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:block xsl:use-attribute-sets="myBlock10">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="''"/>
                            <xsl:with-param name="key" select="'contactUrgence'"/>
                            <xsl:with-param name="post" select="''"/>
                        </xsl:call-template>
                    </fo:block>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="45%"/>
                        <fo:table-column column-number="2" column-width="20%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <xsl:variable name="number"
                                select="count(hl7:informant/hl7:relatedEntity[@classCode = 'ECON'])"/>
                            <xsl:for-each
                                select="hl7:informant/hl7:relatedEntity[@classCode = 'ECON']">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                        <fo:block>
                                            <xsl:if test="hl7:relatedPerson/hl7:name">
                                                <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedPerson/hl7:name"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                            <xsl:if test="hl7:code">
                                                <xsl:text> (</xsl:text>
                                                <xsl:value-of select="hl7:code/@displayName"/>
                                                <xsl:text>)</xsl:text>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="./hl7:addr">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'addr'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if test="./hl7:addr">
                                                <xsl:call-template
                                                  name="show-contactInfo-patient-recordTarget">
                                                  <xsl:with-param name="contact" select="./hl7:addr"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                                <fo:table-row>
                                    <fo:table-cell>
                                        <fo:block/>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="./hl7:telecom">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if
                                                test="./hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                        <xsl:if test="./hl7:telecom/@use = 'H'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'WP'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'MC'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'EC'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'HP'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'HV'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'DIR'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'PUB'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'PG'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                    </fo:table-cell>
                                </fo:table-row>
                                <fo:table-row>
                                    <fo:table-cell>
                                        <fo:block/>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:for-each
                                                select="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:if test=".">
                                                  <xsl:if test="./@use">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </xsl:if>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                                <xsl:if test="position() &lt; ($number)">
                                    <fo:table-row>
                                        <fo:table-cell number-columns-spanned="3">
                                            <fo:block>
                                                <fo:leader leader-pattern="rule"
                                                  font-weight="normal" leader-length="100%"
                                                  rule-thickness="0.1pt" text-align="center"
                                                  color="black"/>
                                            </fo:block>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle section subject</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-subject">
        <xsl:if test="hl7:subject">
            <fo:block>
                <fo:block font-weight="bold">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'sectionSubject'"/>
                        <xsl:with-param name="post" select="': '"/>
                    </xsl:call-template>
                </fo:block>
                <fo:block>
                    <xsl:for-each select="hl7:subject">
                        <xsl:if test="hl7:relatedSubject/hl7:subject/hl7:name">
                            <xsl:call-template name="show-name-set">
                                <xsl:with-param name="in"
                                    select="hl7:relatedSubject/hl7:subject/hl7:name"/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if test="hl7:relatedSubject/hl7:code">
                            <xsl:text> - </xsl:text>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'code'"/>
                                <xsl:with-param name="post" select="': '"/>
                            </xsl:call-template>
                            <xsl:call-template name="show-code-set">
                                <xsl:with-param name="in" select="hl7:relatedSubject/hl7:code"/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if
                            test="hl7:relatedSubject/hl7:subject[*[local-name() = 'birthTime'] | *[local-name() = 'deceasedInd'] | *[local-name() = 'birthdeceasedTime'] | *[local-name() = 'multipleBirthInd'] | *[local-name() = 'multipleBirthOrderNumber']]">
                            <xsl:text>, </xsl:text>
                            <xsl:call-template name="show-birthDeathTime-multipleBirth">
                                <xsl:with-param name="in" select="hl7:relatedSubject/hl7:subject"/>
                                <xsl:with-param name="clinicalDocumentEffectiveTime"
                                    select="ancestor-or-self::hl7:ClinicalDocument/hl7:effectiveTime/@value"
                                />
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if test="hl7:relatedSubject/hl7:subject/hl7:administrativeGenderCode">
                            <xsl:text>, </xsl:text>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'administrativeGenderCode'"/>
                                <xsl:with-param name="post" select="': '"/>
                            </xsl:call-template>
                            <xsl:call-template name="show-code-set">
                                <xsl:with-param name="in"
                                    select="hl7:relatedSubject/hl7:subject/hl7:administrativeGenderCode"
                                />
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if test="
                                hl7:relatedSubject/hl7:subject/hl7:raceCode |
                                hl7:relatedSubject/hl7:subject/sdtc:raceCode">
                            <xsl:text>, </xsl:text>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'Race'"/>
                                <xsl:with-param name="post" select="': '"/>
                            </xsl:call-template>
                            <xsl:call-template name="show-code-set">
                                <xsl:with-param name="in"
                                    select="hl7:relatedSubject/hl7:subject/hl7:raceCode | hl7:relatedSubject/hl7:subject/sdtc:raceCode"
                                />
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if test="
                                hl7:relatedSubject/hl7:subject/hl7:ethnicGroupCode |
                                hl7:relatedSubject/hl7:subject/sdtc:ethnicGroupCode">
                            <xsl:text>, </xsl:text>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'Ethnicity'"/>
                                <xsl:with-param name="post" select="': '"/>
                            </xsl:call-template>
                            <xsl:call-template name="show-code-set">
                                <xsl:with-param name="in"
                                    select="hl7:relatedSubject/hl7:subject/hl7:ethnicGroupCode | hl7:relatedSubject/hl7:subject/sdtc:ethnicGroupCode"
                                />
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if test="hl7:relatedSubject/hl7:telecom">
                            <xsl:call-template name="show-telecom-set">
                                <xsl:with-param name="in" select="hl7:relatedSubject/hl7:telecom"/>
                            </xsl:call-template>
                        </xsl:if>
                    </xsl:for-each>
                </fo:block>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Puts a div or fo:block around the Section.text and hands it off to other
                templates</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="section-text">
        <fo:block>
            <xsl:apply-templates select="hl7:text"/>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle paragraph or fo:block</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:paragraph">
        <fo:block>
            <xsl:apply-templates/>
        </fo:block>
        <fo:block line-height="0.1cm">&#160;</fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle linkHtml or fo:basic-link</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:linkHtml">
        <fo:basic-link external-destination="{@href}" target-presentation-context="_blank">
            <xsl:apply-templates/>
        </fo:basic-link>
        <fo:block line-height="0.1cm">&#160;</fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle pre or fo:block</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:pre">
        <fo:block>
            <xsl:apply-templates/>
        </fo:block>
    </xsl:template>
    <xd:doc>
        <xd:desc> Content w/ deleted text is hidden </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:content[@revised = 'delete']"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle content. Content w/ deleted text is hidden</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:content">
        <fo:inline>
            <xsl:apply-templates/>
        </fo:inline>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle line break </xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:br">
        <fo:block line-height="0.2cm">&#160; <xsl:apply-templates/>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle list </xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:list">
            <xsl:if test="hl7:caption">
                <fo:list-block>
                    <fo:list-item>
                        <fo:list-item-label>
                            <fo:block margin-left="0.3cm" font-weight="bold">*</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                            <fo:block xsl:use-attribute-sets="myBlock7">
                                <xsl:apply-templates select="hl7:caption"/>
                            </fo:block>
                        </fo:list-item-body>
                    </fo:list-item>
                </fo:list-block>
            </xsl:if>
            <fo:list-block>
                <fo:list-item>
                    <fo:list-item-label>
                        <fo:block margin-left="0.3cm" font-weight="bold">*</fo:block>
                    </fo:list-item-label>
                    <fo:list-item-body>
                        <xsl:for-each select="hl7:item">
                            <fo:block xsl:use-attribute-sets="myBlock6">
                                <xsl:apply-templates/>
                            </fo:block>
                        </xsl:for-each>
                    </fo:list-item-body>
                </fo:list-item>
            </fo:list-block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle caption </xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:caption">
        <xsl:choose>
            <xsl:when test="parent::hl7:table">
                <caption>
                    <xsl:apply-templates select="." mode="handleSectionTextAttributes"/>
                    <xsl:apply-templates/>
                </caption>
            </xsl:when>
            <xsl:otherwise>
                <fo:block>
                    <xsl:apply-templates select="." mode="handleSectionTextAttributes"/>
                    <xsl:apply-templates/>
                </fo:block>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle footnote </xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:footnote">
        <xsl:variable name="id" select="@ID"/>
        <xsl:variable name="footNoteNum">
            <xsl:for-each select="//hl7:footnote">
                <xsl:if test="@ID = $id">
                    <xsl:value-of select="position()"/>
                </xsl:if>
            </xsl:for-each>
        </xsl:variable>
        <fo:block>
            <xsl:apply-templates select="." mode="handleSectionTextAttributes">
                <xsl:with-param name="class" select="'narr_footnote'"/>
            </xsl:apply-templates>
            <xsl:text>[</xsl:text>
            <xsl:value-of select="$footNoteNum"/>
            <xsl:text>]. </xsl:text>
            <xsl:apply-templates/>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle footnoteRef. Produces a superscript [n] where n is the occurence number of
                this ref in the whole document. Also adds a title with the first 50 characters of th
                footnote on the number so you don't have to navigate to the footnote and just
                continue to read.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:footnoteRef">
        <xsl:variable name="idref" select="@IDREF"/>
        <xsl:variable name="footNoteNum">
            <xsl:for-each select="//hl7:footnote">
                <xsl:if test="@ID = $idref">
                    <xsl:value-of select="position()"/>
                </xsl:if>
            </xsl:for-each>
        </xsl:variable>
        <xsl:variable name="footNoteText">
            <xsl:copy-of select="//hl7:footnote[@ID = $idref]//text()"/>
        </xsl:variable>
        <fo:inline vertical-align="super">
            <xsl:text>[</xsl:text>
            <fo:basic-link internal-destination="#{$idref}">
                <xsl:value-of select="$footNoteNum"/>
            </fo:basic-link>
        </fo:inline>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle table and constituents of table</xd:desc>
    </xd:doc>
    <xsl:template
        match="hl7:table/@* | hl7:thead/@* | hl7:tfoot/@* | hl7:tbody/@* | hl7:colgroup/@* | hl7:col/@* | hl7:tr/@* | hl7:th/@* | hl7:td/@*">
        <!-- Extension FR : PDF -->
        <xsl:copy>
            <xsl:copy-of select="@*"/>
            <xsl:apply-templates/>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:table">
            <!-- Extension FR : PDF -->
            <fo:table margin="0.3em 0" xsl:use-attribute-sets="myBorder"
                inline-progression-dimension="auto" table-layout="auto">
                <xsl:apply-templates/>
            </fo:table>
            <fo:block line-height="0.2cm">&#160;</fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle thead of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:thead">
        <!-- Extension FR : PDF -->
        <fo:table-header>
            <xsl:apply-templates/>
        </fo:table-header>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle tfoot of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:tfoot">
        <!-- Extension FR : PDF -->
        <xsl:apply-templates/>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle tbody of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:tbody">
        <!-- Extension FR : PDF -->
        <fo:table-body line-stacking-strategy="max-height">
            <xsl:apply-templates/>
        </fo:table-body>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle colgroup of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:colgroup">
        <!-- Extension FR : PDF -->
        <xsl:apply-templates/>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle column of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:col">
        <!-- Extension FR : PDF -->
        <xsl:apply-templates/>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle line of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:tr">
        <!-- Extension FR : PDF -->
            <fo:table-row border="solid 0.1mm white">
                <xsl:apply-templates/>
            </fo:table-row>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle line head of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:th">
            <!-- Extension FR : PDF -->
            <xsl:choose>
                <xsl:when test="@colspan">
                    <xsl:variable name="nb_header" select="@colspan"/>
                    <fo:table-cell xsl:use-attribute-sets="myBlock13"
                        number-columns-spanned="{$nb_header}">
                        <fo:block>
                            <xsl:apply-templates/>
                        </fo:block>
                    </fo:table-cell>
                </xsl:when>
                <xsl:when test="@rowspan">
                    <xsl:variable name="nb_header" select="@rowspan"/>
                    <fo:table-cell xsl:use-attribute-sets="myBlock13"
                        number-rows-spanned="{$nb_header}">
                        <fo:block>
                            <xsl:apply-templates/>
                        </fo:block>
                    </fo:table-cell>
                </xsl:when>
                <xsl:otherwise>
                    <fo:table-cell xsl:use-attribute-sets="myBlock13">
                        <fo:block>
                            <xsl:apply-templates/>
                        </fo:block>
                    </fo:table-cell>
                </xsl:otherwise>
            </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle column of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:td">
            <xsl:choose>
                <xsl:when test="@colspan">
                    <xsl:variable name="nb_header" select="@colspan"/>
                    <fo:table-cell xsl:use-attribute-sets="myBlock14"
                        number-columns-spanned="{$nb_header}">
                        <fo:block>
                            <xsl:apply-templates/>
                        </fo:block>
                    </fo:table-cell>
                </xsl:when>
                <xsl:when test="@rowspan">
                    <xsl:variable name="nb_header" select="@rowspan"/>
                    <fo:table-cell xsl:use-attribute-sets="myBlock14"
                        number-rows-spanned="{$nb_header}">
                        <fo:block>
                            <xsl:apply-templates/>
                        </fo:block>
                    </fo:table-cell>
                </xsl:when>
                <xsl:otherwise>
                    <fo:table-cell xsl:use-attribute-sets="myBlock14">
                        <fo:block>
                            <xsl:apply-templates/>
                        </fo:block>
                    </fo:table-cell>
                </xsl:otherwise>
            </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="hl7:td/content">
        <xsl:choose>
            <xsl:when test="@styleCode = 'Bold'">
                <fo:block font-weight="bold">
                    <xsl:apply-templates/>
                </fo:block>
            </xsl:when>
            <xsl:when test="@styleCode = 'Italics'">
                <fo:block font-style="italic">
                    <xsl:apply-templates/>
                </fo:block>
            </xsl:when>
            <xsl:when test="@styleCode = 'Underline'">
                <fo:block text-decoration="underline">
                    <xsl:apply-templates/>
                </fo:block>
            </xsl:when>
            <xsl:otherwise>
                <fo:block>
                    <xsl:copy-of select="@*"/>
                    <xsl:apply-templates/>
                </fo:block>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle caption of table</xd:desc>
    </xd:doc>
    <xsl:template match="hl7:table/hl7:caption">
        <!-- Extension FR : PDF -->
            <fo:block font-weight="bold">
                <xsl:apply-templates/>
            </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>Security measure. Only process images on the image whitelist</xd:desc>
        <xd:param name="current-whitelist"/>
        <xd:param name="image-uri"/>
        <xd:param name="altTitleText"/>
    </xd:doc>
    <xsl:template name="check-external-image-whitelist">
        <xsl:param name="current-whitelist"/>
        <xsl:param name="image-uri"/>
        <xsl:param name="altTitleText"/>
        <xsl:choose>
            <xsl:when test="string-length($current-whitelist) &gt; 0">
                <xsl:variable name="whitelist-item">
                    <xsl:choose>
                        <xsl:when test="contains($current-whitelist, '|')">
                            <xsl:value-of select="substring-before($current-whitelist, '|')"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$current-whitelist"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                    <xsl:when test="starts-with($image-uri, $whitelist-item)">
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                        <img src="{$image-uri}" alt="{$altTitleText}" title="{$altTitleText}"/>
                        <xsl:message>
                            <xsl:value-of select="$image-uri"/>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="'is-in-the-whitelist'"/>
                            </xsl:call-template>
                        </xsl:message>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="check-external-image-whitelist">
                            <xsl:with-param name="current-whitelist"
                                select="substring-after($current-whitelist, '|')"/>
                            <xsl:with-param name="image-uri" select="$image-uri"/>
                            <xsl:with-param name="altTitleText" select="$altTitleText"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <fo:block>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'non-local-image-found-1'"/>
                    </xsl:call-template>
                    <xsl:value-of select="$image-uri"/>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'non-local-image-found-2'"/>
                    </xsl:call-template>
                </fo:block>
                <xsl:message>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'non-local-image-found-1'"/>
                    </xsl:call-template>
                    <xsl:value-of select="$image-uri"/>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'non-local-image-found-2'"/>
                    </xsl:call-template>
                </xsl:message>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle RenderMultiMedia. This currently only handles GIF's and JPEG's. It could,
                however, be extended by including other image MIME types in the predicate and/or by
                generating &lt;object&gt; or &lt;applet&gt; tag with the correct params depending on
                the media type @ID =$imageRef referencedObject </xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:renderMultiMedia">
        <xsl:variable name="imageRefs" select="@referencedObject"/>
        <xsl:variable name="referencedObjects"
            select="ancestor::hl7:ClinicalDocument//hl7:regionOfInterest[@ID = $imageRefs] | ancestor::hl7:ClinicalDocument//hl7:observationMedia[@ID = $imageRefs]"/>
        <fo:block>
            <xsl:apply-templates select="hl7:caption"/>
            <xsl:for-each select="$referencedObjects">
                <xsl:choose>
                    <xsl:when test="self::hl7:regionOfInterest">
                        <!-- What we actually would want is an svg with fallback to just the image that renders the ROI on top of image
                            The only example (in the CDA standard itself) that we've seen so far has unusable coordinates. That for now
                            is not very encouraging to put in the effort, so we just render the images for now
                        -->
                        <xsl:apply-templates select=".//hl7:observationMedia"
                        > </xsl:apply-templates>
                    </xsl:when>
                    <!-- Here is where the direct MultiMedia image referencing goes -->
                    <xsl:when test="self::hl7:observationMedia">
                        <xsl:apply-templates select="."/>
                    </xsl:when>
                </xsl:choose>
            </xsl:for-each>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle superscript</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:sup">
        <fo:inline vertical-align="sup" xsl:use-attribute-sets="myBlock3">
            <xsl:apply-templates select="." mode="handleSectionTextAttributes"/>
            <xsl:apply-templates/>
        </fo:inline>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle subscript</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="hl7:sub">
        <fo:inline vertical-align="sub" xsl:use-attribute-sets="myBlock3">
            <xsl:apply-templates/>
        </fo:inline>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Attribute processing for CDAr2 and CDAr3</xd:p>
        </xd:desc>
        <xd:param name="class">If valued then this gets added to potential other class
            codes</xd:param>
    </xd:doc>
    <xsl:template match="*" mode="handleSectionTextAttributes">
        <xsl:param name="class">
            <xsl:choose>
                <xsl:when test="local-name() = 'table'">narr_table</xsl:when>
                <xsl:when test="local-name() = 'tr'">narr_tr</xsl:when>
                <xsl:when test="local-name() = 'th'">narr_th</xsl:when>
            </xsl:choose>
        </xsl:param>
        <xsl:variable name="classes">
            <xsl:if test="string-length($class)">
                <xsl:value-of select="$class"/>
            </xsl:if>
            <xsl:if test="@revised">
                <xsl:text> </xsl:text>
                <xsl:text>revision_</xsl:text>
                <xsl:value-of select="@revised"/>
                <xsl:text>_final</xsl:text>
            </xsl:if>
            <xsl:if test="@styleCode">
                <xsl:text> </xsl:text>
                <xsl:value-of select="@styleCode"/>
            </xsl:if>
            <xsl:if test="@class">
                <xsl:text> </xsl:text>
                <xsl:value-of select="@class"/>
            </xsl:if>
        </xsl:variable>
        <xsl:variable name="elem-name" select="local-name(.)"/>
        <!-- Write @class attribute if there's data for it -->
        <xsl:if test="string-length(normalize-space($classes)) > 0">
            <xsl:attribute name="class">
                <xsl:value-of select="normalize-space($classes)"/>
            </xsl:attribute>
        </xsl:if>
        <!-- Write title with @revised (CDAr1 / CDAr2) prefixing to @title if one exists already -->
        <xsl:if test="@revised">
            <xsl:attribute name="title">
                <xsl:value-of select="normalize-space(concat(@revised, ' ', @title))"/>
            </xsl:attribute>
        </xsl:if>
        <!-- Write default table cellspacing / cellpadding -->
        <xsl:if test="self::hl7:table">
            <xsl:if test="not(@cellspacing)">
                <xsl:attribute name="cellspacing">
                    <xsl:value-of select="'1'"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="not(@cellpadding)">
                <xsl:attribute name="cellpadding">
                    <xsl:value-of select="'1'"/>
                </xsl:attribute>
            </xsl:if>
        </xsl:if>
        <xsl:for-each select="@*">
            <xsl:sort select="local-name()" order="descending"/>
            <xsl:variable name="attr-name" select="local-name(.)"/>
            <xsl:variable name="attr-value" select="."/>
            <xsl:variable name="lcSource"
                select="translate($attr-value, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')"/>
            <xsl:variable name="scrubbedSource"
                select="translate($attr-value, $simple-sanitizer-match, $simple-sanitizer-replace)"/>
            <xsl:choose>
                <xsl:when test="contains($lcSource, 'javascript')">
                    <xsl:variable name="warningText">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'javascript-injection-warning'"/>
                            <xsl:with-param name="post" select="': '"/>
                        </xsl:call-template>
                    </xsl:variable>
                    <xsl:message terminate="yes">
                        <xsl:value-of select="$warningText"/>
                        <xsl:value-of select="$attr-value"/>
                    </xsl:message>
                    <xsl:if test="$attr-name = 'href'">
                        <xsl:attribute name="title">
                            <xsl:value-of
                                select="concat(normalize-space(concat(../@title, ' ', $warningText)), ' ', $attr-value)"
                            />
                        </xsl:attribute>
                    </xsl:if>
                </xsl:when>
                <xsl:when test="not($attr-value = $scrubbedSource)">
                    <xsl:variable name="warningText">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'malicious-content-warning'"/>
                            <xsl:with-param name="post" select="': '"/>
                        </xsl:call-template>
                    </xsl:variable>
                    <xsl:message>
                        <xsl:value-of select="$warningText"/>
                        <xsl:value-of select="$attr-value"/>
                    </xsl:message>
                    <xsl:if test="$attr-name = 'href'">
                        <xsl:attribute name="title">
                            <xsl:value-of
                                select="concat(normalize-space(concat(../@title, ' ', $warningText)), ' ', $attr-value)"
                            />
                        </xsl:attribute>
                    </xsl:if>
                </xsl:when>
                <xsl:when
                    test="$table-elem-attrs/elem[@name = $elem-name] and not($table-elem-attrs//elem[@name = $elem-name]/attr[@name = $attr-name])">
                    <xsl:message><xsl:value-of select="$attr-name"/> is not legal in <xsl:value-of
                            select="$elem-name"/></xsl:message>
                </xsl:when>
                <!-- Regular handling from here -->
                <xsl:when test="$attr-name = 'ID'">
                    <xsl:attribute name="id">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'class'">
                    <!-- Already handled -->
                </xsl:when>
                <xsl:when test="$attr-name = 'revised'">
                    <!-- Already handled -->
                </xsl:when>
                <xsl:when test="$attr-name = 'styleCode'">
                    <!-- Already handled -->
                </xsl:when>
                <xsl:when test="$attr-name = 'ID'">
                    <!-- @ID should be handled in a name tag, so don't add here -->
                </xsl:when>
                <xsl:when test="$attr-name = 'IDREF'">
                    <!-- @IDREF doubtful. Should be in an href attribute, but doesn't hurt to add here -->
                    <xsl:attribute name="idref">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'language'">
                    <xsl:attribute name="lang">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <!-- Table stuff -->
                <xsl:when test="$attr-name = 'border'">
                    <xsl:attribute name="border">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'frame'">
                    <xsl:attribute name="frame">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'rules'">
                    <xsl:attribute name="rules">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'cellpadding'">
                    <xsl:attribute name="cellpadding">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'cellspacing'">
                    <xsl:attribute name="cellspacing">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'span'">
                    <xsl:attribute name="span">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'summary'">
                    <xsl:attribute name="summary">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'width'">
                    <xsl:attribute name="width">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'align'">
                    <xsl:attribute name="align">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'valign'">
                    <xsl:attribute name="valign">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'char'">
                    <xsl:attribute name="char">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'charoff'">
                    <xsl:attribute name="charoff">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'abbr'">
                    <xsl:attribute name="abbr">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'scope'">
                    <xsl:attribute name="scope">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'headers'">
                    <xsl:attribute name="headers">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'axis'">
                    <xsl:attribute name="axis">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'colspan'">
                    <xsl:attribute name="colspan">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'rowspan'">
                    <xsl:attribute name="rowspan">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <!-- LinkHTML stuff -->
                <xsl:when test="$attr-name = 'name'">
                    <xsl:attribute name="name">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'rel'">
                    <xsl:attribute name="rel">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'href'">
                    <xsl:attribute name="href">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'title'">
                    <xsl:attribute name="title">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:when test="$attr-name = 'rev'">
                    <xsl:attribute name="rev">
                        <xsl:value-of select="."/>
                    </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                    <!-- For CDAr3 we might get a slew of attributes not catered for explicitly, 
                        but supposedly HTML compatible so just could add them as-is -->
                    <!-- However... CDAr3 never happened and this poses a security risk, so ignore -->
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>

    <!-- 
        ====================================
        START CDAr3 NarrativeBlock specifics
        ====================================
    -->

    <xd:doc>
        <xd:desc>
            <xd:p>Handle HTML like CDAr3 style Section.text elements that are not handled already
                above</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template
        match="hl7:a | hl7:dd | hl7:dl | hl7:img | hl7:ins | hl7:span | hl7:p | hl7:ol | hl7:ul | hl7:li">
        <fo:block>
            <xsl:apply-templates select="." mode="handleSectionTextAttributes"/>
            <xsl:apply-templates/>
        </fo:block>
    </xsl:template>

    <!-- 
        ==================================
        END CDAr3 NarrativeBlock specifics
        ==================================
    -->

    <xd:doc>
        <xd:desc>
            <xd:p>Handle the document title based on the ClinicalDocument.title,
                ClinicalDocument.code or finally just 'Clinical Document'</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="show-title">
        <xsl:variable name="documentEffectiveTime">
            <xsl:call-template name="show-timestamp">
                <xsl:with-param name="in" select="hl7:effectiveTime"/>
            </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
            <!-- CDAr2 DTr1 -->
            <xsl:when test="string-length(hl7:title) &gt; 0">
                <xsl:value-of select="hl7:title"/>
            </xsl:when>
            <!-- CDAr3 DTr2 -->
            <xsl:when test="string-length(hl7:title/@value) &gt; 0">
                <xsl:value-of select="hl7:title/@value"/>
            </xsl:when>
            <!-- CDAr2 DTr1 -->
            <xsl:when test="hl7:code/@displayName">
                <xsl:value-of select="hl7:code/@displayName"/>
            </xsl:when>
            <!-- CDAr3 DTr2 -->
            <xsl:when test="hl7:code/hl7:displayName/@value">
                <xsl:value-of select="hl7:code/hl7:displayName/@value"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'Clinical Document'"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
        <fo:block line-height="0.1cm">&#160;</fo:block>
        <fo:block font-weight="normal">
            <xsl:value-of select="normalize-space($documentEffectiveTime)"/>
        </fo:block>
        <xsl:if test="hl7:confidentialityCode[@code[not(. = 'N')]]">
            <xsl:variable name="confidentialityText">
                <xsl:for-each select="hl7:confidentialityCode">
                    <xsl:choose>
                        <xsl:when
                            test="string-length(@displayName) = 0 and @codeSystem = '2.16.840.1.113883.5.25' and (@code = 'N' or @code = 'R' or @code = 'V')">
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="key" select="concat(@codeSystem, '-', @code)"
                                />
                            </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:call-template name="show-code-set">
                                <xsl:with-param name="in" select="."/>
                            </xsl:call-template>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:variable>
            <xsl:text> </xsl:text>
            <fo:block width="1.2em" height="1.2em">
                <fo:external-graphic content-height="scale-to-fit" scaling="non-uniform">
                    <xsl:attribute name="src">
                        <xsl:value-of
                            select="normalize-space(concat('data:', 'image/png', ';base64,', 'iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAGAQYAAwAAAAEAAgAAARIAAwAAAAEAAQAAARoABQAAAAEAAABWARsABQAAAAEAAABeASgAAwAAAAEAAgAAh2kABAAAAAEAAABmAAAAAAAAAEgAAAABAAAASAAAAAEAAqACAAQAAAABAAAAFKADAAQAAAABAAAAFAAAAAAh/bHvAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC4mlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iPgogICAgICAgICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4yPC90aWZmOlJlc29sdXRpb25Vbml0PgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8dGlmZjpDb21wcmVzc2lvbj4xPC90aWZmOkNvbXByZXNzaW9uPgogICAgICAgICA8dGlmZjpQaG90b21ldHJpY0ludGVycHJldGF0aW9uPjI8L3RpZmY6UGhvdG9tZXRyaWNJbnRlcnByZXRhdGlvbj4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjUwPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAgPGV4aWY6Q29sb3JTcGFjZT4xPC9leGlmOkNvbG9yU3BhY2U+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lvbj41MDwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgqg2Ex1AAAEBElEQVQ4EX1U/29TVRQ/973X19euXRaG3V47HUwG6BwxbIyKJnMxMWz4g7ofFhP+AH8wYgxujhijEBKDBKPxN3/zB6PzBw0xoomkHQ5UQL6UzQ1qWFuUbus61m1d+/r63vWcW96LM8STnHfPPV8+93PPPS3AAyQWiymOu8T5lmzJ7CUl2/HHOHdzHB+t7N8bsgmsr6+vmi3xLX+nZ09kUrMHOIBf5DFWbN3a9n3k4dZh3cdSTu5/Mdy9w+zOmrErdun64nsfnOQtLS2IB1XScDjMj354iscvJfIzd3PdVOjUkL1BOOeCLa6e89dnrh4aHiWgNVSza2/U7o7uo71JvkMjR/jElcn0b9PTjbgHrJFo3SBjnMvkyORXh7745jsqNh7dvsM+8dEnPP7LRaEnP/6Ut7Vvp9j6V6fP8MuTM8eoBgFFLdku8kPxuGBYXC8+cyc9K/L6Bw6w/QMDJatceqe1RY++ODj4+0svD1JM/vPWDFg23482Q7HISeK+VC4XEuDF1YJUuHePYtZT+54G26xceK6v9zg57i4tf7Zj584uNLltIQa369FWUQ1UIQKQ+odSIU+wLhjUdR08sswiYR10vdnCeBuGyvgyoc2NjbCpoZ5RTn0wQPU21VEfEcNmjoGrdu3W7Nf5hfkX1ourXGYS0zQv+DSvjZcyKZFzUEqGoZQNA2zObX9dUGpo3PyDqfChaHv7CiZIkEwmvXTCQrHa/+2PP1HDueZVLU1VhU37pqYm1JC793oUzMGDsC3jF6/yazeT76JNLD1KpVKhRDDMin9+bk74n+zaw4xyGbAI1oprcCOREDlPdHayQCAIhlEGf12Anf/5nLWyUpD8fi1ChSgWPsTjwpIl2fJ4qL/ATJPGDWBxKQ96sw5nY3FGGolEYAl9JEiEFibLMjGjwReCTf1DGJZlMduu9ZdWj+qB5JWbcPTYceh9theIYnZuHg6+MgQ9e6M4MiIXbFuQd3/C7tjQIGGjCZyCHA8gG1KpFCwsijGCTCYtfCLGahhUw2ugIuYONlhVB1CgmmYVHuvogNHhw7C0vAy5fB6OjAxDR+cuqFBLHEBkev9mGwG5LCOQOJXRqZIkwfTUFLzx1gioXg0UVYVXX3sdpm4kRMxhJU4XULWPe2WGPbSqtcfw+eugalZgd3cPTCYS8PbhNzGbQ2G5ALv39CA5CbyaJhBoOJGIi6ukVVXQIob+QICSKr9OnKO11iSyHiwEYuHHx8F2iSn927aJJ/c2+Ccead16+8vTZ9qKOHu1cXCacB+bHgBRqH2WZYPm06C5KQTZzO1pOjMeB0mhf4qxsTE5zNji5WTyeQVCB217E8X/RyScPYvLkuLJ/ZXKnj01+jklj4+/b/8DWjHw0QiROMwAAAAASUVORK5CYII='))"
                        />
                    </xsl:attribute>
                </fo:external-graphic>
            </fo:block>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$confidentialityText"/>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template name="show-title-header">
        <xsl:variable name="documentEffectiveTime">
            <xsl:call-template name="show-timestamp">
                <xsl:with-param name="in" select="//hl7:ClinicalDocument/hl7:effectiveTime"/>
            </xsl:call-template>
        </xsl:variable>
        <fo:block>
            <fo:table xsl:use-attribute-sets="myBorder1" margin-left="0.1">
                <fo:table-column column-number="1" column-width="80%"/>
                <fo:table-column column-number="2" column-width="20%"/>
                <fo:table-body>
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block>
                                <xsl:choose>
                                    <!-- CDAr2 DTr1 -->
                                    <xsl:when
                                        test="string-length(//hl7:ClinicalDocument/hl7:title) &gt; 0">
                                        <xsl:value-of select="//hl7:ClinicalDocument/hl7:title"/>

                                    </xsl:when>
                                    <!-- CDAr3 DTr2 -->
                                    <xsl:when
                                        test="string-length(//hl7:ClinicalDocument/hl7:title/@value) &gt; 0">
                                        <xsl:value-of
                                            select="//hl7:ClinicalDocument/hl7:title/@value"/>
                                    </xsl:when>
                                    <!-- CDAr2 DTr1 -->
                                    <xsl:when test="//hl7:ClinicalDocument/hl7:code/@displayName">
                                        <xsl:value-of
                                            select="//hl7:ClinicalDocument/hl7:code/@displayName"/>
                                    </xsl:when>
                                    <!-- CDAr3 DTr2 -->
                                    <xsl:when
                                        test="//hl7:ClinicalDocument/hl7:code/hl7:displayName/@value">
                                        <xsl:value-of
                                            select="//hl7:ClinicalDocument/hl7:code/hl7:displayName/@value"
                                        />
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'Clinical Document'"
                                            />
                                        </xsl:call-template>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                            <fo:block>
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="pre" select="''"/>
                                    <xsl:with-param name="key" select="'nameGivenName'"/>
                                    <xsl:with-param name="post" select="''"/>
                                </xsl:call-template>
                                <xsl:text> </xsl:text>
                                <xsl:for-each
                                    select="//hl7:ClinicalDocument/hl7:recordTarget/hl7:patientRole">
                                    <xsl:if
                                        test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']">
                                        <fo:inline font-weight="bold">
                                            <xsl:call-template name="show-name-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']"
                                                />
                                            </xsl:call-template>
                                        </fo:inline>
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:variable name="count"
                                            select="count(hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)])"/>
                                        <xsl:for-each
                                            select="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                            <xsl:choose>
                                                <xsl:when test="@qualifier = &apos;BR&apos;">
                                                  <fo:inline font-weight="normal">
                                                  <xsl:value-of select="."/>
                                                  </fo:inline>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                  <fo:inline font-weight="normal">
                                                  <xsl:value-of select="."/>
                                                  </fo:inline>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:if test="$count > 1">
                                                <fo:inline font-weight="normal">
                                                  <xsl:if
                                                  test="(position() != last()) and (position() > 1)">
                                                  <xsl:text>, </xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="position() = 1">
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                </fo:inline>
                                            </xsl:if>
                                        </xsl:for-each>
                                    </xsl:if>
                                </xsl:for-each>
                            </fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block>
                                <xsl:value-of select="normalize-space($documentEffectiveTime)"/>
                            </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                            <fo:block>
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="pre" select="''"/>
                                    <xsl:with-param name="key" select="'administrativeGenderCode'"/>
                                    <xsl:with-param name="post" select="''"/>
                                </xsl:call-template>
                                <xsl:text>: </xsl:text>
                                <xsl:for-each
                                    select="//hl7:ClinicalDocument/hl7:recordTarget/hl7:patientRole">
                                    <xsl:if test="hl7:patient/hl7:administrativeGenderCode">
                                        <xsl:call-template name="show-code-set">
                                            <xsl:with-param name="in"
                                                select="hl7:patient/hl7:administrativeGenderCode"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </xsl:for-each>
                            </fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block/>
                        </fo:table-cell>
                        <fo:table-cell>
                            <fo:block>
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="pre" select="''"/>
                                    <xsl:with-param name="key" select="'birthTimeLong'"/>
                                    <xsl:with-param name="post" select="''"/>
                                </xsl:call-template>
                                <xsl:text>: </xsl:text>
                                <xsl:for-each
                                    select="//hl7:ClinicalDocument/hl7:recordTarget/hl7:patientRole">
                                    <xsl:if test="
                                            hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime'] or
                                            hl7:patient/hl7:birthTime or hl7:patient">
                                        <xsl:call-template
                                            name="show-birthDeathTime-multipleBirthDate">
                                            <xsl:with-param name="in" select="hl7:patient"/>
                                            <xsl:with-param name="clinicalDocumentEffectiveTime"
                                                select="ancestor-or-self::hl7:ClinicalDocument/hl7:effectiveTime/@value"
                                            />
                                        </xsl:call-template>
                                    </xsl:if>
                                </xsl:for-each>
                            </fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block/>
                        </fo:table-cell>
                        <fo:table-cell>
                            <fo:block>
                                <xsl:call-template name="getLocalizedString">
                                    <xsl:with-param name="pre" select="''"/>
                                    <xsl:with-param name="key" select="'MatriculeINS'"/>
                                    <xsl:with-param name="post" select="''"/>
                                </xsl:call-template>
                                <xsl:text> : </xsl:text>
                                <xsl:for-each
                                    select="//hl7:ClinicalDocument/hl7:recordTarget/hl7:patientRole">
                                    <xsl:if
                                        test="hl7:id/@root = '1.2.250.1.213.1.4.8' or hl7:id/@root = '1.2.250.1.213.1.4.9' or hl7:id/@root = '1.2.250.1.213.1.4.10' or hl7:id/@root = '1.2.250.1.213.1.4.11'">
                                        <xsl:for-each select="hl7:id">
                                            <xsl:choose>
                                                <xsl:when test="@root = '1.2.250.1.213.1.4.8'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[NIR]</xsl:text>
                                                </xsl:when>
                                                <xsl:when test="@root = '1.2.250.1.213.1.4.9'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[NIA]</xsl:text>
                                                </xsl:when>
                                                <xsl:when test="@root = '1.2.250.1.213.1.4.10'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[TEST]</xsl:text>
                                                </xsl:when>
                                                <xsl:when test="@root = '1.2.250.1.213.1.4.11'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[DEMO]</xsl:text>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                  <xsl:text>&#160;</xsl:text>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xsl:for-each>
                                    </xsl:if>
                                </xsl:for-each>
                            </fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                </fo:table-body>
            </fo:table>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show patients, guardians, consents, encounters, serviceEvents, orders and
                authors</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="show-header">
        <xsl:if test="hl7:recordTarget/hl7:patientRole">
            <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                <fo:table xsl:use-attribute-sets="myBorder">
                    <fo:table-column column-number="1" column-width="35%"/>
                    <fo:table-column column-number="2" column-width="50%"/>
                    <fo:table-column column-number="3" column-width="15%"/>
                    <fo:table-body>
                        <xsl:for-each select="hl7:recordTarget/hl7:patientRole">
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                    <fo:block>
                                        <xsl:if
                                            test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'family'"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock6">
                                    <fo:block>
                                        <xsl:if
                                            test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']">
                                            <xsl:call-template name="show-name-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']"
                                                />
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <xsl:variable name="row1">
                                    <xsl:if
                                        test="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if
                                        test="not(hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row10">
                                    <xsl:if
                                        test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if
                                        test="not(hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR'])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row2">
                                    <xsl:if test="hl7:patient/hl7:administrativeGenderCode/@code">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if
                                        test="not(hl7:patient/hl7:administrativeGenderCode/@code)">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row3">
                                    <xsl:if
                                        test="hl7:patient/hl7:birthTime[@value] or hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime']">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if
                                        test="not(hl7:patient/hl7:birthTime[@value] or hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime'])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row4">
                                    <xsl:if
                                        test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:country">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if
                                        test="not(hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:country)">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row5">
                                    <xsl:if test="hl7:id[@root = '1.2.250.1.213.1.4.8']">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if test="not(hl7:id[@root = '1.2.250.1.213.1.4.8'])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row6">
                                    <xsl:if test="hl7:id[@root = '1.2.250.1.213.1.4.9']">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if test="not(hl7:id[@root = '1.2.250.1.213.1.4.9'])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row7">
                                    <xsl:if test="hl7:id[@root = '1.2.250.1.213.1.4.10']">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if test="not(hl7:id[@root = '1.2.250.1.213.1.4.10'])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row8">
                                    <xsl:if test="hl7:id[@root = '1.2.250.1.213.1.4.11']">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if test="not(hl7:id[@root = '1.2.250.1.213.1.4.11'])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row9">
                                    <xsl:if test="hl7:telecom[starts-with(@value, 'mailto')]">
                                        <xsl:value-of select="1"/>
                                    </xsl:if>
                                    <xsl:if test="not(hl7:telecom[starts-with(@value, 'mailto')])">
                                        <xsl:value-of select="0"/>
                                    </xsl:if>
                                </xsl:variable>
                                <xsl:variable name="row"
                                    select="$row7 + $row8 + $row9 + $row6 + $row5 + $row4 + $row3 + $row2 + $row1 + $row10"/>
                                <fo:table-cell number-rows-spanned="{$row}">
                                    <fo:block>
                                        <xsl:variable name="ins"
                                            select="translate(hl7:id[@root = '1.2.250.1.213.1.4.8']/@extension, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
                                        <xsl:variable name="countP"
                                            select="count(hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)])"/>
                                        <xsl:variable name="name">
                                            <xsl:for-each
                                                select="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                                <xsl:value-of
                                                  select="translate(., 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
                                                <xsl:if test="$countP > 1">
                                                  <xsl:if
                                                  test="(position() != last()) and (position() >= 1)">
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </xsl:variable>
                                        <xsl:variable name="given"
                                            select="translate(hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR'], 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
                                        <xsl:variable name="sex"
                                            select="hl7:patient/hl7:administrativeGenderCode/@code"/>
                                        <xsl:variable name="datebirth">
                                            <xsl:if test="hl7:patient/hl7:birthTime">
                                                <xsl:call-template name="show-timestamp-matrix">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:birthTime"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </xsl:variable>
                                        <xsl:variable name="country"
                                            select="translate(hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:county, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
                                        <xsl:if test="
                                                string-length($ins) > 0 and string-length($name) > 0 and string-length($given) > 0
                                                and string-length($sex) > 0 and string-length($datebirth) > 0 and string-length($country) > 0">
                                            <xsl:variable name="matrix" select="
                                                    concat('IS010000000000000000000000', 'S1',
                                                    $ins, 'S2', '1.2.250.1.213.1.4.8', 'GS', 'S3',
                                                    $name, 'GS', 'S4', $given, 'GS', 'S5', $sex, 'S6', $datebirth, 'S7', $country)"/>
                                            <fo:block text-align="center">
                                                <fo:instream-foreign-object>
                                                  <j4lbarcode mode="inline"
                                                  xmlns="http://java4less.com/j4lbarcode/fop">
                                                  <datamatrix>
                                                  <code>
                                                  <xsl:value-of select="$matrix"/>
                                                  </code>
                                                  <moduleSize>2</moduleSize>
                                                  <processTilde>true</processTilde>
                                                  <encoding>C40</encoding>
                                                  <format>C24X24</format>
                                                  </datamatrix>
                                                  </j4lbarcode>
                                                </fo:instream-foreign-object>
                                                <fo:block line-height="0.01cm">&#160;</fo:block>
                                                <fo:block text-align="center" font-size="4">
                                                  <xsl:text>INS à scanner</xsl:text>
                                                </fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="
                                                string-length($ins) > 0 and string-length($name) > 0 and string-length($given) > 0 and string-length($sex) > 0
                                                and string-length($datebirth) > 0 and not($country)">
                                            <xsl:variable name="matrixOpt" select="
                                                    concat('IS010000000000000000000000', 'S1',
                                                    $ins, 'S2', '1.2.250.1.213.1.4.8', 'GS', 'S3',
                                                    $name, 'GS', 'S4', $given, 'GS', 'S5', $sex, 'S6', $datebirth)"/>
                                            <fo:block text-align="center">
                                                <fo:instream-foreign-object>
                                                  <j4lbarcode mode="inline"
                                                  xmlns="http://java4less.com/j4lbarcode/fop">
                                                  <datamatrix>
                                                  <code>
                                                  <xsl:value-of select="$matrixOpt"/>
                                                  </code>
                                                  <moduleSize>2</moduleSize>
                                                  <processTilde>true</processTilde>
                                                  <encoding>C40</encoding>
                                                  <format>C24X24</format>
                                                  </datamatrix>
                                                  </j4lbarcode>
                                                </fo:instream-foreign-object>
                                                <fo:block line-height="0.01cm">&#160;</fo:block>
                                                <fo:block text-align="center" font-size="4">
                                                  <xsl:text>INS à scanner</xsl:text>
                                                </fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if
                                            test="string-length($ins) = 0 or string-length($name) = 0 or string-length($given) = 0 or string-length($sex) = 0 or string-length($datebirth) = 0">
                                            <fo:block text-align="center"/>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>

                            </fo:table-row>

                            <xsl:if
                                test="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                        <fo:block>
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'given'"/>
                                            </xsl:call-template>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock6">
                                        <fo:block>
                                            <xsl:variable name="count"
                                                select="count(hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)])"/>
                                            <xsl:for-each
                                                select="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                                <xsl:choose>
                                                  <xsl:when test="@qualifier = &apos;BR&apos;">
                                                  <fo:inline font-weight="bold">
                                                  <xsl:value-of select="."/>
                                                  </fo:inline>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <fo:inline font-weight="normal">
                                                  <xsl:value-of select="."/>
                                                  </fo:inline>
                                                  </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:if test="$count > 1">
                                                  <xsl:if
                                                  test="(position() != last()) and (position() > 1)">
                                                  <fo:inline font-weight="normal">
                                                  <xsl:text>, </xsl:text>
                                                  </fo:inline>
                                                  </xsl:if>
                                                  <xsl:if test="position() = 1">
                                                  <fo:inline font-weight="normal">
                                                  <xsl:text> [</xsl:text>
                                                  </fo:inline>
                                                  </xsl:if>
                                                  <xsl:if test="position() = last()">
                                                  <fo:inline font-weight="normal">
                                                  <xsl:text>]</xsl:text>
                                                  </fo:inline>
                                                  </xsl:if>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:patient/hl7:administrativeGenderCode[@code]">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                        <fo:block>
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'administrativeGenderCode'"/>
                                            </xsl:call-template>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                        <fo:block>
                                            <xsl:call-template name="show-code-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:administrativeGenderCode"
                                                />
                                            </xsl:call-template>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if
                                test="hl7:patient/hl7:birthTime[@value] or hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime']">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                        <fo:block>
                                            <xsl:choose>
                                                <xsl:when
                                                  test="hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime']">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'birthTimeLongDeceased'"/>
                                                  </xsl:call-template>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'birthTimeLong'"/>
                                                  </xsl:call-template>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </fo:block>
                                    </fo:table-cell>
                                    <xsl:if test="hl7:patient/hl7:birthTime[@value]">
                                        <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                            <fo:block>
                                                <xsl:call-template name="show-timestamp-patient">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:birthTime"/>
                                                </xsl:call-template>
                                                <xsl:if
                                                  test="hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime']">
                                                  <xsl:text> - &#8224; </xsl:text>
                                                  <xsl:choose>
                                                  <xsl:when
                                                  test="hl7:patient/*[local-name() = 'deceasedTime'][@value]">
                                                  <xsl:call-template name="show-timestamp-patient">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/*[local-name() = 'deceasedTime']"
                                                  />
                                                  </xsl:call-template>
                                                  </xsl:when>
                                                  <xsl:when
                                                  test="hl7:patient/*[local-name() = 'deceasedInd'][@nullFlavor]">
                                                  <xsl:call-template name="show-nullFlavor">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/*[local-name() = 'deceasedInd']/@nullFlavor"
                                                  />
                                                  </xsl:call-template>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'date_unknown'"
                                                  />
                                                  </xsl:call-template>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                    </xsl:if>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                        <fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock4">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'birthPlace'"/>
                                                </xsl:call-template>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock5">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'codeINSEE'"/>
                                                </xsl:call-template>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                        <fo:block>
                                            <xsl:variable name="country"
                                                select="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:county"/>
                                            <xsl:variable name="city"
                                                select="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:city"/>
                                            <xsl:if
                                                test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:county">
                                                <xsl:value-of select="$country"/>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:city">
                                                <xsl:text> | </xsl:text>
                                                <xsl:value-of select="$city"/>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if
                                test="hl7:id/@root = '1.2.250.1.213.1.4.8' or hl7:id/@root = '1.2.250.1.213.1.4.9' or hl7:id/@root = '1.2.250.1.213.1.4.10' or hl7:id/@root = '1.2.250.1.213.1.4.11'">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                        <fo:block>
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'MatriculeINS'"/>
                                            </xsl:call-template>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                        <fo:block>
                                            <xsl:for-each select="hl7:id">
                                                <xsl:choose>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.8'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[NIR]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.9'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[NIA]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.10'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[TEST]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.11'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[DEMO]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <xsl:text>&#160;</xsl:text>
                                                  </xsl:otherwise>
                                                </xsl:choose>
                                            </xsl:for-each>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:telecom[starts-with(@value, 'mailto')]">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock2">
                                        <fo:block>
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'mailto'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                        <fo:block>
                                            <xsl:for-each
                                                select="hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="type"
                                                  select="substring-before(@value, ':')"/>
                                                <xsl:if test="./@use">
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                </xsl:if>
                                                <xsl:if test="$type = 'mailto'">
                                                  <xsl:call-template name="show-telecom-patient">
                                                  <xsl:with-param name="telecom" select="."/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                        </xsl:for-each>
                    </fo:table-body>
                </fo:table>
            </fo:block>
        </xsl:if>
        <fo:block line-height="0.6cm">&#160;</fo:block>
        <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
            <fo:table xsl:use-attribute-sets="myBorder">
                <fo:table-column column-number="1" column-width="35%"/>
                <fo:table-column column-number="2" column-width="65%"/>
                <fo:table-body>
                    <xsl:if
                        test="hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock8">
                                <fo:block>
                                    <xsl:call-template name="getLocalizedString">
                                        <xsl:with-param name="key" select="'Encounter'"/>
                                    </xsl:call-template>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                <fo:block>
                                    <xsl:call-template name="show-represented-organization"/>
                                    <xsl:text> </xsl:text>
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                    <xsl:call-template name="show-effective-time"/>
                                </fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:if>
                    <xsl:if test="hl7:documentationOf/hl7:serviceEvent">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock8">
                                <fo:block>
                                    <xsl:call-template name="getLocalizedString">
                                        <xsl:with-param name="key" select="'actes'"/>
                                    </xsl:call-template>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                <fo:block>
                                    <xsl:call-template name="show-actes"/>
                                    <xsl:text> </xsl:text>
                                </fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:if>
                    <xsl:if test="hl7:author">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock8">
                                <fo:block>
                                    <xsl:call-template name="getLocalizedString">
                                        <xsl:with-param name="key" select="'typeCode-AUT'"/>
                                    </xsl:call-template>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock7">
                                <fo:block>
                                    <xsl:call-template name="show-authors"/>
                                    <xsl:text> </xsl:text>
                                </fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:if>
                </fo:table-body>
            </fo:table>
            <fo:block line-height="0.1cm">&#160;</fo:block>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show identifiant</xd:p>
        </xd:desc>
        <xd:param name="id"/>
    </xd:doc>
    <xsl:template name="show-identifiant">
        <xsl:param name="id"/>
        <xsl:choose>
            <xsl:when test="not($id)">
                <xsl:if test="not(@nullFlavor)">
                    <xsl:if test="@extension">
                        <xsl:value-of select="@extension"/>
                    </xsl:if>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:if test="not($id/@nullFlavor)">
                    <xsl:if test="$id/@extension">
                        <xsl:value-of select="$id/@extension"/>
                    </xsl:if>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header authors</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="show-authors">
        <xsl:for-each select="hl7:author">
            <xsl:if test="hl7:assignedAuthor/hl7:assignedPerson">
                <xsl:if test="hl7:assignedAuthor/hl7:assignedPerson/hl7:name">
                    <xsl:variable name="suffix"
                        select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                    <xsl:variable name="prefix"
                        select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                    <xsl:variable name="given"
                        select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given"/>
                    <xsl:variable name="family"
                        select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family"/>
                    <xsl:if test="not($suffix)">
                        <xsl:value-of select="$prefix"/>
                        <xsl:text> </xsl:text>
                    </xsl:if>
                    <xsl:if test="$suffix">
                        <xsl:value-of select="$suffix"/>
                        <xsl:text> </xsl:text>
                    </xsl:if>
                    <xsl:value-of select="$given"/>
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$family"/>
                    <xsl:if test="hl7:assignedAuthor/hl7:representedOrganization/hl7:name">
                        <xsl:text> (</xsl:text>
                        <xsl:value-of
                            select="hl7:assignedAuthor/hl7:representedOrganization/hl7:name"/>
                        <xsl:text>)</xsl:text>
                    </xsl:if>
                </xsl:if>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:if>
            <xsl:if test="hl7:time">
                <xsl:variable name="time" select="hl7:time"/>
                <xsl:call-template name="show-timestamp">
                    <xsl:with-param name="in" select="$time"/>
                </xsl:call-template>
            </xsl:if>
            <xsl:if test="position() != last()">
                <fo:block>
                    <fo:leader leader-pattern="rule" leader-length="100%" rule-thickness="0.1pt"
                        text-align="center" color="black"/>
                </fo:block>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header actes</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="show-actes">
        <xsl:for-each select="hl7:documentationOf">
            <xsl:if test="hl7:serviceEvent/hl7:code/@code">
                <xsl:variable name="displayName" select="hl7:serviceEvent/hl7:code/@displayName"/>
                <xsl:variable name="code" select="hl7:serviceEvent/hl7:code/@code"/>
                <xsl:value-of select="$displayName"/>
                <xsl:text> (</xsl:text>
                <xsl:value-of select="$code"/>
                <xsl:text>)</xsl:text>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:if>
            <xsl:if test="hl7:serviceEvent/hl7:effectiveTime">
                <xsl:if
                    test="hl7:serviceEvent/hl7:effectiveTime/hl7:high and hl7:serviceEvent/hl7:effectiveTime/hl7:low">
                    <fo:inline color="black">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'du'"/>
                        </xsl:call-template>
                    </fo:inline>
                    <xsl:variable name="low" select="hl7:serviceEvent/hl7:effectiveTime/hl7:low"/>
                    <xsl:variable name="high" select="hl7:serviceEvent/hl7:effectiveTime/hl7:high"/>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$low"/>
                    </xsl:call-template>
                    <fo:inline color="black">
                        <xsl:text> </xsl:text>
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'au'"/>
                        </xsl:call-template>
                    </fo:inline>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$high"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if
                    test="not(hl7:serviceEvent/hl7:effectiveTime/hl7:high) and (hl7:serviceEvent/hl7:effectiveTime/hl7:low)">
                    <xsl:variable name="low" select="hl7:serviceEvent/hl7:effectiveTime/hl7:low"/>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$low"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if
                    test="(hl7:serviceEvent/hl7:effectiveTime/hl7:high) and not(hl7:serviceEvent/hl7:effectiveTime/hl7:low)">
                    <xsl:variable name="high" select="hl7:serviceEvent/hl7:effectiveTime/hl7:high"/>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$high"/>
                    </xsl:call-template>
                </xsl:if>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:if>
            <xsl:if test="hl7:serviceEvent/hl7:performer">
                <xsl:if test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity">
                    <xsl:if
                        test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                        <xsl:variable name="suffix"
                            select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                        <xsl:variable name="prefix"
                            select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                        <xsl:variable name="given"
                            select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                        <xsl:variable name="family"
                            select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                        <xsl:if test="not($suffix)">
                            <xsl:value-of select="$prefix"/>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if test="$suffix">
                            <xsl:value-of select="$suffix"/>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="$given"/>
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="$family"/>
                    </xsl:if>
                    <xsl:if
                        test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                        <xsl:text> (</xsl:text>
                        <xsl:value-of
                            select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:name"/>
                        <xsl:text>)</xsl:text>
                    </xsl:if>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:if>
                <xsl:if test="position() != last()">
                    <fo:block>
                        <fo:leader leader-pattern="rule" leader-length="100%" rule-thickness="0.1pt"
                            text-align="left" color="black"/>
                    </fo:block>
                </xsl:if>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header represented organization</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="show-represented-organization">
        <xsl:for-each select="hl7:componentOf/hl7:encompassingEncounter">
            <xsl:if
                test="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                <xsl:variable name="name"
                    select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:name"/>
                <xsl:value-of select="$name"/>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header effective time</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="show-effective-time">
        <xsl:for-each select="hl7:componentOf">
            <xsl:if test="hl7:encompassingEncounter/hl7:effectiveTime">
                <xsl:if
                    test="hl7:encompassingEncounter/hl7:effectiveTime/hl7:high and hl7:encompassingEncounter/hl7:effectiveTime/hl7:low">
                    <fo:inline color="black">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'du'"/>
                        </xsl:call-template>
                    </fo:inline>
                    <xsl:variable name="low"
                        select="hl7:encompassingEncounter/hl7:effectiveTime/hl7:low"/>
                    <xsl:variable name="high"
                        select="hl7:encompassingEncounter/hl7:effectiveTime/hl7:high"/>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$low"/>
                    </xsl:call-template>
                    <fo:inline color="black">
                        <xsl:text> </xsl:text>
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'au'"/>
                        </xsl:call-template>
                        <xsl:text> </xsl:text>
                    </fo:inline>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$high"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if
                    test="not(hl7:encompassingEncounter/hl7:effectiveTime/hl7:high) and hl7:encompassingEncounter/hl7:effectiveTime/hl7:low">
                    <xsl:variable name="low"
                        select="hl7:encompassingEncounter/hl7:effectiveTime/hl7:low"/>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$low"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if
                    test="not(hl7:encompassingEncounter/hl7:effectiveTime/hl7:low) and hl7:encompassingEncounter/hl7:effectiveTime/hl7:high">
                    <xsl:variable name="high"
                        select="hl7:encompassingEncounter/hl7:effectiveTime/hl7:high"/>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$high"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:if>
            <fo:block line-height="0.1cm">&#160;</fo:block>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header componentOf</xd:p>
        </xd:desc>
    </xd:doc>
    
    <xsl:template name="componentOf">
        <xsl:if test="hl7:componentOf">
            <xsl:if test="hl7:componentOf/hl7:encompassingEncounter">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="30%"/>
                        <fo:table-column column-number="2" column-width="35%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'Encounter'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'typeCode-RESP'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'organizationPartOf'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </fo:table-body>
                    </fo:table>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="30%"/>
                        <fo:table-column column-number="2" column-width="35%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <xsl:for-each select="hl7:componentOf/hl7:encompassingEncounter">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if test="hl7:effectiveTime/hl7:low">
                                                <fo:inline xsl:use-attribute-sets="myBlock10">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Onset'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in"
                                                  select="hl7:effectiveTime/hl7:low"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:effectiveTime/hl7:high">
                                                <fo:inline xsl:use-attribute-sets="myBlock10">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Last Occurrence'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in"
                                                  select="hl7:effectiveTime/hl7:high"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:code/@code">
                                                <fo:inline xsl:use-attribute-sets="myBlock10">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'type'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:value-of select="hl7:code/@code"/>
                                                  <xsl:text>) </xsl:text>
                                                  <xsl:value-of select="hl7:code/@displayName"/>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                <xsl:variable name="suffix"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                <xsl:variable name="prefix"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                <xsl:variable name="given"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                <xsl:variable name="family"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:value-of select="$given"/>
                                                <xsl:text> </xsl:text>
                                                <xsl:value-of select="$family"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:id/@root">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:id/@extension"/>
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:code/@code">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:text>(</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:code/@code"/>
                                                  <xsl:text>) </xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:code/@displayName"
                                                  />
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:addr">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity"/>
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom
                                                    and string-length($telExist) > 0">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'WP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'EC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'MC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'H'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'HP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'HV'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'DIR'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'PUB'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:telecom/@use = 'PG'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline>
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:for-each
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                                <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:name"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"/>
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom
                                                    and string-length($telExist) > 0">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline>
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:for-each
                                                  select="hl7:responsibleParty/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header documentationOf</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="documentationOf">
        <xsl:if test="hl7:documentationOf">
            <xsl:if test="hl7:documentationOf/hl7:serviceEvent[@classCode | hl7:code]">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="30%"/>
                        <fo:table-column column-number="2" column-width="35%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'documentationOf'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key"
                                                select="'2.16.840.1.113883.5.90-PRF'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'organizationPartOf'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </fo:table-body>
                    </fo:table>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="30%"/>
                        <fo:table-column column-number="2" column-width="35%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <xsl:for-each select="hl7:documentationOf">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if test="hl7:serviceEvent/hl7:code/@displayName">
                                                <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:code/@displayName"/>
                                            </xsl:if>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="hl7:serviceEvent/hl7:code/@code">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:code/@code"/>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock10">
                                                <xsl:if test="hl7:serviceEvent/hl7:id">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'id'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="hl7:serviceEvent/hl7:id/@extension">
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:id/@extension"/>
                                                </xsl:if>
                                                <xsl:if test="hl7:serviceEvent/hl7:id/@root">
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock10">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:effectiveTime/hl7:low">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Onset'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:effectiveTime/hl7:low">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:effectiveTime/hl7:low"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock10">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:effectiveTime/hl7:high">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Last Occurrence'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:effectiveTime/hl7:high">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:effectiveTime/hl7:high"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                <xsl:variable name="suffix"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                <xsl:variable name="prefix"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                <xsl:variable name="given"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                <xsl:variable name="family"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:value-of select="$given"/>
                                                <xsl:text> </xsl:text>
                                                <xsl:value-of select="$family"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:id/@extension">
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:id/@extension"
                                                  />
                                                </xsl:if>
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:id/@root">
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:code/@code">
                                                  <xsl:text>(</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:code/@code"/>
                                                  <xsl:text>) </xsl:text>
                                                </xsl:if>
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:code/@displayName">
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:code/@displayName"
                                                  />
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:addr">
                                                  <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:addr"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:variable name="telExist">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:variable>
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom
                                                        and string-length($telExist) > 0">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:variable name="telExist">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:variable>
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom
                                                        and string-length($telExist) > 0">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'WP'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'WP'">
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'EC'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'EC'">
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'MC'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'MC'">
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'H'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'H'">
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'HP'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'HP'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'HV'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'HV'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'DIR'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'DIR'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'PUB'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'PUB'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'PG'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom/@use = 'PG'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline>
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:for-each
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                                <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:name"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension">
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"
                                                  />
                                                </xsl:if>
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if
                                                  test="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                                  <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:variable name="telExist">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:variable>
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom
                                                        and string-length($telExist) > 0">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:variable name="telExist">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:variable>
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom
                                                        and string-length($telExist) > 0">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline color="black" font-weight="normal">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline xsl:use-attribute-sets="myBlock11">
                                                <xsl:if test="
                                                        not(hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@nullFlavor)
                                                        and hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:inline>
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:for-each
                                                  select="hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header inFulfillmentOf</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="inFulfillmentOf">
        <xsl:if test="hl7:inFulfillmentOf">
            <xsl:if test="hl7:inFulfillmentOf">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:block xsl:use-attribute-sets="myBlock10">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="''"/>
                            <xsl:with-param name="key" select="'typeCode-FLFS'"/>
                            <xsl:with-param name="post" select="''"/>
                        </xsl:call-template>
                    </fo:block>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="100%"/>
                        <fo:table-body>
                            <xsl:for-each select="hl7:inFulfillmentOf">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if test="hl7:order/hl7:id/@root">
                                                <fo:inline xsl:use-attribute-sets="myBlock10">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'id'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:value-of select="hl7:order/hl7:id/@extension"/>
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of select="hl7:order/hl7:id/@root"/>
                                                  <xsl:text>] </xsl:text>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:order/ps3-20:accessionNumber">
                                                <fo:inline xsl:use-attribute-sets="myBlock10">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'AccessionNumber'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:value-of
                                                  select="hl7:order/ps3-20:accessionNumber/@extension"/>
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:order/ps3-20:accessionNumber/@root"/>
                                                  <xsl:text>] </xsl:text>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header participant</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="participant">
        <xsl:if test="hl7:participant">
            <xsl:if test="hl7:participant">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="30%"/>
                        <fo:table-column column-number="2" column-width="35%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'Participants'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'Prescriber'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                    <fo:block>
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="pre" select="''"/>
                                            <xsl:with-param name="key" select="'organizationPartOf'"/>
                                            <xsl:with-param name="post" select="''"/>
                                        </xsl:call-template>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </fo:table-body>
                    </fo:table>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="30%"/>
                        <fo:table-column column-number="2" column-width="35%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <xsl:for-each select="hl7:participant">
                                <fo:table-row keep-together="always">
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if test="hl7:associatedEntity">
                                                <xsl:variable name="participtRole">
                                                  <xsl:call-template
                                                  name="show-participationTypeOrCode">
                                                  <xsl:with-param name="typeCode" select="@typeCode"/>
                                                  <xsl:with-param name="classCode"
                                                  select="hl7:associatedEntity/@classCode"/>
                                                  <xsl:with-param name="code"
                                                  select="hl7:associatedEntity/hl7:code"/>
                                                  <xsl:with-param name="funcionCode"
                                                  select="hl7:functionCode/@code"/>
                                                  </xsl:call-template>
                                                </xsl:variable>
                                                <fo:inline font-weight="bold" color="black">
                                                  <xsl:choose>
                                                  <xsl:when test="string-length($participtRole) > 0">
                                                  <xsl:call-template name="firstCharCaseUp">
                                                  <xsl:with-param name="data"
                                                  select="$participtRole"/>
                                                  </xsl:call-template>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'participant'"
                                                  />
                                                  </xsl:call-template>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="(hl7:time/hl7:low) and (hl7:time/hl7:high)">
                                                <xsl:variable name="low" select="hl7:time/hl7:low"/>
                                                <xsl:variable name="high" select="hl7:time/hl7:high"/>
                                                <fo:inline xsl:use-attribute-sets="myBlock10"
                                                  color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Start'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in" select="$low"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                                <fo:inline xsl:use-attribute-sets="myBlock10">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'End'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in" select="$high"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="not(hl7:time/hl7:high) and (hl7:time/hl7:low)">
                                                <xsl:variable name="low" select="hl7:time/hl7:low"/>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Start'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline font-weight="normal">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in" select="$low"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                            </xsl:if>
                                            <xsl:if
                                                test="(hl7:time/hl7:high) and not(hl7:time/hl7:low)">
                                                <xsl:variable name="high" select="hl7:time/hl7:high"/>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'End'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline font-weight="normal">
                                                  <xsl:call-template name="show-timestamp">
                                                  <xsl:with-param name="in" select="$high"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:functionCode/hl7:originalText">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'comment'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline font-weight="normal">
                                                  <xsl:value-of
                                                  select="hl7:functionCode/hl7:originalText"/>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:associatedEntity/hl7:associatedPerson/hl7:name">
                                                <xsl:variable name="suffix"
                                                  select="hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:suffix"/>
                                                <xsl:variable name="prefix"
                                                  select="hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:prefix"/>
                                                <xsl:variable name="given"
                                                  select="hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given"/>
                                                <xsl:variable name="family"
                                                  select="hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family"/>
                                                <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:value-of select="$given"/>
                                                <xsl:text> </xsl:text>
                                                <xsl:value-of select="$family"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:associatedEntity/hl7:id/@root">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:id/@extension"/>
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:associatedEntity/hl7:code/@code">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:text>(</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:code/@code"/>
                                                  <xsl:text>) </xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:code/@displayName"
                                                  />
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:associatedEntity/hl7:addr">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity"/>
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom
                                                    and string-length($telExist) > 0">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'WP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'EC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'MC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'H'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'HP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'HV'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'DIR'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'PUB'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:telecom/@use = 'PG'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:telecom"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline>
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9"
                                        border="solid 0.1mm black">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:associatedEntity/hl7:scopingOrganization/hl7:name">
                                                <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:name"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:associatedEntity/hl7:scopingOrganization/hl7:id/@root">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:id/@extension"/>
                                                  <xsl:text> [</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:id/@root"/>
                                                  <xsl:text>]</xsl:text>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:associatedEntity/hl7:scopingOrganization/hl7:addr">
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization"
                                                  />
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom
                                                    and string-length($telExist) > 0">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'WP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'EC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'MC'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'H'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'HP'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'HV'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'DIR'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'PUB'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="
                                                    not(hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@nullFlavor)
                                                    and hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom/@use = 'PG'">
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <fo:inline xsl:use-attribute-sets="myBlock11">
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom"
                                                  />
                                                  </xsl:call-template>
                                                </fo:inline>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline>
                                                <fo:inline color="black" font-weight="normal">
                                                  <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle general document propreties (id + creation time)</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="documentGeneral">
        <fo:block line-height="0.4cm">&#160;</fo:block>
        <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
            <fo:block xsl:use-attribute-sets="myBlock10">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="pre" select="''"/>
                    <xsl:with-param name="key" select="'Document'"/>
                    <xsl:with-param name="post" select="''"/>
                </xsl:call-template>
            </fo:block>
            <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                <fo:table-column column-number="1" column-width="30%"/>
                <fo:table-column column-number="2" column-width="35%"/>
                <fo:table-column column-number="3" column-width="35%"/>
                <fo:table-body>
                    <xsl:if test="
                            hl7:code or hl7:id or hl7:setId or hl7:versionNumber or hl7:relatedDocument/hl7:parentDocument/hl7:id/@root or hl7:effectiveTime or
                            hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock10" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <xsl:if test="hl7:code">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'type'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:id">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'identifiant'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:setId">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'lotdeversions'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:versionNumber">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'versionNumber'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:relatedDocument/hl7:parentDocument/hl7:id/@root">
                                        <xsl:if
                                            test="hl7:relatedDocument[@typeCode = 'RPLC']/hl7:parentDocument/hl7:id">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'relatedDocument'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if
                                            test="hl7:relatedDocument[@typeCode = 'XFRM']/hl7:parentDocument/hl7:id">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'Reference_Document'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test="hl7:effectiveTime">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'creationDate'"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <xsl:if test="hl7:code/@code">
                                        <xsl:text>(</xsl:text>
                                        <xsl:value-of select="hl7:code/@code"/>
                                        <xsl:text>) </xsl:text>
                                        <xsl:value-of select="hl7:code/@displayName"/>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:id/@root">
                                        <xsl:text>[</xsl:text>
                                        <xsl:value-of select="hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:setId">
                                        <xsl:text>[</xsl:text>
                                        <xsl:value-of select="hl7:setId/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:versionNumber">
                                        <xsl:value-of select="hl7:versionNumber/@value"/>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:relatedDocument/hl7:parentDocument/hl7:id/@root">
                                        <xsl:if
                                            test="hl7:relatedDocument[@typeCode = 'RPLC']/hl7:parentDocument/hl7:id or hl7:relatedDocument[@typeCode = 'XFRM']/hl7:parentDocument/hl7:id">
                                            <xsl:text>[</xsl:text>
                                            <xsl:value-of select="hl7:id/@root"/>
                                            <xsl:text>]</xsl:text>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </xsl:if>
                                    <xsl:if test="hl7:effectiveTime">
                                        <xsl:call-template name="show-timestamp">
                                            <xsl:with-param name="in" select="hl7:effectiveTime"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <fo:block color="black">
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'custodian'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:block>
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                    <fo:block font-weight="bold">
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name">
                                            <xsl:value-of
                                                select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name"
                                            />
                                        </xsl:if>
                                    </fo:block>
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                    <xsl:if
                                        test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:id/@root">
                                        <xsl:value-of
                                            select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of
                                            select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization"
                                                  />
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if test="
                                                    hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom
                                                    and string-length($telExist) > 0">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization"
                                                />
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <xsl:if test="
                                                hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom
                                                and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'WP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'H'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'HP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'HV'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'DIR'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'PUB'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'EC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'MC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'PG'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in"
                                                  select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>

                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:for-each
                                                select="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="email" select="."/>
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                                <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                                <xsl:text>: </xsl:text>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:for-each>
                                        </fo:inline>
                                    </fo:inline>
                                </fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:if>
                    <xsl:for-each select="hl7:author">
                        <xsl:if
                            test="hl7:assignedAuthor/hl7:assignedPerson or hl7:assignedAuthor/hl7:assignedAuthoringDevice">
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10"
                                    border-width="0.1mm" border-style="solid">
                                    <fo:block>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:assignedPerson/hl7:name or hl7:assignedAuthor/hl7:assignedAuthoringDevice/hl7:softwareName">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'typeCode-AUT'"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                    border-width="0.1mm" border-style="solid">
                                    <fo:block>
                                        <fo:inline>
                                            <fo:inline font-weight="bold">
                                                <xsl:if
                                                  test="hl7:assignedAuthor/hl7:assignedPerson/hl7:name">
                                                  <xsl:variable name="suffix"
                                                  select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                  <xsl:variable name="prefix"
                                                  select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                  <xsl:variable name="given"
                                                  select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                  <xsl:variable name="family"
                                                  select="hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                  <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:value-of select="$given"/>
                                                  <xsl:text> </xsl:text>
                                                  <xsl:value-of select="$family"/>
                                                  <xsl:text>, </xsl:text>
                                                </xsl:if>
                                                <xsl:if
                                                  test="hl7:assignedAuthor/hl7:assignedAuthoringDevice/hl7:softwareName">
                                                  <xsl:variable name="name"
                                                  select="hl7:assignedAuthor/hl7:assignedAuthoringDevice/hl7:softwareName"/>
                                                  <xsl:value-of select="$name"/>
                                                  <xsl:text>,  </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if test="hl7:time">
                                                <xsl:text> le </xsl:text>
                                                <xsl:call-template name="show-timestamp-document">
                                                  <xsl:with-param name="in" select="hl7:time"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:inline>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                        <xsl:if test="hl7:assignedAuthor/hl7:id/@root">
                                            <xsl:value-of
                                                select="hl7:assignedAuthor/hl7:id/@extension"/>
                                            <xsl:text> [</xsl:text>
                                            <xsl:value-of select="hl7:assignedAuthor/hl7:id/@root"/>
                                            <xsl:text>]</xsl:text>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if test="hl7:assignedAuthor/hl7:code/@code">
                                            <xsl:text>(</xsl:text>
                                            <xsl:value-of select="hl7:assignedAuthor/hl7:code/@code"/>
                                            <xsl:text>) </xsl:text>
                                            <xsl:value-of
                                                select="hl7:assignedAuthor/hl7:code/@displayName"/>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if test="hl7:assignedAuthor/hl7:addr">
                                            <xsl:call-template name="show-address-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:addr"/>
                                                <xsl:with-param name="sep" select="'br'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor"/>
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'WP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'H'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'HP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'HV'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'DIR'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'PUB'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'EC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'MC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:telecom/@use = 'PG'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedAuthor/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline>
                                            <fo:inline color="black">
                                                <xsl:for-each
                                                  select="hl7:assignedAuthor/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:for-each>
                                            </fo:inline>
                                        </fo:inline>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                    border-width="0.1mm" border-style="solid">
                                    <fo:block>
                                        <fo:block font-weight="bold">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:name">
                                                <xsl:value-of
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:name"
                                                />
                                            </xsl:if>
                                        </fo:block>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:id/@root">
                                            <xsl:value-of
                                                select="hl7:assignedAuthor/hl7:representedOrganization/hl7:id/@extension"/>
                                            <xsl:text> [</xsl:text>
                                            <xsl:value-of
                                                select="hl7:assignedAuthor/hl7:representedOrganization/hl7:id/@root"/>
                                            <xsl:text>]</xsl:text>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:addr">
                                            <xsl:call-template name="show-address-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:addr"/>
                                                <xsl:with-param name="sep" select="'br'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>

                                        <fo:inline>
                                            <fo:inline color="black">
                                                <xsl:for-each
                                                  select="hl7:assignedAuthor/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:for-each>
                                            </fo:inline>
                                        </fo:inline>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:if test="hl7:dataEnterer">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock10" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'typeCode-ENT'"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <fo:inline>
                                        <fo:inline font-weight="bold">
                                            <xsl:if
                                                test="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                <xsl:variable name="prefix"
                                                  select="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                <xsl:variable name="suffix"
                                                  select="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                <xsl:variable name="given"
                                                  select="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                <xsl:variable name="family"
                                                  select="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:value-of select="$given"/>
                                                <xsl:text> </xsl:text>
                                                <xsl:value-of select="$family"/>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:dataEnterer/hl7:time">
                                            <xsl:text>, le </xsl:text>
                                            <xsl:call-template name="show-timestamp-document">
                                                <xsl:with-param name="in"
                                                  select="hl7:dataEnterer/hl7:time"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                    <xsl:if test="hl7:dataEnterer/hl7:assignedEntity/hl7:id/@root">
                                        <xsl:value-of
                                            select="hl7:dataEnterer/hl7:assignedEntity/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of
                                            select="hl7:dataEnterer/hl7:assignedEntity/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:dataEnterer/hl7:assignedEntity/hl7:code/@code">
                                        <xsl:text>(</xsl:text>
                                        <xsl:value-of
                                            select="hl7:dataEnterer/hl7:assignedEntity/hl7:code/@code"/>
                                        <xsl:text>) </xsl:text>
                                        <xsl:value-of
                                            select="hl7:dataEnterer/hl7:assignedEntity/hl7:code/@displayName"/>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:dataEnterer/hl7:assignedEntity/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                        <fo:block font-weight="bold">
                                            <xsl:value-of
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:name"
                                            />
                                        </fo:block>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                        <xsl:value-of
                                            select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of
                                            select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:variable name="telExist">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                    </xsl:variable>
                                    <fo:inline color="black">
                                        <xsl:if test="
                                                hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom
                                                and string-length($telExist) > 0">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'Tel'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'Tel_travail'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                        <xsl:call-template name="show-telecom-travail">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'Tel_domicile'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                        <xsl:call-template name="show-telInfo-patient">
                                            <xsl:with-param name="contact"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                        <xsl:call-template name="show-telecom-domicile-principal">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                        <xsl:call-template name="show-telecom-domicile-vaccance">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_directe">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_public">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'Tel_urgence'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                        <xsl:call-template name="show-telecom-urgence">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key" select="'Tel_mobile'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                        <xsl:call-template name="show-telInfo-patient-mobile">
                                            <xsl:with-param name="contact"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_beeper">
                                            <xsl:with-param name="in"
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:for-each
                                                select="hl7:dataEnterer/hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="email" select="."/>
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                                <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                                <xsl:text>: </xsl:text>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:for-each>
                                        </fo:inline>
                                    </fo:inline>
                                </fo:block>
                                <fo:block line-height="0.1cm">&#160;</fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:if>
                    <xsl:if test="hl7:informant/hl7:relatedEntity/@classCode = 'CON'">
                        <xsl:for-each select="hl7:informant">
                            <xsl:if test="hl7:relatedEntity/@classCode = 'CON'">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10"
                                        border-width="0.1mm" border-style="solid">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:relatedEntity/hl7:relatedPerson/hl7:name">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'typeCode-INF'"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                        border-width="0.1mm" border-style="solid">
                                        <fo:block>
                                            <fo:inline>
                                                <fo:inline font-weight="bold">
                                                  <xsl:if
                                                  test="hl7:relatedEntity/hl7:relatedPerson/hl7:name">
                                                  <xsl:variable name="prefix"
                                                  select="hl7:relatedEntity/hl7:relatedPerson/hl7:name/hl7:prefix"/>
                                                  <xsl:variable name="suffix"
                                                  select="hl7:relatedEntity/hl7:relatedPerson/hl7:name/hl7:suffix"/>
                                                  <xsl:variable name="given"
                                                  select="hl7:relatedEntity/hl7:relatedPerson/hl7:name/hl7:given"/>
                                                  <xsl:variable name="family"
                                                  select="hl7:relatedEntity/hl7:relatedPerson/hl7:name/hl7:family"/>
                                                  <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:value-of select="$given"/>
                                                  <xsl:text> </xsl:text>
                                                  <xsl:value-of select="$family"/>
                                                  </xsl:if>
                                                </fo:inline>
                                                <xsl:if test="hl7:relatedEntity/hl7:code">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:value-of
                                                  select="hl7:relatedEntity/hl7:code/@displayName"/>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <xsl:if test="hl7:relatedEntity/hl7:addr">
                                                <xsl:call-template
                                                  name="show-contactInfo-patient-recordTarget">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:relatedEntity/hl7:addr"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:relatedEntity"/>
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if
                                                test="hl7:relatedEntity/hl7:telecom and string-length($telExist) > 0">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:relatedEntity"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'H'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:relatedEntity"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'MC'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:relatedEntity"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'WP'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_travail'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'HP'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'HV'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:relatedEntity/hl7:telecom/@use = 'DIR'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:relatedEntity/hl7:telecom/@use = 'PUB'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'EC'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if test="hl7:relatedEntity/hl7:telecom/@use = 'PG'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:relatedEntity/hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline>
                                                <fo:inline color="black">
                                                  <xsl:for-each
                                                  select="hl7:relatedEntity/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell border-width="0.1mm" border-style="solid">
                                        <fo:block/>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                        </xsl:for-each>
                    </xsl:if>
                    <xsl:if test="hl7:informant/hl7:assignedEntity">
                        <xsl:for-each select="hl7:informant">
                            <xsl:if test="hl7:assignedEntity">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10"
                                        border-width="0.1mm" border-style="solid">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'typeCode-INF'"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                        border-width="0.1mm" border-style="solid">
                                        <fo:block>
                                            <fo:block font-weight="bold">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                  <xsl:variable name="suffix"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                  <xsl:variable name="prefix"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                  <xsl:variable name="given"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                  <xsl:variable name="family"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                  <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:value-of select="$given"/>
                                                  <xsl:text> </xsl:text>
                                                  <xsl:value-of select="$family"/>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:block>
                                            <xsl:if test="hl7:assignedEntity/hl7:id/@root">
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:id/@extension"/>
                                                <xsl:text> [</xsl:text>
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:id/@root"/>
                                                <xsl:text>]</xsl:text>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:name"/>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"/>
                                                <xsl:text> [</xsl:text>
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                                <xsl:text>]</xsl:text>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                                <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_travail'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>

                                            <fo:inline>
                                                <fo:inline color="black">
                                                  <xsl:for-each
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                        border-width="0.1mm" border-style="solid">
                                        <fo:block>
                                            <fo:block font-weight="bold">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                                  <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:name"
                                                  />
                                                </xsl:if>
                                            </fo:block>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"/>
                                                <xsl:text> [</xsl:text>
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                                <xsl:text>]</xsl:text>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                                <xsl:call-template name="show-address-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:variable name="telExist">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                            </xsl:variable>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_travail'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline color="black">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  <xsl:text>: </xsl:text>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <fo:inline>
                                                <fo:inline color="black">
                                                  <xsl:for-each
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:for-each>
                                                </fo:inline>
                                            </fo:inline>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                        </xsl:for-each>
                    </xsl:if>
                    <xsl:if test="hl7:authenticator/hl7:assignedEntity">
                        <xsl:for-each select="hl7:authenticator">
                            <fo:table-row>
                                <fo:table-cell xsl:use-attribute-sets="myBlock10"
                                    border-width="0.1mm" border-style="solid">
                                    <fo:block>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="key"
                                                  select="'typeCode-AUTHEN'"/>
                                            </xsl:call-template>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                    border-width="0.1mm" border-style="solid">
                                    <fo:block>
                                        <fo:inline>
                                            <fo:inline font-weight="bold">
                                                <xsl:if
                                                  test="hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                  <xsl:variable name="suffix"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                  <xsl:variable name="prefix"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                  <xsl:variable name="given"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                  <xsl:variable name="family"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                  <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                  </xsl:if>
                                                  <xsl:value-of select="$given"/>
                                                  <xsl:text> </xsl:text>
                                                  <xsl:value-of select="$family"/>
                                                </xsl:if>
                                            </fo:inline>
                                            <xsl:if test="hl7:time">
                                                <xsl:text>, le </xsl:text>
                                                <xsl:call-template name="show-timestamp-document">
                                                  <xsl:with-param name="in" select="hl7:time"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:assignedEntity/hl7:id/@root">
                                            <xsl:value-of
                                                select="hl7:assignedEntity/hl7:id/@extension"/>
                                            <xsl:text> [</xsl:text>
                                            <xsl:value-of select="hl7:assignedEntity/hl7:id/@root"/>
                                            <xsl:text>]</xsl:text>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if test="hl7:assignedEntity/hl7:code/@code">
                                            <xsl:text>(</xsl:text>
                                            <xsl:value-of select="hl7:assignedEntity/hl7:code/@code"/>
                                            <xsl:text>) </xsl:text>
                                            <xsl:value-of
                                                select="hl7:assignedEntity/hl7:code/@displayName"/>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                            <xsl:call-template name="show-address-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                                <xsl:with-param name="sep" select="'br'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_travail'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline>
                                            <fo:inline color="black">
                                                <xsl:for-each
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:for-each>
                                            </fo:inline>
                                        </fo:inline>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell xsl:use-attribute-sets="myBlock11"
                                    border-width="0.1mm" border-style="solid">
                                    <fo:block>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                            <fo:block font-weight="bold">
                                                <xsl:value-of
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:name"
                                                />
                                            </fo:block>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                            <xsl:value-of
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"/>
                                            <xsl:text> [</xsl:text>
                                            <xsl:value-of
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                            <xsl:text>]</xsl:text>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                            <xsl:call-template name="show-address-set">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                                <xsl:with-param name="sep" select="'br'"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:variable name="telExist">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="show-telInfo">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_travail'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="show-telecom-travail">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="show-telecom-urgence">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="show-telInfo-patient-mobile">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="show-telInfo-patient">
                                                <xsl:with-param name="contact"
                                                  select="hl7:assignedEntity/hl7:representedOrganization"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-principal">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="show-telecom-domicile-vaccance">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_directe">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedAuthor/hl7:telecom"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_public">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline color="black">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <xsl:text>: </xsl:text>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template
                                                name="show-telecom-domicile-numero_beeper">
                                                <xsl:with-param name="in"
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <fo:inline>
                                            <fo:inline color="black">
                                                <xsl:for-each
                                                  select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:variable name="email" select="."/>
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                  </xsl:if>
                                                  <xsl:text>: </xsl:text>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:for-each>
                                            </fo:inline>
                                        </fo:inline>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </xsl:for-each>
                    </xsl:if>
                    <xsl:for-each select="hl7:legalAuthenticator">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock10" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <xsl:if test="hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'typeCode-LA'"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <fo:inline>
                                        <fo:inline font-weight="bold">
                                            <xsl:if
                                                test="hl7:assignedEntity/hl7:assignedPerson/hl7:name">
                                                <xsl:variable name="suffix"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:suffix"/>
                                                <xsl:variable name="prefix"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:prefix"/>
                                                <xsl:variable name="given"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given"/>
                                                <xsl:variable name="family"
                                                  select="hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family"/>
                                                <xsl:if test="not($suffix)">
                                                  <xsl:value-of select="$prefix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:if test="$suffix">
                                                  <xsl:value-of select="$suffix"/>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:value-of select="$given"/>
                                                <xsl:text> </xsl:text>
                                                <xsl:value-of select="$family"/>
                                            </xsl:if>
                                        </fo:inline>
                                        <xsl:if test="hl7:time">
                                            <xsl:text>, le </xsl:text>
                                            <xsl:call-template name="show-timestamp-document">
                                                <xsl:with-param name="in" select="hl7:time"/>
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:id/@root">
                                        <xsl:value-of select="hl7:assignedEntity/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of select="hl7:assignedEntity/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:assignedEntity/hl7:code/@code">
                                        <xsl:text>(</xsl:text>
                                        <xsl:value-of select="hl7:assignedEntity/hl7:code/@code"/>
                                        <xsl:text>) </xsl:text>
                                        <xsl:value-of
                                            select="hl7:assignedEntity/hl7:code/@displayName"/>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:assignedEntity/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:variable name="telExist">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity"/>
                                        </xsl:call-template>
                                    </xsl:variable>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:telecom and string-length($telExist) > 0">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_travail'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'WP'">
                                        <xsl:call-template name="show-telecom-travail">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'EC'">
                                        <xsl:call-template name="show-telecom-urgence">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'MC'">
                                        <xsl:call-template name="show-telInfo-patient-mobile">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'H'">
                                        <xsl:call-template name="show-telInfo-patient">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'HP'">
                                        <xsl:call-template name="show-telecom-domicile-principal">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'HV'">
                                        <xsl:call-template name="show-telecom-domicile-vaccance">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'DIR'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_directe">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'PUB'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_public">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:assignedEntity/hl7:telecom/@use = 'PG'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_beeper">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:for-each
                                                select="hl7:assignedEntity/hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="email" select="."/>
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                                <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                                <xsl:text>: </xsl:text>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:for-each>
                                        </fo:inline>
                                    </fo:inline>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <fo:block font-weight="bold">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:name">
                                            <xsl:value-of
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:name"
                                            />
                                        </xsl:if>
                                    </fo:block>
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root">
                                        <xsl:value-of
                                            select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of
                                            select="hl7:assignedEntity/hl7:representedOrganization/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:variable name="telExist">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                    </xsl:variable>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom and string-length($telExist) > 0">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_travail'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'WP'">
                                        <xsl:call-template name="show-telecom-travail">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'EC'">
                                        <xsl:call-template name="show-telecom-urgence">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'MC'">
                                        <xsl:call-template name="show-telInfo-patient-mobile">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedAuthor"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'H'">
                                        <xsl:call-template name="show-telInfo-patient">
                                            <xsl:with-param name="contact"
                                                select="hl7:assignedEntity/hl7:representedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HP'">
                                        <xsl:call-template name="show-telecom-domicile-principal">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'HV'">
                                        <xsl:call-template name="show-telecom-domicile-vaccance">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'DIR'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_directe">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PUB'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_public">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom/@use = 'PG'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_beeper">
                                            <xsl:with-param name="in"
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:for-each
                                                select="hl7:assignedEntity/hl7:representedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="email" select="."/>
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                                <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                                <xsl:text>: </xsl:text>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:for-each>
                                        </fo:inline>
                                    </fo:inline>
                                </fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:for-each>
                    <xsl:for-each select="hl7:informationRecipient">
                        <fo:table-row>
                            <fo:table-cell xsl:use-attribute-sets="myBlock10" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:informationRecipient/hl7:name">
                                        <xsl:call-template name="getLocalizedString">
                                            <xsl:with-param name="key" select="'typeCode-PRCP'"/>
                                        </xsl:call-template>
                                    </xsl:if>
                                </fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <fo:block font-weight="bold">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:informationRecipient/hl7:name">
                                            <xsl:variable name="suffix"
                                                select="hl7:intendedRecipient/hl7:informationRecipient/hl7:name/hl7:suffix"/>
                                            <xsl:variable name="prefix"
                                                select="hl7:intendedRecipient/hl7:informationRecipient/hl7:name/hl7:prefix"/>
                                            <xsl:variable name="given"
                                                select="hl7:intendedRecipient/hl7:informationRecipient/hl7:name/hl7:given"/>
                                            <xsl:variable name="family"
                                                select="hl7:intendedRecipient/hl7:informationRecipient/hl7:name/hl7:family"/>
                                            <xsl:if test="not($suffix)">
                                                <xsl:value-of select="$prefix"/>
                                                <xsl:text> </xsl:text>
                                            </xsl:if>
                                            <xsl:if test="$suffix">
                                                <xsl:value-of select="$suffix"/>
                                                <xsl:text> </xsl:text>
                                            </xsl:if>
                                            <xsl:value-of select="$given"/>
                                            <xsl:text> </xsl:text>
                                            <xsl:value-of select="$family"/>
                                        </xsl:if>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </fo:block>
                                    <xsl:if test="hl7:intendedRecipient/hl7:id/@root">
                                        <xsl:value-of
                                            select="hl7:intendedRecipient/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of select="hl7:intendedRecipient/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:intendedRecipient/hl7:code/@code">
                                        <xsl:text>(</xsl:text>
                                        <xsl:value-of select="hl7:intendedRecipient/hl7:code/@code"/>
                                        <xsl:text>) </xsl:text>
                                        <xsl:value-of
                                            select="hl7:intendedRecipient/hl7:code/@displayName"/>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if test="hl7:intendedRecipient/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:variable name="telExist">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient"/>
                                        </xsl:call-template>
                                    </xsl:variable>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:telecom and string-length($telExist) > 0">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_travail'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'WP'">
                                        <xsl:call-template name="show-telecom-travail">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'EC'">
                                        <xsl:call-template name="show-telecom-urgence">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'MC'">
                                        <xsl:call-template name="show-telInfo-patient-mobile">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'H'">
                                        <xsl:call-template name="show-telInfo-patient">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'HP'">
                                        <xsl:call-template name="show-telecom-domicile-principal">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'HV'">
                                        <xsl:call-template name="show-telecom-domicile-vaccance">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'DIR'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_directe">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'PUB'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_public">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if test="hl7:intendedRecipient/hl7:telecom/@use = 'PG'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_beeper">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:telecom"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:for-each
                                                select="hl7:intendedRecipient/hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="email" select="."/>
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                                <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                                <xsl:text>: </xsl:text>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:for-each>
                                        </fo:inline>
                                    </fo:inline>
                                </fo:block>
                                <fo:block line-height="0.1cm">&#160;</fo:block>
                            </fo:table-cell>
                            <fo:table-cell xsl:use-attribute-sets="myBlock11" border-width="0.1mm"
                                border-style="solid">
                                <fo:block>
                                    <fo:block font-weight="bold">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:name">
                                            <xsl:value-of
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:name"
                                            />
                                        </xsl:if>
                                    </fo:block>
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:id/@root">
                                        <xsl:value-of
                                            select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:id/@extension"/>
                                        <xsl:text> [</xsl:text>
                                        <xsl:value-of
                                            select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:id/@root"/>
                                        <xsl:text>]</xsl:text>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:addr">
                                        <xsl:call-template name="show-address-set">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:addr"/>
                                            <xsl:with-param name="sep" select="'br'"/>
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <xsl:variable name="telExist">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization"
                                            />
                                        </xsl:call-template>
                                    </xsl:variable>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom and string-length($telExist) > 0">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom and string-length($telExist) > 0">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'WP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_travail'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'WP'">
                                        <xsl:call-template name="show-telecom-travail">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'EC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_urgence'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'EC'">
                                        <xsl:call-template name="show-telecom-urgence">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'MC'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'MC'">
                                        <xsl:call-template name="show-telInfo-patient-mobile">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'H'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key" select="'Tel_domicile'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'H'">
                                        <xsl:call-template name="show-telInfo-patient">
                                            <xsl:with-param name="contact"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'HP'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'HP'">
                                        <xsl:call-template name="show-telecom-domicile-principal">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'HV'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'HV'">
                                        <xsl:call-template name="show-telecom-domicile-vaccance">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'DIR'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'DIR'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_directe">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'PUB'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'PUB'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_public">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline color="black">
                                        <xsl:if
                                            test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'PG'">
                                            <xsl:call-template name="getLocalizedString">
                                                <xsl:with-param name="pre" select="''"/>
                                                <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                <xsl:with-param name="post" select="''"/>
                                            </xsl:call-template>
                                            <xsl:text>: </xsl:text>
                                        </xsl:if>
                                    </fo:inline>
                                    <xsl:if
                                        test="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom/@use = 'PG'">
                                        <xsl:call-template
                                            name="show-telecom-domicile-numero_beeper">
                                            <xsl:with-param name="in"
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom"
                                            />
                                        </xsl:call-template>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                    </xsl:if>
                                    <fo:inline>
                                        <fo:inline color="black">
                                            <xsl:for-each
                                                select="hl7:intendedRecipient/hl7:receivedOrganization/hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:variable name="email" select="."/>
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                                <xsl:if test="$email/@use">
                                                  <xsl:text> (</xsl:text>
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="$email/@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text>)</xsl:text>
                                                </xsl:if>
                                                <xsl:text>: </xsl:text>
                                                <xsl:call-template name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </xsl:for-each>
                                        </fo:inline>
                                    </fo:inline>
                                </fo:block>
                            </fo:table-cell>
                        </fo:table-row>
                    </xsl:for-each>
                </fo:table-body>
            </fo:table>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header guardian</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="guardian">
        <xsl:if test="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:guardian">
            <xsl:if test="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:guardian">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:block xsl:use-attribute-sets="myBlock10">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="''"/>
                            <xsl:with-param name="key" select="'Guardian'"/>
                            <xsl:with-param name="post" select="''"/>
                        </xsl:call-template>
                    </fo:block>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="45%"/>
                        <fo:table-column column-number="2" column-width="20%"/>
                        <fo:table-column column-number="3" column-width="35%"/>
                        <fo:table-body>
                            <xsl:for-each
                                select="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:guardian">
                                <xsl:if test="hl7:guardianPerson/hl7:name or ./hl7:addr">
                                    <fo:table-row>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                            <fo:block>
                                                <xsl:if test="hl7:guardianPerson/hl7:name">
                                                  <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:guardianPerson/hl7:name"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                            <fo:block>
                                                <xsl:if test="./hl7:addr">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'addr'"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                            <fo:block>
                                                <xsl:if test="./hl7:addr">
                                                  <xsl:call-template
                                                  name="show-contactInfo-patient-recordTarget">
                                                  <xsl:with-param name="contact" select="./hl7:addr"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>
                                <xsl:if test="./hl7:telecom">
                                    <fo:table-row>
                                        <fo:table-cell>
                                            <fo:block/>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                            <fo:block>
                                                <xsl:if test="./hl7:telecom">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                            <fo:block>
                                                <xsl:variable name="telExist">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:variable>
                                                <xsl:if
                                                  test="./hl7:telecom and string-length($telExist) > 0">
                                                  <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:block>
                                            <xsl:if test="./hl7:telecom/@use = 'H'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'WP'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'MC'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'EC'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'HP'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'HV'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'DIR'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'PUB'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                            <xsl:if test="./hl7:telecom/@use = 'PG'">
                                                <fo:block>
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </fo:block>
                                            </xsl:if>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>

                                <xsl:if test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                    <fo:table-row>
                                        <fo:table-cell>
                                            <fo:block/>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                            <fo:block>
                                                <xsl:if
                                                  test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'emailSecure'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                            <fo:block>
                                                <xsl:for-each
                                                  select="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                  <xsl:if test=".">
                                                  <xsl:if test="./@use">
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  </xsl:if>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                  </xsl:if>
                                                </xsl:for-each>
                                            </fo:block>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>
                                <xsl:if test="position() != last()">
                                    <fo:table-row>
                                        <fo:table-cell number-columns-spanned="3">
                                            <fo:block>
                                                <fo:leader leader-pattern="rule"
                                                  font-weight="normal" leader-length="100%"
                                                  rule-thickness="0.1pt" text-align="center"
                                                  color="black"/>
                                            </fo:block>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header recordTarget</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="recordTarget">
        <xsl:if test="hl7:recordTarget/hl7:patientRole/hl7:patient">
            <fo:block line-height="0.4cm">&#160;</fo:block>
            <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                <fo:block xsl:use-attribute-sets="myBlock10">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="''"/>
                        <xsl:with-param name="key" select="'recordTarget'"/>
                        <xsl:with-param name="post" select="''"/>
                    </xsl:call-template>
                </fo:block>
                <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                    <fo:table-column column-number="1" column-width="25%"/>
                    <fo:table-column column-number="2" column-width="25%"/>
                    <fo:table-column column-number="3" column-width="20%"/>
                    <fo:table-column column-number="4" column-width="30%"/>
                    <fo:table-body>
                        <xsl:for-each select="hl7:recordTarget/hl7:patientRole">
                            <xsl:if
                                test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR'] or ./hl7:addr">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'family'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']">
                                                <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'BR']"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="./hl7:addr">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'addr'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if test="./hl7:addr">
                                                <xsl:call-template
                                                  name="show-contactInfo-patient-recordTarget">
                                                  <xsl:with-param name="contact" select="./hl7:addr"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if
                                test="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                <fo:table-row>
                                    <xsl:if
                                        test="count(hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]) > 0">
                                        <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                            <fo:block>
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'givenName'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                            <fo:block>
                                                <xsl:variable name="count"
                                                  select="count(hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)])"/>
                                                <xsl:for-each
                                                  select="hl7:patient/hl7:name[1]/hl7:given[@qualifier != &apos;CL&apos; or not(@qualifier)]">
                                                  <xsl:choose>
                                                  <xsl:when test="@qualifier = &apos;BR&apos;">
                                                  <fo:inline font-weight="bold">
                                                  <xsl:value-of select="."/>
                                                  </fo:inline>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <fo:inline font-weight="normal">
                                                  <xsl:value-of select="."/>
                                                  </fo:inline>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                  <xsl:if test="$count > 1">
                                                  <fo:inline font-weight="normal">
                                                  <xsl:if
                                                  test="(position() != last()) and (position() > 1)">
                                                  <xsl:text>, </xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="position() = 1">
                                                  <xsl:text> [</xsl:text>
                                                  </xsl:if>
                                                  <xsl:if test="position() = last()">
                                                  <xsl:text>]</xsl:text>
                                                  </xsl:if>
                                                  </fo:inline>
                                                  </xsl:if>
                                                </xsl:for-each>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell number-columns-spanned="2">
                                            <fo:block/>
                                        </fo:table-cell>
                                    </xsl:if>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'CL']">
                                <fo:table-row>
                                    <xsl:if
                                        test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'CL']">
                                        <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                            <fo:block>
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'nameGiven'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                            <fo:block>
                                                <xsl:if
                                                  test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'CL']">
                                                  <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'CL']"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> </xsl:text>
                                                </xsl:if>
                                                <xsl:if
                                                  test="hl7:patient/hl7:name[1]/hl7:given[@qualifier = 'CL']">
                                                  <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:name[1]/hl7:given[@qualifier = 'CL']"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell number-columns-spanned="2">
                                            <fo:block/>
                                        </fo:table-cell>
                                    </xsl:if>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'SP']">
                                <fo:table-row>
                                    <xsl:if
                                        test="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'SP']">
                                        <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                            <fo:block>
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'nameUse_L'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                            <fo:block>
                                                <xsl:call-template name="show-name-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:name[1]/hl7:family[@qualifier = 'SP']"
                                                  />
                                                </xsl:call-template>
                                            </fo:block>
                                        </fo:table-cell>
                                        <fo:table-cell number-columns-spanned="2">
                                            <fo:block/>
                                        </fo:table-cell>
                                    </xsl:if>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="
                                    hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime'] or
                                    hl7:patient/hl7:birthTime or hl7:patient">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="
                                                    hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime'] or
                                                    hl7:patient/hl7:birthTime or hl7:patient">
                                                <xsl:choose>
                                                  <xsl:when
                                                  test="hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime']">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'birthTimeLongDeceased'"/>
                                                  </xsl:call-template>
                                                  </xsl:when>
                                                  <xsl:when test="hl7:patient/hl7:birthTime">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'birthTimeLong'"/>
                                                  </xsl:call-template>
                                                  </xsl:when>
                                                </xsl:choose>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if test="
                                                    hl7:patient/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | hl7:patient/*[local-name() = 'deceasedTime'] or
                                                    hl7:patient/hl7:birthTime or hl7:patient">
                                                <xsl:call-template
                                                  name="show-birthDeathTime-multipleBirthDate">
                                                  <xsl:with-param name="in" select="hl7:patient"/>
                                                  <xsl:with-param
                                                  name="clinicalDocumentEffectiveTime"
                                                  select="ancestor-or-self::hl7:ClinicalDocument/hl7:effectiveTime/@value"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'birthPlace'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                </xsl:call-template>
                                                <fo:inline xsl:use-attribute-sets="myBlock15">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="pre" select="''"/>
                                                  <xsl:with-param name="key" select="'codeINSEE'"/>
                                                  <xsl:with-param name="post" select="''"/>
                                                  </xsl:call-template>
                                                </fo:inline>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr">
                                                <xsl:variable name="country"
                                                  select="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:county"/>
                                                <xsl:variable name="city"
                                                  select="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:city"/>
                                                <xsl:if
                                                  test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:city">
                                                  <xsl:value-of select="$city"/>
                                                </xsl:if>
                                                <xsl:if
                                                  test="hl7:patient/hl7:birthplace/hl7:place/hl7:addr/hl7:county">
                                                  <xsl:text> | </xsl:text>
                                                  <xsl:value-of select="$country"/>
                                                </xsl:if>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <xsl:variable name="telExist">
                                        <xsl:call-template name="show-telInfo">
                                            <xsl:with-param name="contact" select="."/>
                                        </xsl:call-template>
                                    </xsl:variable>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="./hl7:telecom">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <xsl:if
                                            test="not(./hl7:telecom/@nullFlavor) and ./hl7:telecom and string-length($telExist) > 0">
                                            <fo:block>
                                                <xsl:call-template name="show-telInfo">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                            </fo:block>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'H'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_domicile'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telInfo-patient">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'MC'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_mobile'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telInfo-patient-mobile">
                                                  <xsl:with-param name="contact" select="."/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'WP'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_travail'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-travail">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'EC'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Tel_urgence'"
                                                  />
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template name="show-telecom-urgence">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'HP'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_principal'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-principal">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'HV'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_vaccance'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-vaccance">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'DIR'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_direct'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_directe">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'PUB'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_public'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_public">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                        <xsl:if test="./hl7:telecom/@use = 'PG'">
                                            <fo:block>
                                                <fo:inline color="black">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'Tel_domicile_numero_beeper'"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                </fo:inline>
                                                <xsl:call-template
                                                  name="show-telecom-domicile-numero_beeper">
                                                  <xsl:with-param name="in" select="./hl7:telecom"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </fo:block>
                                        </xsl:if>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="hl7:patient/hl7:administrativeGenderCode">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if test="hl7:patient/hl7:administrativeGenderCode">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key"
                                                  select="'administrativeGenderCode'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if test="hl7:patient/hl7:administrativeGenderCode">
                                                <xsl:call-template name="show-code-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:administrativeGenderCode"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="
                                    hl7:id/@root = '1.2.250.1.213.1.4.8' or hl7:id/@root = '1.2.250.1.213.1.4.9' or hl7:id/@root = '1.2.250.1.213.1.4.10' or hl7:id/@root = '1.2.250.1.213.1.4.11'
                                    ">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:id/@root = '1.2.250.1.213.1.4.8' or hl7:id/@root = '1.2.250.1.213.1.4.9' or hl7:id/@root = '1.2.250.1.213.1.4.10' or hl7:id/@root = '1.2.250.1.213.1.4.11'">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'MatriculeINS'"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:id/@root = '1.2.250.1.213.1.4.8' or hl7:id/@root = '1.2.250.1.213.1.4.9' or hl7:id/@root = '1.2.250.1.213.1.4.10' or hl7:id/@root = '1.2.250.1.213.1.4.11'">
                                                <xsl:for-each select="hl7:id">
                                                  <xsl:choose>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.8'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[NIR]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.9'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[NIA]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.10'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[TEST]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:when test="@root = '1.2.250.1.213.1.4.11'">
                                                  <xsl:call-template name="show-identifiant">
                                                  <xsl:with-param name="id" select="."/>
                                                  </xsl:call-template>
                                                  <xsl:text>&#160;</xsl:text>
                                                  <xsl:text>[DEMO]</xsl:text>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <xsl:text>&#160;</xsl:text>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                </xsl:for-each>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if test="
                                    hl7:patient/hl7:raceCode | hl7:patient/sdtc:raceCode
                                    or hl7:patient/hl7:ethnicGroupCode | hl7:patient/sdtc:ethnicGroupCode">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:raceCode | hl7:patient/sdtc:raceCode">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Race'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:raceCode | hl7:patient/sdtc:raceCode">
                                                <xsl:call-template name="show-code-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:raceCode | hl7:patient/sdtc:raceCode"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:ethnicGroupCode | hl7:patient/sdtc:ethnicGroupCode">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'Ethnicity'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:patient/hl7:ethnicGroupCode | hl7:patient/sdtc:ethnicGroupCode">
                                                <xsl:call-template name="show-code-set">
                                                  <xsl:with-param name="in"
                                                  select="hl7:patient/hl7:ethnicGroupCode | hl7:patient/sdtc:ethnicGroupCode"
                                                  />
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                            <xsl:if
                                test="hl7:id[not(contains($skip-ids-var, concat(',', @root, ',')))]">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:id[not(contains($skip-ids-var, concat(',', @root, ',')))]">
                                                <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'IPP'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:if
                                                test="hl7:id[not(contains($skip-ids-var, concat(',', @root, ',')))]">
                                                <xsl:call-template name="show-id-set-ipp">
                                                  <xsl:with-param name="in"
                                                  select="hl7:id[not(contains($skip-ids-var, concat(',', @root, ',')))]"/>
                                                  <xsl:with-param name="sep" select="'br'"/>
                                                </xsl:call-template>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock10">
                                        <fo:block>
                                            <xsl:if
                                                test="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:if test=".">
                                                  <xsl:call-template name="getLocalizedString">
                                                  <xsl:with-param name="key" select="'emailSecure'"
                                                  />
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </xsl:if>
                                        </fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock11">
                                        <fo:block>
                                            <xsl:for-each
                                                select="./hl7:telecom[starts-with(@value, 'mailto')]">
                                                <xsl:if test=".">
                                                  <xsl:if test="./@use">
                                                  <fo:inline color="black">
                                                  <xsl:call-template name="tokenize">
                                                  <xsl:with-param name="prefix"
                                                  select="'addressUse_'"/>
                                                  <xsl:with-param name="string" select="./@use"/>
                                                  <xsl:with-param name="delimiters" select="' '"/>
                                                  </xsl:call-template>
                                                  <xsl:text> : </xsl:text>
                                                  </fo:inline>
                                                  </xsl:if>
                                                  <xsl:call-template
                                                  name="show-telInfo-patient-email">
                                                  <xsl:with-param name="contact" select="."/>
                                                  </xsl:call-template>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:if>
                        </xsl:for-each>
                    </fo:table-body>
                </fo:table>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header authorization</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="authorization">
        <xsl:if test="hl7:authorization">
            <xsl:if test="hl7:authorization">
                <fo:block line-height="0.4cm">&#160;</fo:block>
                <fo:block xsl:use-attribute-sets="myMargin" keep-together.within-page="always">
                    <fo:block xsl:use-attribute-sets="myBlock10">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="''"/>
                            <xsl:with-param name="key" select="'Consent'"/>
                            <xsl:with-param name="post" select="''"/>
                        </xsl:call-template>
                    </fo:block>
                    <fo:table xsl:use-attribute-sets="myBorder" margin-left="0.1">
                        <fo:table-column column-number="1" column-width="100%"/>
                        <fo:table-body>
                            <xsl:for-each select="hl7:authorization">
                                <fo:table-row>
                                    <fo:table-cell xsl:use-attribute-sets="myBlock9">
                                        <fo:block>
                                            <xsl:if test="hl7:consent/hl7:code">
                                                <xsl:value-of
                                                  select="hl7:consent/hl7:code/@displayName"/>
                                            </xsl:if>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                                <xsl:if test="position() != last()">
                                    <fo:table-row>
                                        <fo:table-cell number-columns-spanned="1">
                                            <fo:block>
                                                <fo:leader leader-pattern="rule"
                                                  font-weight="normal" leader-length="100%"
                                                  rule-thickness="0.1pt" text-align="center"
                                                  color="black"/>
                                            </fo:block>
                                        </fo:table-cell>
                                    </fo:table-row>
                                </xsl:if>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:block>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header assignedEntity</xd:p>
        </xd:desc>
        <xd:param name="asgnEntity">Contains the assignedEntity element</xd:param>
    </xd:doc>
    <xsl:template name="show-assignedEntity">
        <xsl:param name="asgnEntity"/>
        <xsl:choose>
            <xsl:when test="$asgnEntity/hl7:assignedPerson/hl7:name">
                <xsl:call-template name="show-name-set">
                    <xsl:with-param name="in" select="$asgnEntity/hl7:assignedPerson/hl7:name"/>
                </xsl:call-template>
                <xsl:if test="$asgnEntity/hl7:assignedPerson/hl7:desc">
                    <xsl:value-of select="$asgnEntity/hl7:assignedPerson/hl7:desc"/>
                </xsl:if>
                <xsl:if test="$asgnEntity/hl7:assignedPerson/hl7:birthTime">
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'birthTimeLong'"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in"
                            select="$asgnEntity/hl7:assignedPerson/hl7:birthTime"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="$asgnEntity/hl7:representedOrganization/hl7:name">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="' '"/>
                        <xsl:with-param name="key" select="'of'"/>
                        <xsl:with-param name="post" select="' '"/>
                    </xsl:call-template>
                    <xsl:call-template name="show-name-set">
                        <xsl:with-param name="in"
                            select="$asgnEntity/hl7:representedOrganization/hl7:name"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:when>
            <xsl:when test="$asgnEntity/hl7:representedOrganization">
                <xsl:value-of select="$asgnEntity/hl7:representedOrganization/hl7:name"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="show-id-set">
                    <xsl:with-param name="in" select="$asgnEntity/hl7:id"/>
                    <xsl:with-param name="sep" select="'br'"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>


    <xd:doc>
        <xd:desc>
            <xd:p>Handle CDA Header relatedEntity</xd:p>
        </xd:desc>
        <xd:param name="relatedEntity">Contains the relatedEntity element</xd:param>
    </xd:doc>
    <xsl:template name="show-relatedEntity">
        <xsl:param name="relatedEntity"/>
        <xsl:choose>
            <xsl:when test="$relatedEntity/hl7:relatedPerson/hl7:name">
                <xsl:call-template name="show-name-set">
                    <xsl:with-param name="in" select="$relatedEntity/hl7:relatedPerson/hl7:name"/>
                </xsl:call-template>
                <xsl:if test="$relatedEntity/hl7:relatedPerson/hl7:desc">
                    <xsl:value-of select="$relatedEntity/hl7:relatedPerson/hl7:desc"/>
                </xsl:if>
                <xsl:if test="$relatedEntity/hl7:relatedPerson/hl7:birthTime">
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'birthTimeLong'"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in"
                            select="$relatedEntity/hl7:relatedPerson/hl7:birthTime"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-contactInfo">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-address-set">
            <xsl:with-param name="in" select="$contact/hl7:addr"/>
            <xsl:with-param name="sep" select="'br'"/>
        </xsl:call-template>
        <xsl:if test="$contact/hl7:addr and $contact/hl7:telecom">
            <fo:block line-height="0.1cm">&#160;</fo:block>
        </xsl:if>
        <xsl:call-template name="show-telecom-set">
            <xsl:with-param name="in" select="$contact/hl7:telecom"/>
            <xsl:with-param name="sep" select="', '"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-contactInfo-patient">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-address-set">
            <xsl:with-param name="in" select="$contact/hl7:addr"/>
            <xsl:with-param name="sep" select="'br'"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-contactInfo-patient-recordTarget">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-address-set">
            <xsl:with-param name="in" select="$contact"/>
            <xsl:with-param name="sep" select="'br'"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-contactInfo-guardian">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-address-set-guardian">
            <xsl:with-param name="in" select="$contact/hl7:addr"/>
            <xsl:with-param name="sep" select="'br'"/>
        </xsl:call-template>
    </xsl:template>


    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-contactInfo-travail-guardian">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-address-set-travail-guardian">
            <xsl:with-param name="in" select="$contact/hl7:addr"/>
            <xsl:with-param name="sep" select="'br'"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-contactInfo-principal-guardian">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-address-set-principal-guardian">
            <xsl:with-param name="in" select="$contact/hl7:addr"/>
            <xsl:with-param name="sep" select="'br'"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-telInfo-patient">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-telecom-set-patient">
            <xsl:with-param name="in" select="$contact/hl7:telecom"/>
            <xsl:with-param name="sep" select="', '"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-telInfo">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-telecom-set-info">
            <xsl:with-param name="in" select="$contact/hl7:telecom"/>
            <xsl:with-param name="sep" select="', '"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-addrInfo">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-adresse-set-info">
            <xsl:with-param name="in" select="$contact/hl7:addr"/>
            <xsl:with-param name="sep" select="', '"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-telInfo-patient-mobile">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-telecom-set-patient-mobile">
            <xsl:with-param name="in" select="$contact/hl7:telecom"/>
            <xsl:with-param name="sep" select="', '"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Handle contactInfo. Address and telecom</xd:p>
        </xd:desc>
        <xd:param name="contact">Element containing addr and or telecom element</xd:param>
    </xd:doc>
    <xsl:template name="show-telInfo-patient-email">
        <xsl:param name="contact"/>
        <xsl:call-template name="show-telecom-set-patient-email">
            <xsl:with-param name="in" select="$contact"/>
            <xsl:with-param name="sep" select="', '"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle one line of birth/death/multiple birth data</xd:desc>
        <xd:param name="in">One element with the child elements birthTime, deceasedInd,
            deceasedTime, multipleBirthInd, multipleBirthOrderNumber. Each of those is optional and
            may bein the V3 namespace or in another namespace like sdtc</xd:param>
        <xd:param name="clinicalDocumentEffectiveTime"
            >hl7:ClinicalDocument/hl7:effectiveTime/@value</xd:param>
    </xd:doc>
    <xsl:template name="show-birthDeathTime-multipleBirth">
        <xsl:param name="in"/>
        <xsl:param name="clinicalDocumentEffectiveTime"
            select="ancestor-or-self::hl7:ClinicalDocument/hl7:effectiveTime/@value"/>
        <xsl:if test="$in">
            <xsl:call-template name="show-timestamp">
                <xsl:with-param name="in" select="$in/*[local-name() = 'birthTime']"/>
            </xsl:call-template>
            <xsl:if
                test="$in/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | $in/*[local-name() = 'deceasedTime']">
                <xsl:text> - </xsl:text>
                <xsl:choose>
                    <xsl:when test="$in/*[local-name() = 'deceasedTime'][@value]">
                        <xsl:call-template name="show-timestamp">
                            <xsl:with-param name="in" select="$in/*[local-name() = 'deceasedTime']"
                            />
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:when test="$in/*[local-name() = 'deceasedInd'][@nullFlavor]">
                        <xsl:call-template name="show-nullFlavor">
                            <xsl:with-param name="in"
                                select="$in/*[local-name() = 'deceasedInd']/@nullFlavor"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="'&#8224;'"/>
                            <xsl:with-param name="key" select="'date_unknown'"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
            <xsl:variable name="comparedate">
                <xsl:choose>
                    <xsl:when test="$in/*[local-name() = 'deceasedTime'][@value]">
                        <xsl:value-of select="$in/*[local-name() = 'deceasedTime']/@value"/>
                    </xsl:when>
                    <xsl:when
                        test="not($in/*[local-name() = 'deceasedInd'] or $in/*[local-name() = 'deceasedTime'][@value = 'true' or @nullFlavor] or $in/*[local-name() = 'deceasedTime'])">
                        <xsl:value-of select="$clinicalDocumentEffectiveTime"/>
                    </xsl:when>
                </xsl:choose>
            </xsl:variable>
            <xsl:if test="string-length($comparedate) > 0">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="pre">
                        <xsl:text> (</xsl:text>
                        <xsl:call-template name="getAge">
                            <xsl:with-param name="comparedate" select="$comparedate"/>
                            <xsl:with-param name="date" select="$in/hl7:birthTime/@value"/>
                        </xsl:call-template>
                    </xsl:with-param>
                    <xsl:with-param name="key" select="'yr'"/>
                    <xsl:with-param name="post" select="')'"/>
                </xsl:call-template>
            </xsl:if>
            <xsl:if
                test="$in/*[local-name() = 'multipleBirthInd'][@value = 'true'] | $in/*[local-name() = 'multipleBirthOrderNumber']">
                <i>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="' '"/>
                        <xsl:with-param name="key" select="'partOfMultipleBirth'"/>
                    </xsl:call-template>
                </i>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>Handle one line of birth/death/multiple birth data</xd:desc>
        <xd:param name="in">One element with the child elements birthTime, deceasedInd,
            deceasedTime, multipleBirthInd, multipleBirthOrderNumber. Each of those is optional and
            may bein the V3 namespace or in another namespace like sdtc</xd:param>
        <xd:param name="clinicalDocumentEffectiveTime"
            >hl7:ClinicalDocument/hl7:effectiveTime/@value</xd:param>
    </xd:doc>
    <xsl:template name="show-birthDeathTime-multipleBirthDate">
        <xsl:param name="in"/>
        <xsl:param name="clinicalDocumentEffectiveTime"
            select="ancestor-or-self::hl7:ClinicalDocument/hl7:effectiveTime/@value"/>
        <xsl:if test="$in">
            <xsl:call-template name="show-timestamp">
                <xsl:with-param name="in" select="$in/*[local-name() = 'birthTime']"/>
            </xsl:call-template>
            <xsl:if
                test="$in/*[local-name() = 'deceasedInd'][@value = 'true' or @nullFlavor] | $in/*[local-name() = 'deceasedTime']">
                <xsl:text> - </xsl:text>
                <xsl:choose>
                    <xsl:when test="$in/*[local-name() = 'deceasedTime'][@value]">
                        <xsl:call-template name="show-timestamp">
                            <xsl:with-param name="in" select="$in/*[local-name() = 'deceasedTime']"
                            />
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:when test="$in/*[local-name() = 'deceasedInd'][@nullFlavor]">
                        <xsl:call-template name="show-nullFlavor">
                            <xsl:with-param name="in"
                                select="$in/*[local-name() = 'deceasedInd']/@nullFlavor"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="'&#8224;'"/>
                            <xsl:with-param name="key" select="'date_unknown'"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Get localized string for a typeCode from an act relationship</xd:p>
        </xd:desc>
        <xd:param name="ptype">ActRelationship type string</xd:param>
    </xd:doc>
    <xsl:template name="show-actRelationship">
        <xsl:param name="ptype"/>
        <xsl:call-template name="getLocalizedString">
            <xsl:with-param name="key" select="concat('2.16.840.1.113883.5.1002-', $ptype)"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Takes the participation typeCode attribute and translates that to a human readable
                form and adds the Role.code in human readable form if available.</xd:p>
        </xd:desc>
        <xd:param name="typeCode">required. Participation typeCode</xd:param>
        <xd:param name="code">optional. Role.code</xd:param>
        <xd:param name="classCode">optional. Class code of the contained class, if any</xd:param>
        <xd:param name="funcionCode">required. funcionCode</xd:param>
    </xd:doc>
    <xsl:template name="show-participationTypeOrCode">
        <xsl:param name="typeCode"/>
        <xsl:param name="classCode"/>
        <xsl:param name="code"/>
        <xsl:param name="funcionCode"/>
        <xsl:if test="string-length($typeCode) > 0 and string-length($funcionCode) = 0">
            <xsl:call-template name="getLocalizedString">
                <xsl:with-param name="key" select="concat('2.16.840.1.113883.5.90-', $typeCode)"/>
            </xsl:call-template>
        </xsl:if>
        <xsl:if test="string-length($typeCode) > 0 and string-length($funcionCode) > 0">
            <xsl:call-template name="getLocalizedString">
                <xsl:with-param name="key"
                    select="concat('2.16.840.1.113883.5.90-', $typeCode, '-', $funcionCode)"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>

    <!-- ====================================================================== -->
    <!--                         Datatype based functions                       -->
    <!-- ====================================================================== -->

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype II separated with the value in 'sep'. Calls <xd:ref
                    name="show-id" type="template">show-id</xd:ref>
            </xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-id-set-ipp">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) &gt; 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-id-ipp-var">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-id-ipp-var">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-id-ipp-var">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype II separated with the value in 'sep'. Calls <xd:ref
                    name="show-id" type="template">show-id</xd:ref>
            </xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-id-set">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) &gt; 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-id">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-id">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-id">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype II</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-id-ipp-var">
        <xsl:param name="in"/>
        <xsl:if test="$in[@assigningAuthorityName]">
            <xsl:copy>
                <xsl:attribute name="title">
                    <xsl:value-of select="$in/@assigningAuthorityName"/>
                </xsl:attribute>
            </xsl:copy>
        </xsl:if>
        <xsl:variable name="extension">
            <xsl:if test="$in[@extension][@root]">
                <xsl:choose>
                    <xsl:when test="$in[contains($mask-ids-var, concat(',', @root, ','))]">
                        <xsl:copy>
                            <xsl:attribute name="title">
                                <xsl:call-template name="show-nullFlavor">
                                    <xsl:with-param name="in" select="'MSK'"/>
                                </xsl:call-template>
                            </xsl:attribute>
                        </xsl:copy>
                        <xsl:text>xxx-xxx-xxx</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$in/@extension"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
        </xsl:variable>
        <xsl:if test="not(contains($in/@root, '1.2.250.1.213.1.4.8'))">
            <xsl:choose>
                <xsl:when test="$in[@extension][@root]">
                    <xsl:copy-of select="$extension"/>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="' ['"/>
                        <xsl:with-param name="key" select="$in/@root"/>
                        <xsl:with-param name="post" select="']'"/>
                    </xsl:call-template>
                </xsl:when>
                <xsl:when test="$in[@root]">
                    <xsl:value-of select="$in/@root"/>
                </xsl:when>
                <xsl:when test="$in[@extension]">
                    <xsl:copy-of select="$extension"/>
                </xsl:when>
            </xsl:choose>
            <xsl:if test="$in[@nullFlavor]">
                <xsl:text>[</xsl:text>
                <xsl:call-template name="show-nullFlavor">
                    <xsl:with-param name="in" select="$in/@nullFlavor"/>
                </xsl:call-template>
                <xsl:text>]</xsl:text>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype II</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-id-ipp">
        <xsl:param name="in"/>
        <xsl:if test="$in">
            <xsl:if test="$in[@assigningAuthorityName]">
                <xsl:attribute name="title">
                    <xsl:value-of select="$in/@assigningAuthorityName"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:variable name="extension">
                <xsl:if test="$in[@extension][@root]">
                    <xsl:choose>
                        <xsl:when test="$in[contains($mask-ids-var, concat(',', @root, ','))]">
                            <span>
                                <xsl:attribute name="title">
                                    <xsl:call-template name="show-nullFlavor">
                                        <xsl:with-param name="in" select="'MSK'"/>
                                    </xsl:call-template>
                                </xsl:attribute>
                                <xsl:text>xxx-xxx-xxx</xsl:text>
                            </span>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$in/@extension"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
            </xsl:variable>
            <xsl:choose>
                <xsl:when test="$in[@extension][@root]">
                    <xsl:copy-of select="$extension"/>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="pre" select="' ['"/>
                        <xsl:with-param name="key" select="$in/@root"/>
                        <xsl:with-param name="post" select="']'"/>
                    </xsl:call-template>
                </xsl:when>
                <xsl:when test="$in[@root]">
                    <xsl:value-of select="$in/@root"/>
                </xsl:when>
                <xsl:when test="$in[@extension]">
                    <xsl:copy-of select="$extension"/>
                </xsl:when>
            </xsl:choose>
            <xsl:if test="$in[@nullFlavor]">
                <xsl:text>[</xsl:text>
                <xsl:call-template name="show-nullFlavor">
                    <xsl:with-param name="in" select="$in/@nullFlavor"/>
                </xsl:call-template>
                <xsl:text>]</xsl:text>
            </xsl:if>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype II</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-id">
        <xsl:param name="in"/>
        <xsl:if test="$in">
            <fo:block>
                <xsl:if test="$in[@assigningAuthorityName]">
                    <xsl:attribute name="title">
                        <xsl:value-of select="$in/@assigningAuthorityName"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:variable name="extension">
                    <xsl:if test="$in[@extension][@root]">
                        <xsl:choose>
                            <xsl:when test="$in[contains($mask-ids-var, concat(',', @root, ','))]">
                                <fo:block>
                                    <xsl:attribute name="title">
                                        <xsl:call-template name="show-nullFlavor">
                                            <xsl:with-param name="in" select="'MSK'"/>
                                        </xsl:call-template>
                                    </xsl:attribute>
                                    <xsl:text>xxx-xxx-xxx</xsl:text>
                                </fo:block>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$in/@extension"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:variable>
                <xsl:choose>
                    <xsl:when test="$in[@extension][@root]">
                        <xsl:copy-of select="$extension"/>
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="' ('"/>
                            <xsl:with-param name="key" select="$in/@root"/>
                            <xsl:with-param name="post" select="')'"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:when test="$in[@root]">
                        <xsl:value-of select="$in/@root"/>
                    </xsl:when>
                    <xsl:when test="$in[@extension]">
                        <xsl:copy-of select="$extension"/>
                    </xsl:when>
                </xsl:choose>
                <xsl:if test="$in[@nullFlavor]">
                    <xsl:text>(</xsl:text>
                    <xsl:call-template name="show-nullFlavor">
                        <xsl:with-param name="in" select="$in/@nullFlavor"/>
                    </xsl:call-template>
                    <xsl:text>)</xsl:text>
                </xsl:if>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype CD, CE, CV, CO separated with the value in 'sep'.
                Calls <xd:ref name="show-code" type="template">show-code</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
        <xd:param name="textonly">XSLT 1.0 will output a warning when you create an element inside
            an attribute/text node/processing instruction. To prevent that warning, we should just
            prevent creation of elements in that context. Set to 'true' if that's the case. Default
            is 'false'.</xd:param>
    </xd:doc>
    <xsl:template name="show-code-set">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:param name="textonly" select="'false'"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-code">
                            <xsl:with-param name="in" select="."/>
                            <xsl:with-param name="textonly" select="$textonly"/>
                        </xsl:call-template>
                        <xsl:if test="position() != last()">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br' and not($textonly = 'true')">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-code">
                            <xsl:with-param name="in" select="."/>
                            <xsl:with-param name="textonly" select="$textonly"/>
                        </xsl:call-template>
                        <xsl:if test="position() != last()">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br' and not($textonly = 'true')">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-code">
                        <xsl:with-param name="in" select="$in"/>
                        <xsl:with-param name="textonly" select="$textonly"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype CD, CE, CV, CO</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
        <xd:param name="textonly">XSLT 1.0 will output a warning when you create an element inside
            an attribute/text node/processing instruction. To prevent that warning, we should just
            prevent creation of elements in that context. Set to 'true' if that's the case. Default
            is 'false'.</xd:param>
    </xd:doc>
    <xsl:template name="show-code">
        <xsl:param name="in"/>
        <xsl:param name="textonly" select="'false'"/>
        <xsl:if test="$in">
            <xsl:variable name="codeSystem">
                <xsl:choose>
                    <xsl:when test="@codeSystem">
                        <xsl:value-of select="$in/@codeSystem"/>
                    </xsl:when>
                    <xsl:when test="$in/self::hl7:signatureCode[not(@codeSystem)]"
                        >2.16.840.1.113883.5.89</xsl:when>
                </xsl:choose>
            </xsl:variable>
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="$in[@code] and string-length($codeSystem) > 0">
                    <xsl:variable name="key" select="concat($codeSystem, '-', $in/@code)"/>
                    <xsl:variable name="displayName">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="$key"/>
                        </xsl:call-template>
                    </xsl:variable>
                    <xsl:choose>
                        <xsl:when test="$displayName = $key and $in[@displayName]">
                            <xsl:value-of select="$in/@displayName"/>
                        </xsl:when>
                        <xsl:when test="$displayName = $key and $in[hl7:displayName/@value]">
                            <xsl:value-of select="($in/hl7:displayName/@value)[1]"/>
                        </xsl:when>
                        <xsl:when test="$displayName = $key">
                            <xsl:value-of select="$in/@code"/>
                            <xsl:call-template name="getLocalizedString">
                                <xsl:with-param name="pre" select="' ('"/>
                                <xsl:with-param name="key" select="$codeSystem"/>
                                <xsl:with-param name="post" select="')'"/>
                            </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="$displayName"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <!-- DTr1 -->
                <xsl:when test="$in[@displayName]">
                    <xsl:value-of select="$in/@displayName"/>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:displayName/@value]">
                    <xsl:value-of select="($in/hl7:displayName/@value)[1]"/>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:when test="$in[@code]">
                    <xsl:value-of select="$in/@code"/>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:when test="$in[@nullFlavor]">
                    <xsl:call-template name="show-nullFlavor">
                        <xsl:with-param name="in" select="$in/@nullFlavor"/>
                    </xsl:call-template>
                </xsl:when>
            </xsl:choose>
            <!-- DTr1 | DTr2 -->
            <xsl:for-each
                select="$in/*[local-name() = 'originalText'] | $in/*[local-name() = 'originalText']/*[local-name() = 'xml']">
                <xsl:text> - </xsl:text>
                <xsl:value-of select="."/>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype EN, ON, PN or TN separated with the value in 'sep'.
                Calls <xd:ref name="show-name" type="template">show-name</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-name-set">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:choose>
            <!-- DTr1 -->
            <xsl:when test="count($in) > 1">
                <xsl:for-each select="$in">
                    <xsl:call-template name="show-name">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                    <xsl:if test="position() != last() and position() != 1">
                        <xsl:choose>
                            <xsl:when test="$sep = 'br'">
                                <fo:block line-height="0.1cm">&#160;</fo:block>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$sep"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr2 -->
            <xsl:when test="$in[hl7:item]">
                <xsl:for-each select="$in/hl7:item">
                    <xsl:call-template name="show-name">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                    <xsl:if test="position() != last() and position() != 1">
                        <xsl:choose>
                            <xsl:when test="$sep = 'br'">
                                <fo:block line-height="0.1cm">&#160;</fo:block>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="$sep"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr1 or DTr2 -->
            <xsl:otherwise>
                <xsl:call-template name="show-name">
                    <xsl:with-param name="in" select="$in"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype EN, ON, PN, or TN</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-name">
        <xsl:param name="in"/>
        <xsl:if test="$in or count($in) > 0">
            <xsl:if test="$in/@use">
                <xsl:call-template name="tokenize">
                    <xsl:with-param name="prefix" select="'nameUse_'"/>
                    <xsl:with-param name="string" select="$in/@use"/>
                    <xsl:with-param name="delimiters" select="' '"/>
                </xsl:call-template>
                <xsl:text>: </xsl:text>
            </xsl:if>
            <xsl:if test="$in[@use][@nullFlavor]">
                <xsl:text> </xsl:text>
            </xsl:if>
            <xsl:call-template name="show-nullFlavor">
                <xsl:with-param name="in" select="$in/@nullFlavor"/>
            </xsl:call-template>
            <xsl:for-each select="$in/node()">
                <!-- 
                        Except for prefix, suffix and delimiter name parts, every name part is surrounded by implicit whitespace.
                        Leading and trailing explicit whitespace is insignificant in all those name parts. 
                    -->
                <xsl:if
                    test="self::hl7:given[string-length(normalize-space(.)) > 0] | self::hl7:family[string-length(normalize-space(.)) > 0] | self::hl7:part[@type = 'GIV' or @type = 'FAM'][string-length(normalize-space(@value)) > 0]">
                    <xsl:if test="preceding-sibling::node()[string-length(normalize-space(.)) > 0]">
                        <xsl:text> </xsl:text>
                    </xsl:if>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="self::comment() | self::processing-instruction()"/>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:family">
                        <xsl:call-template name="caseUp">
                            <xsl:with-param name="data" select="."/>
                        </xsl:call-template>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'FAM']">
                        <xsl:call-template name="caseUp">
                            <xsl:with-param name="data" select="@value"/>
                        </xsl:call-template>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:prefix[contains(@qualifier, 'VV')]">
                        <xsl:call-template name="caseUp">
                            <xsl:with-param name="data" select="."/>
                        </xsl:call-template>
                        <xsl:text> </xsl:text>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'PFX' and contains(@qualifier, 'VV')]">
                        <xsl:call-template name="caseUp">
                            <xsl:with-param name="data" select="@value"/>
                        </xsl:call-template>
                        <xsl:text> </xsl:text>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:prefix | self::hl7:given | self::delimiter">
                        <xsl:value-of select="."/>
                        <xsl:text> </xsl:text>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'PFX' or @type = 'GIV' or @type = 'DEL']">
                        <xsl:value-of select="@value"/>
                    </xsl:when>
                    <xsl:when test="string-length(normalize-space(.)) > 0">
                        <xsl:value-of select="."/>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when
                        test="self::hl7:part[not(@type)][string-length(normalize-space(@value)) > 0]">
                        <xsl:value-of select="@value"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="."/>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:if
                    test="self::hl7:given[string-length(normalize-space(.)) > 0] | self::hl7:family[string-length(normalize-space(.)) > 0] | self::hl7:part[@type = 'GIV' or @type = 'FAM'][string-length(normalize-space(@value)) > 0]">
                    <xsl:if test="following-sibling::node()[string-length(normalize-space(.)) > 0]">
                        <xsl:text> </xsl:text>
                    </xsl:if>
                </xsl:if>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype AD separated with the value in 'sep'. Calls <xd:ref
                    name="show-address" type="template">show-address</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-address-set">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-address">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last()">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-address">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-address">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype AD separated with the value in 'sep'. Calls <xd:ref
                    name="show-address" type="template">show-address</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-address-set-travail-guardian">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-address-guardian-MC">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-address-guardian-MC">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-address-guardian-MC">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype AD separated with the value in 'sep'. Calls <xd:ref
                    name="show-address" type="template">show-address</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-address-set-principal-guardian">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-address-guardian-MC">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-address-guardian-MC">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-address-guardian-MC">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype AD separated with the value in 'sep'. Calls <xd:ref
                    name="show-address" type="template">show-address</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-address-set-guardian">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-address-guardian">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-address-guardian">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-address-guardian">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype AD</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-address">
        <xsl:param name="in"/>
        <xsl:if test="$in">
            <xsl:if test="$in/@use">
                <fo:inline color="black">
                    <xsl:call-template name="tokenize">
                        <xsl:with-param name="prefix" select="'addressUse_'"/>
                        <xsl:with-param name="string" select="$in/@use"/>
                        <xsl:with-param name="delimiters" select="' '"/>
                    </xsl:call-template>
                    <xsl:text>: </xsl:text>
                </fo:inline>
            </xsl:if>
            <xsl:if test="$in[@use][@nullFlavor]">
                <xsl:text> </xsl:text>
            </xsl:if>
            <xsl:call-template name="show-nullFlavor">
                <xsl:with-param name="in" select="$in/@nullFlavor"/>
            </xsl:call-template>
            <xsl:for-each select="$in/text() | $in/*">
                <xsl:choose>
                    <xsl:when test="self::hl7:useablePeriod"/>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:streetName">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber' or local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>
                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix' or local-name() = 'additionalLocator')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'STR']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:part[1][@type = 'BNN'] |
                                    following-sibling::hl7:part[1][@type = 'BNR']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:part[1][@type = 'BNS'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>

                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNR']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNS'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>

                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(@type = 'BNR' or local-name() = 'houseNumberNumeric' or @type = 'BNS' or @type = 'ADL')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when
                        test="self::hl7:houseNumber or self::hl7:houseNumberNumeric or self::hl7:buildingNumberSuffix">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][local-name() = 'streetName' or local-name() = 'additionalLocator'])">
                                <xsl:if
                                    test="not(self::hl7:buildingNumberSuffix and preceding-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber'])">
                                    <xsl:value-of select="."/>
                                    <xsl:if
                                        test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'BNN' or @type = 'BNR' or @type = 'BNS']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][hl7:part[@type = 'STR' or @type = 'ADL']])">
                                <xsl:if
                                    test="not(self::hl7:part[@type = 'BNS'] and preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR'])">
                                    <xsl:value-of select="@value"/>
                                    <xsl:if
                                        test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:additionalLocator">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix'])">
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']"
                                />
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][local-name() = 'houseNumber']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumber']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ADL']">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS'])">
                            <xsl:value-of select="@value"/>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNN']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNN']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNR']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNR']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNS']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNS']/@value"/>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postBox">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="."/>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'POB']">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:city">
                        <xsl:if
                            test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="."/>
                        <xsl:if test="../hl7:state[string-length(.) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:state"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:part[@type = 'CTY']">
                        <xsl:if
                            test="preceding-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="@value"/>
                        <xsl:if test="../hl7:part[@type = 'STA'][string-length(@value) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:part[@type = 'STA']/@value"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postalCode and ../hl7:city"/>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ZIP'] and ../hl7:part[@type = 'CTY']"/>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:state">
                        <xsl:if test="not(../hl7:city)">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]) > 0 or preceding-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'STA']">
                        <xsl:if test="not(../hl7:part[@type = 'CTY'])">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]/@value) > 0 or preceding-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="@value"/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="string-length(text()) > 0">
                        <xsl:value-of select="."/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if test="string(number(following-sibling::hl7:*[1])) != 'NaN'">
                            <xsl:if
                                test="number(following-sibling::hl7:*[1]) = following-sibling::hl7:*[1]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="string-length(@value) > 0">
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if test="string(number(following-sibling::hl7:*[1]/@value)) != 'NaN'">
                            <xsl:if
                                test="number(following-sibling::hl7:*[1]/@value) = following-sibling::hl7:*[1]/@value">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise> </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
            <xsl:for-each select="$in/hl7:useablePeriod">
                <fo:block>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'Period'"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="show-ivlts">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </fo:block>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype AD</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-address-guardian-MC">
        <xsl:param name="in"/>
        <xsl:if test="$in/@use = 'WP'">
            <xsl:if test="$in[@use][@nullFlavor]">
                <xsl:text> </xsl:text>
            </xsl:if>
            <xsl:call-template name="show-nullFlavor">
                <xsl:with-param name="in" select="$in/@nullFlavor"/>
            </xsl:call-template>
            <xsl:for-each select="$in/text() | $in/*">
                <xsl:choose>
                    <xsl:when test="self::hl7:useablePeriod"/>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:streetName">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber' or local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>
                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix' or local-name() = 'additionalLocator')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'STR']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:part[1][@type = 'BNN'] |
                                    following-sibling::hl7:part[1][@type = 'BNR']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:part[1][@type = 'BNS'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>

                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNR']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNS'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>

                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(@type = 'BNR' or local-name() = 'houseNumberNumeric' or @type = 'BNS' or @type = 'ADL')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when
                        test="self::hl7:houseNumber or self::hl7:houseNumberNumeric or self::hl7:buildingNumberSuffix">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][local-name() = 'streetName' or local-name() = 'additionalLocator'])">
                                <xsl:if
                                    test="not(self::hl7:buildingNumberSuffix and preceding-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber'])">
                                    <xsl:value-of select="."/>
                                    <xsl:if
                                        test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'BNN' or @type = 'BNR' or @type = 'BNS']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][hl7:part[@type = 'STR' or @type = 'ADL']])">
                                <xsl:if
                                    test="not(self::hl7:part[@type = 'BNS'] and preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR'])">
                                    <xsl:value-of select="@value"/>
                                    <xsl:if
                                        test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:additionalLocator">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix'])">
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']"
                                />
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][local-name() = 'houseNumber']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumber']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ADL']">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS'])">
                            <xsl:value-of select="@value"/>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNN']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNN']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNR']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNR']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNS']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNS']/@value"/>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postBox">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="."/>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'POB']">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:city">
                        <xsl:if
                            test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="."/>
                        <xsl:if test="../hl7:state[string-length(.) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:state"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:part[@type = 'CTY']">
                        <xsl:if
                            test="preceding-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="@value"/>
                        <xsl:if test="../hl7:part[@type = 'STA'][string-length(@value) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:part[@type = 'STA']/@value"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postalCode and ../hl7:city"/>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ZIP'] and ../hl7:part[@type = 'CTY']"/>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:state">
                        <xsl:if test="not(../hl7:city)">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]) > 0 or preceding-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'STA']">
                        <xsl:if test="not(../hl7:part[@type = 'CTY'])">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]/@value) > 0 or preceding-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="@value"/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="string-length(text()) > 0">
                        <xsl:value-of select="."/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="string-length(@value) > 0">
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise> </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
            <xsl:for-each select="$in/hl7:useablePeriod">
                <fo:block>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'Period'"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="show-ivlts">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </fo:block>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype AD</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-address-guardian">
        <xsl:param name="in"/>
        <xsl:if test="$in/@use = 'H'">
            <xsl:if test="$in[@use][@nullFlavor]">
                <xsl:text> </xsl:text>
            </xsl:if>
            <xsl:call-template name="show-nullFlavor">
                <xsl:with-param name="in" select="$in/@nullFlavor"/>
            </xsl:call-template>
            <xsl:for-each select="$in/text() | $in/*">
                <xsl:choose>
                    <xsl:when test="self::hl7:useablePeriod"/>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:streetName">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber' or local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>
                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix' or local-name() = 'additionalLocator')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'STR']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:part[1][@type = 'BNN'] |
                                    following-sibling::hl7:part[1][@type = 'BNR']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:part[1][@type = 'BNS'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>
                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNR']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNS'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>
                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(@type = 'BNR' or local-name() = 'houseNumberNumeric' or @type = 'BNS' or @type = 'ADL')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when
                        test="self::hl7:houseNumber or self::hl7:houseNumberNumeric or self::hl7:buildingNumberSuffix">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][local-name() = 'streetName' or local-name() = 'additionalLocator'])">
                                <xsl:if
                                    test="not(self::hl7:buildingNumberSuffix and preceding-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber'])">
                                    <xsl:value-of select="."/>
                                    <xsl:if
                                        test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'BNN' or @type = 'BNR' or @type = 'BNS']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][hl7:part[@type = 'STR' or @type = 'ADL']])">
                                <xsl:if
                                    test="not(self::hl7:part[@type = 'BNS'] and preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR'])">
                                    <xsl:value-of select="@value"/>
                                    <xsl:if
                                        test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:additionalLocator">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix'])">
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']"
                                />
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][local-name() = 'houseNumber']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumber']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ADL']">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS'])">
                            <xsl:value-of select="@value"/>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNN']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNN']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNR']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNR']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNS']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNS']/@value"/>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postBox">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="."/>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'POB']">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:city">
                        <xsl:if
                            test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="."/>
                        <xsl:if test="../hl7:state[string-length(.) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:state"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:part[@type = 'CTY']">
                        <xsl:if
                            test="preceding-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="@value"/>
                        <xsl:if test="../hl7:part[@type = 'STA'][string-length(@value) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:part[@type = 'STA']/@value"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postalCode and ../hl7:city"/>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ZIP'] and ../hl7:part[@type = 'CTY']"/>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:state">
                        <xsl:if test="not(../hl7:city)">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]) > 0 or preceding-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'STA']">
                        <xsl:if test="not(../hl7:part[@type = 'CTY'])">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]/@value) > 0 or preceding-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="@value"/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="string-length(text()) > 0">
                        <xsl:value-of select="."/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="string-length(@value) > 0">
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise> </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
            <xsl:for-each select="$in/hl7:useablePeriod">
                <fo:block>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'Period'"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="show-ivlts">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </fo:block>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>Show element with datatype IVL_TS</xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-ivlts">
        <xsl:param name="in"/>
        <xsl:if test="$in">
            <xsl:variable name="fromDate">
                <xsl:call-template name="show-timestamp">
                    <xsl:with-param name="in" select="$in/hl7:low"/>
                    <xsl:with-param name="part" select="'date'"/>
                </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="toDate">
                <xsl:call-template name="show-timestamp">
                    <xsl:with-param name="in" select="$in/hl7:high"/>
                    <xsl:with-param name="part" select="'date'"/>
                </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="fromTime">
                <xsl:call-template name="show-timestamp">
                    <xsl:with-param name="in" select="$in/hl7:low"/>
                    <xsl:with-param name="part" select="'time'"/>
                </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="toTime">
                <xsl:call-template name="show-timestamp">
                    <xsl:with-param name="in" select="$in/hl7:high"/>
                    <xsl:with-param name="part" select="'time'"/>
                </xsl:call-template>
            </xsl:variable>

            <xsl:choose>
                <xsl:when test="$in/@value">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'at'"/>
                        <xsl:with-param name="post" select="'&#160;'"/>
                    </xsl:call-template>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:when>
                <!-- Same day, different times -->
                <xsl:when test="$fromDate = $toDate">
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$in/hl7:low"/>
                        <xsl:with-param name="part" select="'date'"/>
                    </xsl:call-template>

                    <xsl:if test="string-length(normalize-space($fromTime)) > 0">
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="normalize-space($fromTime)"/>

                        <xsl:if test="string-length(normalize-space($toTime)) > 0">
                            <xsl:text> - </xsl:text>
                            <xsl:value-of select="normalize-space($toTime)"/>
                        </xsl:if>
                    </xsl:if>
                </xsl:when>
                <xsl:when test="$in/hl7:low">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'from'"/>
                        <xsl:with-param name="post" select="'&#160;'"/>
                    </xsl:call-template>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$in/hl7:low"/>
                    </xsl:call-template>
                    <xsl:if test="$in/hl7:high">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="pre" select="' '"/>
                            <xsl:with-param name="key" select="'to'"/>
                            <xsl:with-param name="post" select="'&#160;'"/>
                        </xsl:call-template>
                        <xsl:call-template name="show-timestamp">
                            <xsl:with-param name="in" select="$in/hl7:high"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:when>
                <xsl:when test="$in/hl7:high">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'to'"/>
                        <xsl:with-param name="post" select="'&#160;'"/>
                    </xsl:call-template>
                    <xsl:call-template name="show-timestamp">
                        <xsl:with-param name="in" select="$in/hl7:high"/>
                    </xsl:call-template>
                </xsl:when>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype TEL or URI separated with the value in 'sep'. Calls
                    <xd:ref name="show-telecom-domicile" type="template"
                    >show-telecom-domicile</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-set-patient">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in/@use = 'H'">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-telecom-domicile">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-telecom-domicile">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-telecom-domicile">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype TEL or URI separated with the value in 'sep'. Calls
                    <xd:ref name="show-telecom-domicile" type="template"
                    >show-telecom-domicile</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-set-info">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:choose>
            <!-- DTr1 -->
            <xsl:when test="count($in) > 1">
                <xsl:for-each select="$in">
                    <xsl:call-template name="show-telecom-information">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr2 -->
            <xsl:when test="$in[hl7:item]">
                <xsl:for-each select="$in/hl7:item">
                    <xsl:call-template name="show-telecom-information">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr1 or DTr2 -->
            <xsl:otherwise>
                <xsl:call-template name="show-telecom-information">
                    <xsl:with-param name="in" select="$in"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype TEL or URI separated with the value in 'sep'. Calls
                    <xd:ref name="show-telecom-domicile" type="template"
                    >show-telecom-domicile</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-adresse-set-info">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:choose>
            <!-- DTr1 -->
            <xsl:when test="count($in) > 1">
                <xsl:for-each select="$in">
                    <xsl:call-template name="show-adresse-information">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr2 -->
            <xsl:when test="$in[hl7:item]">
                <xsl:for-each select="$in/hl7:item">
                    <xsl:call-template name="show-adresse-information">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr1 or DTr2 -->
            <xsl:otherwise>
                <xsl:call-template name="show-adresse-information">
                    <xsl:with-param name="in" select="$in"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype TEL or URI separated with the value in 'sep'. Calls
                    <xd:ref name="show-telecom-mobile" type="template"
                >show-telecom-mobile</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-set-patient-mobile">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in/@use = 'MC'">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-telecom-mobile">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-telecom-mobile">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-telecom-mobile">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype TEL or URI separated with the value in 'sep'. Calls
                    <xd:ref name="show-telecom-email" type="template"
                >show-telecom-email</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-set-patient-email">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:choose>
            <!-- DTr1 -->
            <xsl:when test="count($in) > 1">
                <xsl:for-each select="$in">
                    <xsl:call-template name="show-telecom-email">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr2 -->
            <xsl:when test="$in[hl7:item]">
                <xsl:for-each select="$in/hl7:item">
                    <xsl:call-template name="show-telecom-email">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:when>
            <!-- DTr1 or DTr2 -->
            <xsl:otherwise>
                <xsl:call-template name="show-telecom-email">
                    <xsl:with-param name="in" select="$in"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype TEL or URI separated with the value in 'sep'. Calls
                    <xd:ref name="show-telecom" type="template">show-telecom</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-set">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-telecom">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-telecom">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-telecom">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in">
                <xsl:for-each select="$in">
                    <xsl:if test="position() > 1">
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                    </xsl:if>
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="$type">
                        <xsl:call-template name="translateTelecomUriScheme">
                            <xsl:with-param name="code" select="$type"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="@use">
                        <xsl:text> </xsl:text>
                        <xsl:call-template name="tokenize">
                            <xsl:with-param name="prefix" select="'addressUse_'"/>
                            <xsl:with-param name="string" select="@use"/>
                            <xsl:with-param name="delimiters" select="' '"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="$type or @use">
                        <xsl:text>: </xsl:text>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="$type">
                            <xsl:value-of select="$value"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="@value"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'telecom information not available'"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI Home</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-domicile">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'H' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'H']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI Home</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-information">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="not(starts-with($in/@value, 'mailto')) and not($in/@use)">
                <xsl:for-each select="$in">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI Home</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-adresse-information">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="not($in/@use)">
                <xsl:for-each select="$in">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="$type">
                            <xsl:value-of select="$value"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="@value"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI Work</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-travail">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'WP' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'WP']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI emergency</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-urgence">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'EC' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'EC']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI fome primary</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-domicile-principal">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'HP' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'HP']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI fome Holiday</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-domicile-vaccance">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'HV' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'HV']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI fome direct number</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-domicile-numero_directe">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'DIR' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'DIR']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI fome public number</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-domicile-numero_public">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'PUB' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'PUB']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI fome public number</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-domicile-numero_beeper">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'PG' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'PG']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI mobile</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-mobile">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in/@use = 'MC' and not(starts-with($in/@value, 'mailto'))">
                <xsl:for-each select="$in[@use = 'MC']">
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="position() > 1">
                        <xsl:if test="$type != 'mailto'">
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$type != 'mailto'">
                        <xsl:choose>
                            <xsl:when test="$type">
                                <xsl:value-of select="$value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@value"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TEL or URI email</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-telecom-email">
        <xsl:param name="in"/>
        <xsl:choose>
            <xsl:when test="$in">
                <xsl:for-each select="$in">
                    <xsl:if test="position() > 1">
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                    </xsl:if>
                    <xsl:variable name="type" select="substring-before(@value, ':')"/>
                    <xsl:variable name="value" select="substring-after(@value, ':')"/>
                    <xsl:if test="$type = 'mailto'">
                        <fo:inline text-decoration="underline" color="#3358FF">
                            <xsl:value-of select="$value"/>
                        </fo:inline>
                        <fo:block line-height="0.1cm">&#160;</fo:block>
                    </xsl:if>
                </xsl:for-each>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TS</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="show-timestamp">
        <xsl:param name="in"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:call-template name="formatDateTime">
            <xsl:with-param name="date" select="$in/@value"/>
            <xsl:with-param name="part" select="$part"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TS document</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="show-timestamp-document">
        <xsl:param name="in"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:call-template name="formatDateTimeDocument">
            <xsl:with-param name="date" select="$in/@value"/>
            <xsl:with-param name="part" select="$part"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TS patient</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="show-timestamp-patient">
        <xsl:param name="in"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:call-template name="formatDateTimePatient">
            <xsl:with-param name="date" select="$in/@value"/>
            <xsl:with-param name="part" select="$part"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype TS matrix</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="show-timestamp-matrix">
        <xsl:param name="in"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:call-template name="formatDateTimeMatrix">
            <xsl:with-param name="date" select="$in/@value"/>
            <xsl:with-param name="part" select="$part"/>
        </xsl:call-template>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show elements with datatype ST separated with the value in 'sep'. Calls <xd:ref
                    name="show-text" type="template">show-text</xd:ref></xd:p>
        </xd:desc>
        <xd:param name="in">Set of 0 to * elements</xd:param>
        <xd:param name="sep">Separator between output of different elements. Default ', ' and
            special is 'br' which generates an HTML br tag</xd:param>
    </xd:doc>
    <xsl:template name="show-text-set">
        <xsl:param name="in"/>
        <xsl:param name="sep" select="', '"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 -->
                <xsl:when test="count($in) > 1">
                    <xsl:for-each select="$in">
                        <xsl:call-template name="show-text">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[hl7:item]">
                    <xsl:for-each select="$in/hl7:item">
                        <xsl:call-template name="show-text">
                            <xsl:with-param name="in" select="."/>
                        </xsl:call-template>
                        <xsl:if test="position() != last() and position() != 1">
                            <xsl:choose>
                                <xsl:when test="$sep = 'br'">
                                    <fo:block line-height="0.1cm">&#160;</fo:block>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="$sep"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:when>
                <!-- DTr1 or DTr2 -->
                <xsl:otherwise>
                    <xsl:call-template name="show-text">
                        <xsl:with-param name="in" select="$in"/>
                    </xsl:call-template>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show element with datatype ST</xd:p>
        </xd:desc>
        <xd:param name="in">One element, possibly out of a set</xd:param>
    </xd:doc>
    <xsl:template name="show-text">
        <xsl:param name="in"/>
        <xsl:if test="$in">
            <xsl:choose>
                <!-- DTr1 and DTr2 -->
                <xsl:when test="$in[@nullFlavor]">
                    <xsl:call-template name="show-nullFlavor">
                        <xsl:with-param name="in" select="$in/@nullFlavor"/>
                    </xsl:call-template>
                </xsl:when>
                <!-- DTr2 -->
                <xsl:when test="$in[@value]">
                    <xsl:copy-of select="translate($in/@value, '&#13;&#10;', '&lt;br/&gt;')"/>
                </xsl:when>
                <!-- DTr1 -->
                <xsl:otherwise>
                    <xsl:copy-of select="translate($in/text(), '&#13;&#10;', '&lt;br/&gt;')"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Show a nullFlavor as text</xd:p>
        </xd:desc>
        <xd:param name="in">The nullFlavor code, e.g. NI, OTH</xd:param>
    </xd:doc>
    <xsl:template name="show-nullFlavor">
        <xsl:param name="in"/>
        <xsl:if test="string-length($in) > 0">
            <xsl:call-template name="getLocalizedString">
                <xsl:with-param name="key" select="concat('nullFlavor_', $in)"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>

    <!-- ====================================================================== -->
    <!--                           Supporting functions                         -->
    <!-- ====================================================================== -->

    <xd:doc>
        <xd:desc>
            <xd:p>Takes the 5th and 6th character from a timestamp, and returns the localized month
                name</xd:p>
        </xd:desc>
        <xd:param name="date">Timestamp string</xd:param>
    </xd:doc>
    <xsl:template name="formatMonthNumber">
        <xsl:param name="date"/>
        <!-- month -->
        <xsl:variable name="month" select="substring($date, 5, 2)"/>
        <xsl:value-of select="$month"/>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Takes the 5th and 6th character from a timestamp, and returns the localized month
                name</xd:p>
        </xd:desc>
        <xd:param name="date">Timestamp string</xd:param>
    </xd:doc>
    <xsl:template name="formatMonth">
        <xsl:param name="date"/>
        <!-- month -->
        <xsl:variable name="month" select="substring($date, 5, 2)"/>
        <xsl:choose>
            <xsl:when test="$month = '01'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'January'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '02'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'February'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '03'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'March'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '04'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'April'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '05'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'May'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '06'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'June'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '07'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'July'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '08'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'August'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '09'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'September'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '10'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'October'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '11'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'November'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$month = '12'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'December'"/>
                    <xsl:with-param name="post" select="' '"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="$month"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Formats a timestamp</xd:p>
        </xd:desc>
        <xd:param name="date"/>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="formatDateTimePatient">
        <xsl:param name="date"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:variable name="yearNum" select="substring($date, 1, 4)"/>
        <xsl:variable name="monthNum" select="substring($date, 5, 2)"/>
        <xsl:variable name="monthText">
            <xsl:call-template name="formatMonthNumber">
                <xsl:with-param name="date" select="$date"/>
            </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="dayNum">
            <xsl:choose>
                <xsl:when test="substring($date, 7, 1) = '0'">
                    <xsl:value-of select="substring($date, 8, 1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($date, 7, 2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:if test="not($part = 'time')">
            <xsl:choose>
                <xsl:when test="$textLangPartLowerCase = 'fr'">
                    <xsl:value-of select="$dayNum"/>
                    <xsl:text>/</xsl:text>
                    <xsl:call-template name="caseDown">
                        <xsl:with-param name="data" select="$monthText"/>
                    </xsl:call-template>
                    <xsl:text>/</xsl:text>
                    <xsl:value-of select="$yearNum"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:call-template name="firstCharCaseUp">
                        <xsl:with-param name="data" select="$monthText"/>
                    </xsl:call-template>
                    <xsl:if test="string-length($dayNum) > 0">
                        <xsl:text>/</xsl:text>
                        <xsl:value-of select="$dayNum"/>
                    </xsl:if>
                    <xsl:if test="string-length($yearNum) > 0">
                        <xsl:text>/</xsl:text>
                        <xsl:value-of select="$yearNum"/>
                    </xsl:if>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <!-- time and US timezone -->
        <xsl:if test="string-length($date) > 8 and not($part = 'date')">
            <xsl:if test="not($part = 'time')">
                <xsl:text>, </xsl:text>
            </xsl:if>
            <!-- time -->
            <xsl:variable name="time">
                <xsl:value-of select="substring($date, 9, 6)"/>
            </xsl:variable>
            <xsl:variable name="hh">
                <xsl:value-of select="substring($time, 1, 2)"/>
            </xsl:variable>
            <xsl:variable name="mm">
                <xsl:value-of select="substring($time, 3, 2)"/>
            </xsl:variable>
            <xsl:variable name="ss">
                <xsl:value-of select="substring($time, 5, 2)"/>
            </xsl:variable>
            <xsl:if test="string-length($hh) > 1">
                <xsl:choose>
                    <xsl:when test="$textLangPartLowerCase = 'en' and number($hh) > 12">
                        <xsl:value-of select="number($hh) - 12"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$hh"/>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when
                        test="string-length($mm) > 1 and not(contains($mm, '-')) and not(contains($mm, '+')) and not($mm = '00' and $ss = '00')">
                        <xsl:text>:</xsl:text>
                        <xsl:value-of select="$mm"/>
                        <xsl:if
                            test="string-length($ss) > 1 and not(contains($ss, '-')) and not(contains($ss, '+')) and not($ss = '00')">
                            <xsl:text>:</xsl:text>
                            <xsl:value-of select="$ss"/>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="$textLangPartLowerCase = 'fr'">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'h'"/>
                        </xsl:call-template>
                    </xsl:when>
                </xsl:choose>
                <xsl:if test="$textLangPartLowerCase = 'en'">
                    <xsl:choose>
                        <xsl:when test="number($hh) > 12">
                            <xsl:text>PM</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>AM</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
            </xsl:if>
            <!-- time zone. Don't try getting a name for it as that will always fail parts of the year due to daylight savings -->
            <xsl:choose>
                <xsl:when test="contains($date, '+')">
                    <xsl:text> +</xsl:text>
                    <xsl:value-of select="substring-after($date, '+')"/>
                </xsl:when>
                <xsl:when test="contains($date, '-')">
                    <xsl:text> -</xsl:text>
                    <xsl:value-of select="substring-after($date, '-')"/>
                </xsl:when>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Formats a timestamp</xd:p>
        </xd:desc>
        <xd:param name="date"/>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="formatDateTimeMatrix">
        <xsl:param name="date"/>
        <xsl:param name="part" select="'datetime'"/>

        <xsl:variable name="yearNum" select="substring($date, 1, 4)"/>
        <xsl:variable name="monthNum" select="substring($date, 5, 2)"/>
        <xsl:variable name="monthText">
            <xsl:call-template name="formatMonthNumber">
                <xsl:with-param name="date" select="$date"/>
            </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="dayNum">
            <xsl:choose>
                <xsl:when test="substring($date, 7, 1) = '0'">
                    <xsl:value-of select="substring($date, 8, 1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($date, 7, 2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:if test="not($part = 'time')">
            <xsl:choose>
                <xsl:when test="$textLangPartLowerCase = 'fr'">
                    <xsl:value-of select="$dayNum"/>
                    <xsl:text>-</xsl:text>
                    <xsl:call-template name="caseDown">
                        <xsl:with-param name="data" select="$monthText"/>
                    </xsl:call-template>
                    <xsl:text>-</xsl:text>
                    <xsl:value-of select="$yearNum"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:call-template name="firstCharCaseUp">
                        <xsl:with-param name="data" select="$monthText"/>
                    </xsl:call-template>
                    <xsl:if test="string-length($dayNum) > 0">
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="$dayNum"/>
                    </xsl:if>
                    <xsl:if test="string-length($yearNum) > 0">
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="$yearNum"/>
                    </xsl:if>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Formats a timestamp</xd:p>
        </xd:desc>
        <xd:param name="date"/>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="formatDateTime">
        <xsl:param name="date"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:variable name="yearNum" select="substring($date, 1, 4)"/>
        <xsl:variable name="monthNum" select="substring($date, 5, 2)"/>
        <xsl:variable name="monthText">
            <xsl:call-template name="formatMonth">
                <xsl:with-param name="date" select="$date"/>
            </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="dayNum">
            <xsl:choose>
                <xsl:when test="substring($date, 7, 1) = '0'">
                    <xsl:value-of select="substring($date, 8, 1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($date, 7, 2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:if test="not($part = 'time')">
            <xsl:choose>
                <xsl:when test="$textLangPartLowerCase = 'fr'">
                    <xsl:value-of select="$dayNum"/>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="caseDown">
                        <xsl:with-param name="data" select="$monthText"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$yearNum"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:call-template name="firstCharCaseUp">
                        <xsl:with-param name="data" select="$monthText"/>
                    </xsl:call-template>
                    <xsl:if test="string-length($dayNum) > 0">
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="$dayNum"/>
                    </xsl:if>
                    <xsl:if test="string-length($yearNum) > 0">
                        <xsl:text>, </xsl:text>
                        <xsl:value-of select="$yearNum"/>
                    </xsl:if>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
        <!-- time and US timezone -->
        <xsl:if test="string-length($date) > 8 and not($part = 'date')">
            <xsl:if test="not($part = 'time')">
                <xsl:text>, </xsl:text>
            </xsl:if>
            <!-- time -->
            <xsl:variable name="time">
                <xsl:value-of select="substring($date, 9, 6)"/>
            </xsl:variable>
            <xsl:variable name="hh">
                <xsl:value-of select="substring($time, 1, 2)"/>
            </xsl:variable>
            <xsl:variable name="mm">
                <xsl:value-of select="substring($time, 3, 2)"/>
            </xsl:variable>
            <xsl:variable name="ss">
                <xsl:value-of select="substring($time, 5, 2)"/>
            </xsl:variable>
            <xsl:if test="string-length($hh) > 1">
                <xsl:choose>
                    <xsl:when test="$textLangPartLowerCase = 'en' and number($hh) > 12">
                        <xsl:value-of select="number($hh) - 12"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$hh"/>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when
                        test="string-length($mm) > 1 and not(contains($mm, '-')) and not(contains($mm, '+')) and not($mm = '00' and $ss = '00')">
                        <xsl:text>:</xsl:text>
                        <xsl:value-of select="$mm"/>
                        <xsl:if
                            test="string-length($ss) > 1 and not(contains($ss, '-')) and not(contains($ss, '+')) and not($ss = '00')">
                            <xsl:text>:</xsl:text>
                            <xsl:value-of select="$ss"/>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="$textLangPartLowerCase = 'fr'">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'h'"/>
                        </xsl:call-template>
                    </xsl:when>
                </xsl:choose>
                <xsl:if test="$textLangPartLowerCase = 'en'">
                    <xsl:choose>
                        <xsl:when test="number($hh) > 12">
                            <xsl:text>PM</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>AM</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
            </xsl:if>
            <!-- time zone. Don't try getting a name for it as that will always fail parts of the year due to daylight savings -->
            <xsl:choose>
                <xsl:when test="contains($date, '+')">
                    <xsl:text> +</xsl:text>
                    <xsl:value-of select="substring-after($date, '+')"/>
                </xsl:when>
                <xsl:when test="contains($date, '-')">
                    <xsl:text> -</xsl:text>
                    <xsl:value-of select="substring-after($date, '-')"/>
                </xsl:when>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Formats a timestamp</xd:p>
        </xd:desc>
        <xd:param name="date"/>
        <xd:param name="part">value to tell if we want the full thing 'datetime', date only 'date',
            or time only 'time'</xd:param>
    </xd:doc>
    <xsl:template name="formatDateTimeDocument">
        <xsl:param name="date"/>
        <xsl:param name="part" select="'datetime'"/>
        <xsl:variable name="yearNum" select="substring($date, 1, 4)"/>
        <xsl:variable name="monthNum" select="substring($date, 5, 2)"/>
        <xsl:variable name="monthText">
            <xsl:call-template name="formatMonth">
                <xsl:with-param name="date" select="$date"/>
            </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="dayNum">
            <xsl:choose>
                <xsl:when test="substring($date, 7, 1) = '0'">
                    <xsl:value-of select="substring($date, 8, 1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($date, 7, 2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <fo:inline font-weight="bold">
            <xsl:if test="not($part = 'time')">
                <xsl:choose>
                    <xsl:when test="$textLangPartLowerCase = 'fr'">
                        <xsl:value-of select="$dayNum"/>
                        <xsl:text> </xsl:text>
                        <xsl:call-template name="caseDown">
                            <xsl:with-param name="data" select="$monthText"/>
                        </xsl:call-template>
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="$yearNum"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:call-template name="firstCharCaseUp">
                            <xsl:with-param name="data" select="$monthText"/>
                        </xsl:call-template>
                        <xsl:if test="string-length($dayNum) > 0">
                            <xsl:text> </xsl:text>
                            <xsl:value-of select="$dayNum"/>
                        </xsl:if>
                        <xsl:if test="string-length($yearNum) > 0">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="$yearNum"/>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:if>
        </fo:inline>
        <!-- time and US timezone -->
        <xsl:if test="string-length($date) > 8 and not($part = 'date')">
            <xsl:if test="not($part = 'time')">
                <xsl:text>, </xsl:text>
            </xsl:if>
            <!-- time -->
            <xsl:variable name="time">
                <xsl:value-of select="substring($date, 9, 6)"/>
            </xsl:variable>
            <xsl:variable name="hh">
                <xsl:value-of select="substring($time, 1, 2)"/>
            </xsl:variable>
            <xsl:variable name="mm">
                <xsl:value-of select="substring($time, 3, 2)"/>
            </xsl:variable>
            <xsl:variable name="ss">
                <xsl:value-of select="substring($time, 5, 2)"/>
            </xsl:variable>
            <xsl:if test="string-length($hh) > 1">
                <xsl:choose>
                    <xsl:when test="$textLangPartLowerCase = 'en' and number($hh) > 12">
                        <xsl:value-of select="number($hh) - 12"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$hh"/>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when
                        test="string-length($mm) > 1 and not(contains($mm, '-')) and not(contains($mm, '+')) and not($mm = '00' and $ss = '00')">
                        <xsl:text>:</xsl:text>
                        <xsl:value-of select="$mm"/>
                        <xsl:if
                            test="string-length($ss) > 1 and not(contains($ss, '-')) and not(contains($ss, '+')) and not($ss = '00')">
                            <xsl:text>:</xsl:text>
                            <xsl:value-of select="$ss"/>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="$textLangPartLowerCase = 'fr'">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'h'"/>
                        </xsl:call-template>
                    </xsl:when>
                </xsl:choose>
                <xsl:if test="$textLangPartLowerCase = 'en'">
                    <xsl:choose>
                        <xsl:when test="number($hh) > 12">
                            <xsl:text>PM</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:text>AM</xsl:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:if>
            </xsl:if>
            <!-- time zone. Don't try getting a name for it as that will always fail parts of the year due to daylight savings -->
            <xsl:choose>
                <xsl:when test="contains($date, '+')">
                    <xsl:text> +</xsl:text>
                    <xsl:value-of select="substring-after($date, '+')"/>
                </xsl:when>
                <xsl:when test="contains($date, '-')">
                    <xsl:text> -</xsl:text>
                    <xsl:value-of select="substring-after($date, '-')"/>
                </xsl:when>
            </xsl:choose>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Get someones age based on the difference between 'date' and <xd:ref
                    name="currentDate" type="parameter">currentDate</xd:ref>.</xd:p>
        </xd:desc>
        <xd:param name="date">Persons date of birth as HL7 TS</xd:param>
        <xd:param name="comparedate">The date, format yyyymmdd as HL7 TS, that the age should be
            calculated relative to</xd:param>
    </xd:doc>
    <xsl:template name="getAge">
        <xsl:param name="comparedate"/>
        <xsl:param name="date"/>
        <xsl:variable name="yearNum" select="substring($date, 1, 4)"/>
        <xsl:variable name="monthNum" select="substring($date, 5, 2)"/>
        <xsl:variable name="dayNum">
            <xsl:choose>
                <xsl:when test="substring($date, 7, 1) = &quot;0&quot;">
                    <xsl:value-of select="substring($date, 8, 1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($date, 7, 2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="yearNumCreate" select="substring($comparedate, 1, 4)"/>
        <xsl:variable name="monthNumCreate" select="substring($comparedate, 5, 2)"/>
        <xsl:variable name="dayNumCreate">
            <xsl:choose>
                <xsl:when test="substring($comparedate, 7, 1) = &quot;0&quot;">
                    <xsl:value-of select="substring($comparedate, 8, 1)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($comparedate, 7, 2)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="yearDiff" select="number($yearNumCreate) - number($yearNum)"/>
        <xsl:choose>
            <xsl:when test="number($monthNum) &lt; number($monthNumCreate)">
                <xsl:value-of select="$yearDiff"/>
            </xsl:when>
            <xsl:when test="number($monthNum) &gt; number($monthNumCreate)">
                <xsl:value-of select="$yearDiff - 1"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="number($dayNum) &lt;= number($dayNumCreate)">
                        <xsl:value-of select="$yearDiff"/>
                    </xsl:when>
                    <xsl:when test="number($dayNum) &gt; number($dayNumCreate)">
                        <xsl:value-of select="$yearDiff - 1"/>
                    </xsl:when>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Convert Telecom URI scheme (tel, fax, http, mailto) to display text</xd:p>
        </xd:desc>
        <xd:param name="code">Scheme string</xd:param>
    </xd:doc>
    <xsl:template name="translateTelecomUriScheme">
        <xsl:param name="code"/>
        <xsl:choose>
            <!-- lookup table Telecom URI -->
            <xsl:when test="$code = 'tel'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'Tel'"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$code = 'fax'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'Fax'"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$code = 'http' or $code = 'https'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'Web'"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="$code = 'mailto'">
                <xsl:call-template name="getLocalizedString">
                    <xsl:with-param name="key" select="'Mail'"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{$code='</xsl:text>
                <xsl:value-of select="$code"/>
                <xsl:text>'?}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Converts Latin characters in input to lower case and returns the result</xd:p>
        </xd:desc>
        <xd:param name="data">Input string</xd:param>
    </xd:doc>
    <xsl:template name="caseDown">
        <xsl:param name="data"/>
        <xsl:if test="$data">
            <xsl:value-of
                select="translate($data, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')"
            />
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Converts Latin characters in input to upper case and returns the result</xd:p>
        </xd:desc>
        <xd:param name="data">Input string</xd:param>
    </xd:doc>
    <xsl:template name="caseUp">
        <xsl:param name="data"/>
        <xsl:if test="$data">
            <xsl:value-of
                select="translate($data, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"
            />
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Converts first character in input to upper case if it is a Latin character and
                returns the result</xd:p>
        </xd:desc>
        <xd:param name="data">Input string</xd:param>
    </xd:doc>
    <xsl:template name="firstCharCaseUp">
        <xsl:param name="data"/>
        <xsl:if test="$data">
            <xsl:call-template name="caseUp">
                <xsl:with-param name="data" select="substring($data, 1, 1)"/>
            </xsl:call-template>
            <xsl:value-of select="substring($data, 2)"/>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Tokenize based on delimiters, or if no delimiter do character tokenization</xd:p>
        </xd:desc>
        <xd:param name="string">String to tokenize</xd:param>
        <xd:param name="delimiters">Optional delimiter string</xd:param>
        <xd:param name="prefix">Optional prefix for every 'array' item</xd:param>
        <xd:param name="localize">Optional parameter to determine if we should just tokenize or also
            try to localize array items (default)</xd:param>
    </xd:doc>
    <xsl:template name="tokenize">
        <xsl:param name="string" select="''"/>
        <xsl:param name="delimiters" select="' '"/>
        <xsl:param name="prefix"/>
        <xsl:param name="localize" select="true()"/>
        <xsl:choose>
            <xsl:when test="not($string)"/>
            <xsl:when test="not($delimiters)">
                <xsl:call-template name="_tokenize-characters">
                    <xsl:with-param name="string" select="$string"/>
                    <xsl:with-param name="prefix" select="$prefix"/>
                    <xsl:with-param name="localize" select="$localize"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="_tokenize-delimiters">
                    <xsl:with-param name="string" select="$string"/>
                    <xsl:with-param name="delimiters" select="$delimiters"/>
                    <xsl:with-param name="prefix" select="$prefix"/>
                    <xsl:with-param name="localize" select="$localize"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Tokenize every character</xd:p>
        </xd:desc>
        <xd:param name="string">String to tokenize</xd:param>
        <xd:param name="prefix">Optional prefix for every 'array' item</xd:param>
        <xd:param name="localize">Optional parameter to determine if we should just tokenize or also
            try to localize array items (default)</xd:param>
    </xd:doc>
    <xsl:template name="_tokenize-characters">
        <xsl:param name="string"/>
        <xsl:param name="prefix"/>
        <xsl:param name="localize" select="true()"/>
        <xsl:if test="$string">
            <xsl:choose>
                <xsl:when test="$localize">
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key"
                            select="concat($prefix, substring($string, 1, 1))"/>
                    </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="substring($string, 1, 1)"/>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="_tokenize-characters">
                <xsl:with-param name="string" select="substring($string, 2)"/>
                <xsl:with-param name="prefix" select="$prefix"/>
                <xsl:with-param name="localize" select="$localize"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Tokenize based on delimiters</xd:p>
        </xd:desc>
        <xd:param name="string">String to tokenize</xd:param>
        <xd:param name="delimiters">Required delimiter string</xd:param>
        <xd:param name="prefix">Optional prefix for every 'array' item</xd:param>
        <xd:param name="localize">Optional parameter to determine if we should just tokenize or also
            try to localize array items (default)</xd:param>
    </xd:doc>
    <xsl:template name="_tokenize-delimiters">
        <xsl:param name="string"/>
        <xsl:param name="delimiters"/>
        <xsl:param name="prefix"/>
        <xsl:param name="localize" select="true()"/>
        <xsl:variable name="delimiter" select="substring($delimiters, 1, 1)"/>
        <xsl:choose>
            <xsl:when test="not($delimiter)">
                <xsl:choose>
                    <xsl:when test="$localize">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="concat($prefix, $string)"/>
                        </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$string"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:when test="contains($string, $delimiter)">
                <xsl:if test="not(starts-with($string, $delimiter))">
                    <xsl:call-template name="_tokenize-delimiters">
                        <xsl:with-param name="string" select="substring-before($string, $delimiter)"/>
                        <xsl:with-param name="delimiters" select="substring($delimiters, 2)"/>
                        <xsl:with-param name="prefix" select="$prefix"/>
                        <xsl:with-param name="localize" select="$localize"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:text> </xsl:text>
                <xsl:call-template name="_tokenize-delimiters">
                    <xsl:with-param name="string" select="substring-after($string, $delimiter)"/>
                    <xsl:with-param name="delimiters" select="$delimiters"/>
                    <xsl:with-param name="prefix" select="$prefix"/>
                    <xsl:with-param name="localize" select="$localize"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="_tokenize-delimiters">
                    <xsl:with-param name="string" select="$string"/>
                    <xsl:with-param name="delimiters" select="substring($delimiters, 2)"/>
                    <xsl:with-param name="prefix" select="$prefix"/>
                    <xsl:with-param name="localize" select="$localize"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc>Index the translation file for performance</xd:desc>
    </xd:doc>
    <xsl:key name="util-i18nkey" match="translation" use="@key"/>

    <xd:doc>
        <xd:desc>
            <xd:p>Retrieves a language dependant string from our <xd:ref name="vocFile"
                    type="parameter">language file</xd:ref> such as a label based on a key. Returns
                string based on <xd:ref name="textLang" type="parameter">textLang</xd:ref>, <xd:ref
                    name="textLangDefault" type="parameter">textLangDefault</xd:ref>, the first two
                characters of the textLangDefault, e.g. 'en' in 'en-US' and finally if all else
                fails just the key text.</xd:p>
        </xd:desc>
        <xd:param name="pre">Some text or space to prefix our string with</xd:param>
        <xd:param name="key">The key to find our text with</xd:param>
        <xd:param name="post">Some text like a colon or space to postfix our text with</xd:param>
    </xd:doc>
    <xsl:template name="getLocalizedString">
        <xsl:param name="pre" select="''"/>
        <xsl:param name="key"/>
        <xsl:param name="post" select="''"/>
        <xsl:for-each select="$vocMessages">
            <xsl:variable name="translation" select="key('util-i18nkey', $key)"/>
            <xsl:choose>
                <!-- compare 'de-CH' -->
                <xsl:when test="$translation/value[@lang = $textLangLowerCase]">
                    <xsl:value-of
                        select="concat($pre, $translation/value[@lang = $textLangLowerCase]/text(), $post)"
                    />
                </xsl:when>
                <!-- compare 'de' in 'de-CH' -->
                <xsl:when test="$translation/value[substring(@lang, 1, 2) = $textLangPartLowerCase]">
                    <xsl:value-of
                        select="concat($pre, $translation/value[substring(@lang, 1, 2) = $textLangPartLowerCase]/text(), $post)"
                    />
                </xsl:when>
                <!-- compare 'en-US' -->
                <xsl:when test="$translation/value[@lang = $textLangDefaultLowerCase]">
                    <xsl:value-of
                        select="concat($pre, $translation/value[@lang = $textLangDefaultLowerCase]/text(), $post)"
                    />
                </xsl:when>
                <!-- compare 'en' in 'en-US' -->
                <xsl:when
                    test="$translation/value[substring(@lang, 1, 2) = $textLangDefaultPartLowerCase]">
                    <xsl:value-of
                        select="concat($pre, $translation/value[substring(@lang, 1, 2) = $textLangDefaultPartLowerCase]/text(), $post)"
                    />
                </xsl:when>
                <xsl:when test="$translation/value[@lang = 'en-us']">
                    <xsl:value-of select="concat($pre, $translation/value/text(), $post)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="concat($pre, $key, $post)"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Helper template for calculation of CSS font sizes. Takes <xd:ref
                    name="font-size-main" type="parameter">font-size-main</xd:ref> as base and adds
                the value in parameter <xd:i>with</xd:i> while retaining the unit.</xd:p>
        </xd:desc>
        <xd:param name="with">The value to add to the base value. May be a negative
            number</xd:param>
    </xd:doc>
    <xsl:template name="raiseFontSize">
        <xsl:param name="with"/>
        <xsl:variable name="mainsize"
            select="translate($font-size-main, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', '')"/>
        <xsl:variable name="mainunit" select="translate($font-size-main, '0123456789', '')"/>
        <xsl:value-of select="number($mainsize) + number($with)"/>
        <xsl:value-of select="$mainunit"/>
    </xsl:template>

    <!-- ====================================================================== -->
    <!--                             Javascript stuff                           -->
    <!-- ====================================================================== -->

    <xd:doc>
        <xd:doc>
            <xd:desc>
                <xd:p>telecom patient</xd:p>
            </xd:desc>
        </xd:doc>
        <xd:param name="telecom"/>
    </xd:doc>
    <xsl:template name="show-telecom-patient">
        <xsl:param name="telecom"/>
        <xsl:choose>
            <xsl:when test="$telecom">
                <xsl:variable name="type" select="substring-before($telecom/@value, ':')"/>
                <xsl:variable name="value" select="substring-after($telecom/@value, ':')"/>
                <xsl:if test="$type = 'mailto'">
                    <xsl:value-of select="$value"/>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>Adresse de messagerie non renseignée</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
        <fo:block line-height="0.1cm">&#160;</fo:block>
    </xsl:template>


    <!-- ========================================================================================================================================= -->
    <!--                                                            Autoprésentable CR-BIO                                                         -->
    <!-- ========================================================================================================================================= -->


    <xsl:param name="vocFile-1" select="'../FeuilleDeStyle/cda_l10n.xml'"/>

    <xsl:variable name="vocMessages-1" select="document($vocFile-1)"/>

    <xsl:attribute-set name="myMargin-1">
        <xsl:attribute name="margin-top">20px</xsl:attribute>
        <xsl:attribute name="margin-left">5px</xsl:attribute>
        <xsl:attribute name="margin-bottom">0</xsl:attribute>
        <xsl:attribute name="margin-right">5px</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBorder-1">
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
        <xsl:attribute name="width">100%</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock3-1">
        <xsl:attribute name="font-size">6</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="background-color">#DCF0FF</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock5-1">
        <xsl:attribute name="font-size">6</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="font-style">italic</xsl:attribute>
        <xsl:attribute name="margin-left">10px</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock6-1">
        <xsl:attribute name="font-size">6</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock7-1">
        <xsl:attribute name="font-size">6</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="background-color">white</xsl:attribute>
        <xsl:attribute name="color">rgb(0,51,102)</xsl:attribute>
        <xsl:attribute name="border">solid 0.1mm black</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock13-1">
        <xsl:attribute name="font-size">7</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock14-1">
        <xsl:attribute name="font-size">7</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="myBlock15-1">
        <xsl:attribute name="font-size">7</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
    </xsl:attribute-set>

    <xd:doc>
        <xd:desc> show-patient-name </xd:desc>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-patient-name">
        <xsl:param name="name"/>
        <xsl:if test="$name/hl7:prefix">
            <xsl:text>Civilité</xsl:text>
            <xsl:for-each select="$name/hl7:prefix">
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="$name/hl7:family">
            <xsl:choose>
                <xsl:when test="@qualifier">
                    <xsl:choose>
                        <xsl:when test="@qualifier = &apos;BR&apos;">
                            <xsl:text>Nom de naissance </xsl:text>
                            <!--<xsl:value-of select="."/>-->
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                            <xsl:text>Prénom(s) </xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;SP&apos;">
                            <xsl:text>Nom d'usage </xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;CL&apos;">
                            <xsl:text>Nom et prénom utilisés </xsl:text>
                            <xsl:text>&#160;</xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nom </xsl:text>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-patient-name-field">
        <xsl:param name="name"/>
        <xsl:if test="$name/hl7:prefix">
            <xsl:for-each select="$name/hl7:prefix">
                <xsl:value-of select="."/>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="$name/hl7:family">
            <xsl:choose>
                <xsl:when test="@qualifier">
                    <xsl:choose>
                        <xsl:when test="@qualifier = &apos;BR&apos;">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                            <xsl:variable name="count" select="count($name/hl7:given)"/>
                            <xsl:for-each select="$name/hl7:given">
                                <xsl:choose>
                                    <xsl:when test="@qualifier = &apos;BR&apos;">
                                        <xsl:value-of select="."/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="."/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="$count > 1">
                                    <xsl:if test="(position() != last()) and (position() > 1)">
                                        <xsl:text>, </xsl:text>
                                    </xsl:if>
                                    <xsl:if test="position() = 1">
                                        <xsl:text> [</xsl:text>
                                    </xsl:if>
                                    <xsl:if test="position() = last()">
                                        <xsl:text>]</xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:for-each>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;SP&apos;">
                            <xsl:value-of select="."/>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;CL&apos;">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                                <xsl:text>&#160;</xsl:text>
                                <xsl:for-each select="$name/hl7:given">
                                    <xsl:if test="@qualifier = &apos;CL&apos;">
                                        <xsl:value-of select="."/>
                                    </xsl:if>
                                    <xsl:text>&#160;</xsl:text>
                                </xsl:for-each>
                            </fo:block>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="."/>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>


    <xd:doc>
        <xd:desc/>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-patient-name-field-1">
        <xsl:param name="name"/>
        <xsl:if test="$name/hl7:prefix">
            <xsl:for-each select="$name/hl7:prefix">
                <xsl:value-of select="."/>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="$name/hl7:family">
            <xsl:choose>
                <xsl:when test="@qualifier">
                    <xsl:choose>
                        <xsl:when test="@qualifier = &apos;BR&apos;">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                            <xsl:variable name="count" select="count($name/hl7:given)"/>
                            <xsl:for-each select="$name/hl7:given">
                                <xsl:choose>
                                    <xsl:when test="@qualifier = &apos;BR&apos;">
                                        <xsl:value-of select="."/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="."/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="$count > 1">
                                    <xsl:if test="(position() != last()) and (position() > 1)">
                                        <xsl:text>, </xsl:text>
                                    </xsl:if>
                                    <xsl:if test="position() = 1">
                                        <xsl:text> [</xsl:text>
                                    </xsl:if>
                                    <xsl:if test="position() = last()">
                                        <xsl:text>]</xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:for-each>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;SP&apos;">
                            <xsl:value-of select="."/>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;CL&apos;">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                                <xsl:text>&#160;</xsl:text>
                                <xsl:for-each select="$name/hl7:given">
                                    <xsl:if test="@qualifier = &apos;CL&apos;">
                                        <xsl:value-of select="."/>
                                    </xsl:if>
                                    <xsl:text>&#160;</xsl:text>
                                </xsl:for-each>
                            </fo:block>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="."/>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-gender </xd:desc>
    </xd:doc>
    <xsl:template name="show-gender">
        <xsl:choose>
            <xsl:when test="@code = &apos;M&apos;">
                <xsl:text>Masculin</xsl:text>
            </xsl:when>
            <xsl:when test="@code = &apos;F&apos;">
                <xsl:text>Féminin</xsl:text>
            </xsl:when>
            <xsl:when test="@code = &apos;U&apos;">
                <xsl:text>Inconnu</xsl:text>
            </xsl:when>
        </xsl:choose>
    </xsl:template>


    <xd:doc>
        <xd:desc> show-address-city </xd:desc>
        <xd:param name="address"/>
    </xd:doc>
    <xsl:template name="show-address-city">
        <xsl:param name="address"/>
        <xsl:choose>
            <xsl:when test="$address">
                <xsl:if test="$address/@use">
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="translateTelecomCode">
                        <xsl:with-param name="code" select="$address/@use"/>
                    </xsl:call-template>
                    <xsl:text>:</xsl:text>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:city) > 0">
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$address/hl7:city"/>
                </xsl:if>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show time </xd:desc>
        <xd:param name="datetime"/>
    </xd:doc>
    <xsl:template name="show-time">
        <xsl:param name="datetime"/>
        <xsl:choose>
            <xsl:when test="not($datetime)">
                <xsl:call-template name="formatDateTime">
                    <xsl:with-param name="date" select="@value"/>
                </xsl:call-template>
                <xsl:text> </xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="formatDateTime">
                    <xsl:with-param name="date" select="$datetime/@value"/>
                </xsl:call-template>
                <xsl:text> </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-address-county </xd:desc>
        <xd:param name="address"/>
    </xd:doc>
    <xsl:template name="show-address-county">
        <xsl:param name="address"/>
        <xsl:choose>
            <xsl:when test="$address">
                <xsl:if test="$address/@use">
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="translateTelecomCode">
                        <xsl:with-param name="code" select="$address/@use"/>
                    </xsl:call-template>
                    <xsl:text>:</xsl:text>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:county) > 0">
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$address/hl7:county"/>
                </xsl:if>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-guardian </xd:desc>
        <xd:param name="guardian"/>
    </xd:doc>
    <xsl:template name="show-guardian">
        <xsl:param name="guardian"/>
        <xsl:for-each select="$guardian/hl7:guardianPerson">
            <xsl:call-template name="show-name-1">
                <xsl:with-param name="name" select="."/>
            </xsl:call-template>
            <fo:block line-height="0.1cm">&#160;</fo:block>
            <xsl:for-each select="$guardian/hl7:addr">
                <xsl:call-template name="show-address-patient">
                    <xsl:with-param name="address" select="."/>
                </xsl:call-template>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
            <fo:block line-height="0.1cm">&#160;</fo:block>
            <xsl:for-each select="$guardian/hl7:telecom">
                <xsl:call-template name="show-telecom-1">
                    <xsl:with-param name="telecom" select="."/>
                </xsl:call-template>
            </xsl:for-each>
            <fo:block line-height="0.1cm">&#160;</fo:block>
        </xsl:for-each>
        <xsl:for-each select="$guardian/hl7:guardianOrganization">
            <xsl:call-template name="show-name-1">
                <xsl:with-param name="name" select="."/>
            </xsl:call-template>
            <fo:block line-height="0.1cm">&#160;</fo:block>
            <xsl:for-each select="$guardian/hl7:addr">
                <xsl:call-template name="show-address-patient">
                    <xsl:with-param name="address" select="."/>
                </xsl:call-template>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
            <fo:block line-height="0.1cm">&#160;</fo:block>
            <xsl:for-each select="$guardian/hl7:telecom">
                <xsl:call-template name="show-telecom-1">
                    <xsl:with-param name="telecom" select="."/>
                </xsl:call-template>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-address-patient </xd:desc>
        <xd:param name="address"/>
    </xd:doc>
    <xsl:template name="show-address-patient">
        <xsl:param name="address"/>
        <xsl:choose>
            <xsl:when test="$address">
                <xsl:if test="$address/@use">
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="translateTelecomCode">
                        <xsl:with-param name="code" select="$address/@use"/>
                    </xsl:call-template>
                    <xsl:text>:</xsl:text>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:if>
                <xsl:for-each select="$address/hl7:streetAddressLine">
                    <xsl:value-of select="."/>
                </xsl:for-each>
                <xsl:if test="$address/hl7:streetName">
                    <xsl:value-of select="$address/hl7:houseNumber"/>
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$address/hl7:streetNameType"/>
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$address/hl7:streetName"/>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:postalCode) > 0">
                    <xsl:value-of select="$address/hl7:postalCode"/>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:city) > 0">
                    <xsl:text>,&#160;</xsl:text>
                    <xsl:value-of select="$address/hl7:city"/>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:state) > 0">
                    <xsl:text>,&#160;</xsl:text>
                    <xsl:value-of select="$address/hl7:state"/>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:country) > 0">
                    <xsl:text>,&#160;</xsl:text>
                    <xsl:value-of select="$address/hl7:country"/>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>addresse non renseignée</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name="code"/>
    </xd:doc>
    <xsl:template name="translateTelecomCode">
        <xsl:param name="code"/>
        <xsl:choose>
            <!-- lookup table Telecom URI -->
            <xsl:when test="$code = 'tel'">
                <xsl:text>Tel</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'fax'">
                <xsl:text>Fax</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'http'">
                <xsl:text>Page Web</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'mailto'">
                <xsl:text>Adresse de messagerie</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'H'">
                <xsl:text>Domicile</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'TMP'">
                <xsl:text>Adresse temporaire</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'HV'">
                <xsl:text>Domicile de vacances</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'HP'">
                <xsl:text>Domicile principal</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'WP'">
                <xsl:text>Travail</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'PUB'">
                <xsl:text>Numéro Public</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'DIR'">
                <xsl:text>Numéro direct</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'EC'">
                <xsl:text>Urgence</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'MC'">
                <xsl:text>Mobile</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'PG'">
                <xsl:text>Pager</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>{$code='</xsl:text>
                <xsl:value-of select="$code"/>
                <xsl:text>'?}</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>


    <xd:doc>
        <xd:desc/>
        <xd:param name="ref"/>
    </xd:doc>
    <xsl:template name="printNameAndId">
        <xsl:param name="ref"/>
        <fo:inline font-style="italic" color="rgb(0, 112, 192)">
            <xsl:value-of
                select="$ref/hl7:assignedPerson/hl7:name | $ref/hl7:associatedPerson/hl7:name"/>
            <xsl:text>(</xsl:text>
            <xsl:value-of select="$ref//hl7:id/@extension"/>
            <xsl:text>)</xsl:text>
        </fo:inline>
    </xsl:template>



    <xd:doc>
        <xd:desc/>
        <xd:param name="date"/>
    </xd:doc>
    <xsl:template name="printDateAndTime">
        <xsl:param name="date"/>
        <xsl:call-template name="printDate">
            <xsl:with-param name="date" select="$date"/>
        </xsl:call-template>
        <xsl:text> </xsl:text>
        <xsl:value-of select="substring($date, 9, 2)"/>
        <xsl:text>:</xsl:text>
        <xsl:value-of select="substring($date, 11, 2)"/>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name="date"/>
    </xd:doc>
    <xsl:template name="printDate">
        <xsl:param name="date"/>
        <xsl:value-of select="substring($date, 7, 2)"/>
        <xsl:text>/</xsl:text>
        <xsl:value-of select="substring($date, 5, 2)"/>
        <xsl:text>/</xsl:text>
        <xsl:value-of select="substring($date, 1, 4)"/>
    </xsl:template>


    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template name="directeur_signe">
        <fo:block line-height="0.1cm">&#160;</fo:block>
        <fo:external-graphic content-height="scale-to-fit" content-width="50%" scaling="non-uniform"
            src="data:image/jpeg;base64,
                iVBORw0KGgoAAAANSUhEUgAAAK8AAACvAQMAAACxXBw2AAAAB3RJTUUH2woPDAQmGYX3JgAAAAlw
                SFlzAAAK8AAACvABQqw0mAAAAAZQTFRFAAAA////pdmf3QAAAShJREFUeNrtl0EOhCAMRcvKJTeC
                mw16M7xRl6xgfkGNmllOITPRpEGfCwv/tyCVT1emB/8TToTLEdloC8t90Me+RiaMHGqoY0cmeXZ2
                BXqRGY1LxJqsnTGE6IarDJi8KH9Xpy+uHkRyEndr6uCttjyTaH8tQCWcTBKzYfp4dZq8Ihbtp1JW
                PDg7Q/8yDGM9kiRHCDhwT1ATxylPWb6PWPhQXhPXWmMDARxdZeiN4yTJwfZkMOZdBk0smTS9nc10
                WRMtDJuJ2WB8U2a78ECcWo810mTsvK+JJm6NRfraVQY9XJupr1OXnSSc+7cWboeFuGVyNNMBWLZR
                uG/bR177BqOPAWF6w92wr+Xt4e95IBYZcFRAclL7XXA7LADDg4ED6+Ov/CA8+NfwG147q3gE6HAP
                AAAAAElFTkSuQmCC"/>
    </xsl:template>


    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template name="printLogo">
        <fo:external-graphic content-height="scale-to-fit" content-width="50%" scaling="non-uniform"
            src="data:image/jpeg;base64,
                /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQY
                GBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYa
                KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAAR
                CABqADkDASIAAhEBAxEB/8QAHAAAAgIDAQEAAAAAAAAAAAAAAAcGCAMEBQEC/8QANRAAAgED
                AwMDAgIIBwAAAAAAAQIDBAURABIhBgcxE0FRFCIyQggVI1JhgZGhFjNicXKC4f/EABQBAQAA
                AAAAAAAAAAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwC1OjRo
                0Bo0a5HVlxa1WCrqonVajaI4Ny7t0jHaoA9ySRoI11p1tNaXppbT6FRSCT0qmRoXkVHJwqko
                dwyfcK3t8g6mtFM9RSRyyQvA7D7o38qfcf8Auq73+pjr1stps8oerqLhT0tR9TKymObcxM5A
                YMp3KCuOCT4zzqxNHFJDSQRTSmeVEVXlIwXIHLY9s+dBmHOjRo0Bo0aNAaXXce9ejckgwFht
                8IqWdlyDUSExwY+dv7Rz/sNMKeWOngkmmcJFGpd2PhQBkk6rz3GuVdUMlG7KslzlMshP5Vcb
                QoGRyIRj43SjxydBrdq7Xb773Es10aQRVKQyV8cUshdpIAPTiBVsgPyGJX93OedWS1X/ALf2
                enuPX9vp1CrLQ0grKuWNAruiygwRuwA/Ou75+wjwdWA0Bo0aNAaNGtK93Ons1qqrhWttp6dC
                7HIGfgc8ZJwP56Dj9c1UAoIrfUS+mlWx9Ug4IhQb5Cf4EDb/ANtIUTSXzrSorhMjrTAovwjF
                svtx8YCHxj0xzzjXd7g9drVXjdSRYmajSlqaOR1kdHYiRAoTJIJZQSu7g8gcZgVRT3D6GKio
                ZGgEdPLNWSKSSvhiQByASRuOFz9uRgkEHb2rNFb+or3FKRHW3EwvGXGPUCR4KqffGC2B8sfn
                TS1V3o67VlytVrkkqxV1VFUR1EjQxrC8kEcmMquRjcF4PHvxwcOvtULlLY2rq6qklpKt3kp4
                5ZmldB6j+WbPttAAYgY40E30aNGg8dlRSzkKoGSScADUepeo+lepvqLZTXW03PdmOSmWdJd3
                yNueddLqK3C8dP3O2M20VtLLTFj7b0K5/vqjz2mt6M6nSw9QCptLpK2KqPY4IwxSZQ5CkDxj
                IyAQPgBOu2vQRvHc+522rt80dBRVhnqvsP0zorZTYcAZf7cKfyFscHVl+pOl7feSlTIopq+G
                Jo46yMAOqHyh/eQ+6/0wedILsx3QNu6jrbRVTQ19jkdppbmImhZJOBltyrxheQwyPlscszrj
                ufaaahqrbT/WxV00oo1aWmZVAYsGcFioICqW8jjkZ2sAC2ounamgSv8ARqzWXe+zLRUzRIwj
                jQ8AqMkgBdzkknxyT5Nj7Pb6e02mit1EuylpIUgiX4VVAH9hpO9nLzHeOu62nkUxyUVuWSNB
                hhukZd53D3AEYA/1t507dAaNGjQGqV92qPqWzdcXKTqr6262wTvNDDVyO1K8LPu2RO/CEADw
                TggDBAObRdyJb7TwUc9lp6yqokEv1kFFIsc7cDYVY84H3cLzyPYY0qrnfkklo4qeOb0KlkWd
                LveG21eSMxeg4IJI3ZOMDBI5wdAprtYV6U6lgNrqqG42p5VqaKIVJnikAJ2rIQfSzvjweAoY
                +wA1JLReE6x6mlo3ommtKUUkkcTO4MWwlysXolVGZMgf8FIB9pj090s13kuEVrsVNNS0imKn
                hrAPtLb4yWcnOMo3GD9gQjyRqd9VdJWix2Oxy01DTrX0UclKk6KVLK0ErOPPOWG7nODoOV+j
                9ZY6GWrrYg0YmttGBEx3bAWmcLuPJ2gqufcKNOXSf7DGdYqZHl3R/qG3sUI8H9pzpwaA0aNG
                gNcXqm3NV2avNBSUktyaF1hM8StliuMfcMeOOePnjXa0aCJdsemW6Y6aSGpXFfUt69T+H7W2
                hVT7eMKiqvHGQSPOvnuU0f6qpkYgyepIyoDyR6EoJx8c/wB9SyeaOCJpZpFjjUZLMcAaSnUE
                sN2udRcoG9OlqDI7PFLhdyIUyT7MQACPfbjQbXY+vSS5JAkbYkslL95QquYiQQM+f80eMjjT
                k1WvthUV1sje9iq+joqNZKUGWLEckW8n8T/lG1eV+PPkadHR3W9B1FbY6gq9M7hmXePtlQHA
                dD8EYIzz/TOglmjWGlqoKpN9NMkq8ZKnOMjPPxrNoD31guE8lNQVM8MD1EsUbOsKfikIGQo/
                ifGs+jQVyvndWvnro6ZbFdq6uXLSUjQPCsBzgBgVOCTwOCfOT8ybp/ovqS/OKu/JQ2uneRZT
                Txw/tGxkruOcj8Rzz8e+dOfRoE1fezVXcpkWj6jegpowXXdB9Ud+0LgrKSNoHtn+mt2j7e9V
                UcYh/wASUVREg2oy0S07EfJCgj+Q402NGgW/b7ovqGwdX3a6XS8RTUNZDHEtJGxcFkzh+VXa
                eW4Gc5/gNMjRo0H/2Q=="/>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-name </xd:desc>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-name-1">
        <xsl:param name="name"/>
        <xsl:choose>
            <xsl:when test="$name/hl7:family">
                <xsl:choose>
                    <xsl:when test="$name/hl7:suffix">
                        <xsl:for-each select="$name/hl7:suffix">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$name/hl7:prefix">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$name/hl7:given">
                    <fo:block font-weight="bold">
                        <xsl:value-of select="."/>
                        <xsl:text> </xsl:text>
                    </fo:block>
                </xsl:for-each>
                <xsl:for-each select="$name/hl7:family">
                    <fo:block font-weight="bold">
                        <xsl:value-of select="."/>
                    </fo:block>
                    <xsl:if test="@qualifier">
                        <xsl:choose>
                            <xsl:when test="@qualifier = &apos;BR&apos;">
                                <xsl:text> (Nom de famille) </xsl:text>
                            </xsl:when>
                            <xsl:when test="@qualifier = &apos;SP&apos;">
                                <xsl:text> (Nom d'usage) </xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@qualifier"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:text> </xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <fo:block font-weight="bold">
                    <xsl:value-of select="$name"/>
                </fo:block>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-identifiant </xd:desc>
        <xd:param name="id"/>
    </xd:doc>
    <xsl:template name="show-identifiant-1">
        <xsl:param name="id"/>
        <xsl:choose>
            <xsl:when test="not($id)">
                <xsl:if test="not(@nullFlavor)">
                    <xsl:if test="@extension">
                        <xsl:value-of select="@extension"/>
                    </xsl:if>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:if test="not($id/@nullFlavor)">
                    <xsl:if test="$id/@extension">
                        <xsl:value-of select="$id/@extension"/>
                    </xsl:if>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-id </xd:desc>
        <xd:param name="id"/>
    </xd:doc>
    <xsl:template name="show-id-1">
        <xsl:param name="id"/>
        <xsl:choose>
            <xsl:when test="not($id)">
                <xsl:if test="not(@nullFlavor)">
                    <xsl:if test="@extension">
                        <xsl:value-of select="@extension"/>
                    </xsl:if>
                    <xsl:text> [</xsl:text>
                    <xsl:value-of select="@root"/>
                    <xsl:text>]</xsl:text>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:if test="not($id/@nullFlavor)">
                    <xsl:if test="$id/@extension">
                        <xsl:value-of select="$id/@extension"/>
                    </xsl:if>
                    <xsl:text> [</xsl:text>
                    <xsl:value-of select="$id/@root"/>
                    <xsl:text>]</xsl:text>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name="in"/>
    </xd:doc>
    <xsl:template name="show-address-1">
        <xsl:param name="in"/>
        <xsl:if test="$in">
            <xsl:if test="$in/@use">
                <fo:inline color="black">
                    <xsl:call-template name="tokenize">
                        <xsl:with-param name="prefix" select="'addressUse_'"/>
                        <xsl:with-param name="string" select="$in/@use"/>
                        <xsl:with-param name="delimiters" select="' '"/>
                    </xsl:call-template>
                    <xsl:text>: </xsl:text>
                </fo:inline>
            </xsl:if>
            <xsl:if test="$in[@use][@nullFlavor]">
                <xsl:text> </xsl:text>
            </xsl:if>
            <xsl:call-template name="show-nullFlavor">
                <xsl:with-param name="in" select="$in/@nullFlavor"/>
            </xsl:call-template>
            <xsl:for-each select="$in/text() | $in/*">
                <xsl:choose>
                    <xsl:when test="self::hl7:useablePeriod"/>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:streetName">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber' or local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']/following-sibling::hl7:*[1][local-name() = 'additionalLocator']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                    following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>
                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumber']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix'] |
                                        $additionalLocator/following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber']/following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"/>
                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix' or local-name() = 'additionalLocator')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'STR']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:variable name="additionalLocator" select="
                                    following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS']/following-sibling::hl7:part[1][@type = 'BNS']/following-sibling::hl7:part[1][@type = 'ADL']"/>
                            <xsl:variable name="houseNumber" select="
                                    following-sibling::hl7:part[1][@type = 'BNN'] |
                                    following-sibling::hl7:part[1][@type = 'BNR']"/>
                            <xsl:variable name="buildingNumberSuffix" select="
                                    following-sibling::hl7:part[1][@type = 'BNS'] |
                                    following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>
                            <xsl:value-of select="."/>
                            <xsl:choose>
                                <xsl:when test="string-length($houseNumber) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$houseNumber"/>
                                    <xsl:if test="string-length($buildingNumberSuffix) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix"/>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:when test="string-length($buildingNumberSuffix) > 0">
                                    <xsl:text>&#160;</xsl:text>
                                    <xsl:value-of select="$buildingNumberSuffix"/>
                                </xsl:when>
                            </xsl:choose>
                            <xsl:if test="string-length($additionalLocator) > 0">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of select="$additionalLocator"/>

                                <xsl:variable name="houseNumber2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNR']"/>
                                <xsl:variable name="buildingNumberSuffix2" select="
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNS'] |
                                        $additionalLocator/following-sibling::hl7:part[1][@type = 'BNN' or @type = 'BNR']/following-sibling::hl7:part[1][@type = 'BNS']"/>

                                <xsl:choose>
                                    <xsl:when test="string-length($houseNumber2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$houseNumber2"/>
                                        <xsl:if test="string-length($buildingNumberSuffix2) > 0">
                                            <xsl:text>&#160;</xsl:text>
                                            <xsl:value-of select="$buildingNumberSuffix2"/>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:when test="string-length($buildingNumberSuffix2) > 0">
                                        <xsl:text>&#160;</xsl:text>
                                        <xsl:value-of select="$buildingNumberSuffix2"/>
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::*[not(@type = 'BNR' or local-name() = 'houseNumberNumeric' or @type = 'BNS' or @type = 'ADL')][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 only if not streetAddressLine -->
                    <xsl:when
                        test="self::hl7:houseNumber or self::hl7:houseNumberNumeric or self::hl7:buildingNumberSuffix">
                        <xsl:if test="not(../hl7:streetAddressLine)">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][local-name() = 'streetName' or local-name() = 'additionalLocator'])">
                                <xsl:if
                                    test="not(self::hl7:buildingNumberSuffix and preceding-sibling::hl7:*[1][local-name() = 'houseNumberNumeric' or local-name() = 'houseNumber'])">
                                    <xsl:value-of select="."/>
                                    <xsl:if
                                        test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 only if not streetAddressLine -->
                    <xsl:when test="self::hl7:part[@type = 'BNN' or @type = 'BNR' or @type = 'BNS']">
                        <xsl:if test="not(../hl7:part[@type = 'SAL'])">
                            <xsl:if
                                test="not(preceding-sibling::hl7:*[1][hl7:part[@type = 'STR' or @type = 'ADL']])">
                                <xsl:if
                                    test="not(self::hl7:part[@type = 'BNS'] and preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR'])">
                                    <xsl:value-of select="@value"/>
                                    <xsl:if
                                        test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                        <xsl:text> </xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:additionalLocator">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][local-name() = 'houseNumber' or local-name() = 'houseNumberNumeric' or local-name() = 'buildingNumberSuffix'])">
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumberNumeric']"
                                />
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][local-name() = 'houseNumber']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'houseNumber']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][local-name() = 'buildingNumberSuffix']"
                                />
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ADL']">
                        <xsl:if
                            test="not(preceding-sibling::hl7:*[1][@type = 'BNN' or @type = 'BNR' or @type = 'BNS'])">
                            <xsl:value-of select="@value"/>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNN']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNN']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNR']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNR']/@value"/>
                            </xsl:if>
                            <xsl:if test="following-sibling::hl7:*[1][@type = 'BNS']">
                                <xsl:text>&#160;</xsl:text>
                                <xsl:value-of
                                    select="following-sibling::hl7:*[1][@type = 'BNS']/@value"/>
                            </xsl:if>
                            <xsl:if
                                test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postBox">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="."/>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'POB']">
                        <xsl:call-template name="getLocalizedString">
                            <xsl:with-param name="key" select="'Postbox'"/>
                            <xsl:with-param name="post" select="' '"/>
                        </xsl:call-template>
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:city">
                        <xsl:if
                            test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="."/>
                        <xsl:if test="../hl7:state[string-length(.) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:state"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:postalCode[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(.) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(.) > 0]"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                        <xsl:if test="following-sibling::hl7:*[1][string-length(.) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 ZIP CITY, STATE or CITY, STATE ZIP depending on addr part contents -->
                    <xsl:when test="self::hl7:part[@type = 'CTY']">
                        <xsl:if
                            test="preceding-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="preceding-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:value-of select="@value"/>
                        <xsl:if test="../hl7:part[@type = 'STA'][string-length(@value) > 0]">
                            <xsl:text>, </xsl:text>
                            <xsl:value-of select="../hl7:part[@type = 'STA']/@value"/>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[@type = 'ZIP'][1][string-length(@value) > 0 or @code]">
                            <xsl:choose>
                                <xsl:when
                                    test="following-sibling::hl7:postalCode[1][string-length(@value) > 0]">
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][string-length(@value) > 0]/@value"
                                    />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of
                                        select="following-sibling::hl7:postalCode[1][@code]/@code"/>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if
                            test="following-sibling::hl7:part[1][string-length(@value) > 0 or @code]">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:postalCode and ../hl7:city"/>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'ZIP'] and ../hl7:part[@type = 'CTY']"/>
                    <!-- DTr1 -->
                    <xsl:when test="self::hl7:state">
                        <xsl:if test="not(../hl7:city)">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]) > 0 or preceding-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="."/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="self::hl7:part[@type = 'STA']">
                        <xsl:if test="not(../hl7:part[@type = 'CTY'])">
                            <xsl:if
                                test="(string-length(preceding-sibling::hl7:*[1]/@value) > 0 or preceding-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                            <xsl:value-of select="@value"/>
                            <xsl:if
                                test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr1 -->
                    <xsl:when test="string-length(text()) > 0">
                        <xsl:value-of select="."/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if test="string(number(following-sibling::hl7:*[1])) != 'NaN'">
                            <xsl:if
                                test="number(following-sibling::hl7:*[1]) = following-sibling::hl7:*[1]">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <!-- DTr2 -->
                    <xsl:when test="string-length(@value) > 0">
                        <xsl:value-of select="@value"/>
                        <xsl:if
                            test="(string-length(following-sibling::hl7:*[1]/@value) > 0 or following-sibling::hl7:*/@code)">
                            <xsl:text> </xsl:text>
                        </xsl:if>
                        <xsl:if test="string(number(following-sibling::hl7:*[1]/@value)) != 'NaN'">
                            <xsl:if
                                test="number(following-sibling::hl7:*[1]/@value) = following-sibling::hl7:*[1]/@value">
                                <xsl:text> </xsl:text>
                            </xsl:if>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise> </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
            <xsl:for-each select="$in/hl7:useablePeriod">
                <fo:block>
                    <xsl:call-template name="getLocalizedString">
                        <xsl:with-param name="key" select="'Period'"/>
                    </xsl:call-template>
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="show-ivlts">
                        <xsl:with-param name="in" select="."/>
                    </xsl:call-template>
                </fo:block>
            </xsl:for-each>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name="telecom"/>
    </xd:doc>
    <xsl:template name="show-telecom-1">
        <xsl:param name="telecom"/>
        <xsl:choose>
            <xsl:when test="$telecom">
                <xsl:variable name="type" select="substring-before($telecom/@value, ':')"/>
                <xsl:variable name="value" select="substring-after($telecom/@value, ':')"/>
                <xsl:if test="$type">
                    <xsl:if test="not(@use) or ($type = 'mailto')">
                        <xsl:call-template name="translateTelecomCode">
                            <xsl:with-param name="code" select="$type"/>
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="@use">
                        <xsl:text> </xsl:text>
                        <xsl:if test="($type != 'mailto')">
                            <xsl:call-template name="translateTelecomCode">
                                <xsl:with-param name="code" select="@use"/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:if test="($type = 'mailto')">
                            <xsl:text>(</xsl:text>
                            <xsl:call-template name="translateTelecomCode">
                                <xsl:with-param name="code" select="@use"/>
                            </xsl:call-template>
                            <xsl:text>)</xsl:text>
                        </xsl:if>
                    </xsl:if>
                    <xsl:text>: </xsl:text>
                    <xsl:text> </xsl:text>
                    <xsl:value-of select="$value"/>
                </xsl:if>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>Coordonnées téléphoniques non renseignées</xsl:text>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:otherwise>
        </xsl:choose>
        <fo:block line-height="0.1cm">&#160;</fo:block>
    </xsl:template>


    <!-- ========================================================================================================================================= -->
    <!--                                                            Autoprésentable CANCER-PPS                                                     -->
    <!-- ========================================================================================================================================= -->

    <xsl:attribute-set name="data">
        <xsl:attribute name="font-size">6px</xsl:attribute>
        <xsl:attribute name="font-weight">normal</xsl:attribute>
        <xsl:attribute name="color">#003366</xsl:attribute>
        <xsl:attribute name="font-family">Verdana, Tahoma, sans-serif</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="title">
        <xsl:attribute name="font-size">12px</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="text-align">center</xsl:attribute>
        <xsl:attribute name="width">80%</xsl:attribute>
        <xsl:attribute name="color">#003366</xsl:attribute>
    </xsl:attribute-set>

    <xsl:attribute-set name="contact">
        <xsl:attribute name="background-color">silver</xsl:attribute>
        <xsl:attribute name="font-size">12pt</xsl:attribute>
        <xsl:attribute name="font-weight">bold</xsl:attribute>
        <xsl:attribute name="color">black</xsl:attribute>
    </xsl:attribute-set>

    <xd:doc>
        <xd:desc> show-name (Nom en gras) </xd:desc>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-name-2">
        <xsl:param name="name"/>
        <xsl:choose>
            <xsl:when test="$name/hl7:family">
                <xsl:choose>
                    <xsl:when test="$name/hl7:suffix">
                        <xsl:for-each select="$name/hl7:suffix">
                            <fo:block font-weight="bold" xsl:use-attribute-sets="data">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$name/hl7:prefix">
                            <fo:block font-weight="bold" xsl:use-attribute-sets="data">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$name/hl7:given">
                    <fo:block font-weight="bold" xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                        <xsl:text> </xsl:text>
                    </fo:block>
                </xsl:for-each>
                <xsl:for-each select="$name/hl7:family">
                    <fo:block font-weight="bold" xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                    </fo:block>
                    <xsl:if test="@qualifier">
                        <xsl:choose>
                            <xsl:when test="@qualifier = &apos;BR&apos;">
                                <xsl:text> (Nom de famille) </xsl:text>
                            </xsl:when>
                            <xsl:when test="@qualifier = &apos;SP&apos;">
                                <xsl:text> (Nom d'usage) </xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="@qualifier"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:text> </xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <fo:block font-weight="bold" xsl:use-attribute-sets="data">
                    <xsl:value-of select="$name"/>
                </fo:block>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-name-not-bold (Nom pas en gras) </xd:desc>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-name-not-bold">
        <xsl:param name="name"/>
        <xsl:choose>
            <xsl:when test="$name/hl7:family">
                <xsl:choose>
                    <xsl:when test="$name/hl7:suffix">
                        <xsl:for-each select="$name/hl7:suffix">
                            <fo:inline xsl:use-attribute-sets="data">
                                <xsl:value-of select="."/>
                            </fo:inline>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$name/hl7:prefix">
                            <fo:inline xsl:use-attribute-sets="data">
                                <xsl:value-of select="."/>
                            </fo:inline>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$name/hl7:given">
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                    </fo:inline>
                </xsl:for-each>
                <xsl:for-each select="$name/hl7:family">
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                    </fo:inline>
                    <xsl:if test="@qualifier">
                        <xsl:choose>
                            <xsl:when test="@qualifier = &apos;BR&apos;">
                                <xsl:text> (Nom de famille) </xsl:text>
                            </xsl:when>
                            <xsl:when test="@qualifier = &apos;SP&apos;">
                                <xsl:text> (Nom d'usage) </xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <fo:inline xsl:use-attribute-sets="data">
                                    <xsl:value-of select="@qualifier"/>
                                </fo:inline>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:text> </xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <fo:inline xsl:use-attribute-sets="data">
                    <xsl:value-of select="$name"/>
                </fo:inline>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-version (du document) </xd:desc>
        <xd:param name="version"/>
    </xd:doc>
    <xsl:template name="show-version">
        <xsl:param name="version"/>
        <xsl:choose>
            <xsl:when test="not($version)">
                <xsl:if test="not(@nullFlavor)">
                    <xsl:if test="@value">
                        <fo:inline xsl:use-attribute-sets="data">
                            <xsl:value-of select="@value"/>
                        </fo:inline>
                    </xsl:if>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:if test="not($version/@nullFlavor)">
                    <xsl:if test="$version/@value">
                        <fo:inline xsl:use-attribute-sets="data">
                            <xsl:value-of select="$version/@value"/>
                        </fo:inline>
                    </xsl:if>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:text>&#160;&#160;</xsl:text>
    </xsl:template>


    <xd:doc>
        <xd:desc> show-statut-document </xd:desc>
        <xd:param name="statut_document"/>
    </xd:doc>
    <xsl:template name="show-statut-document">
        <xsl:param name="statut_document"/>
        <xsl:if test="$statut_document">
            <fo:inline xsl:use-attribute-sets="data">
                <xsl:value-of select="$statut_document"/>
            </fo:inline>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-motif-update </xd:desc>
        <xd:param name="motif"/>
    </xd:doc>
    <xsl:template name="show-motif-update">
        <xsl:param name="motif"/>
        <xsl:if test="$motif">
            <xsl:variable name="ped" select="$motif"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$ped"/>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-commentaire-motif </xd:desc>
        <xd:param name="commentaire-motif"/>
    </xd:doc>
    <xsl:template name="show-commentaire-motif">
        <xsl:param name="commentaire-motif"/>
        <xsl:if
            test="$commentaire-motif/hl7:table/hl7:tbody/hl7:tr/hl7:td/hl7:content[@ID = 'motif-maj-précision']">
            <xsl:variable name="comm"
                select="$commentaire-motif/hl7:table/hl7:tbody/hl7:tr/hl7:td/hl7:content[@ID = 'motif-maj-précision']"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$comm"/>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-date-remise-document </xd:desc>
        <xd:param name="remise"/>
    </xd:doc>
    <xsl:template name="show-date-remise-document">
        <xsl:param name="remise"/>
        <xsl:if test="$remise">
            <xsl:variable name="ped" select="$remise"/>
            <xsl:variable name="year" select="substring($ped, 1, 4)"/>
            <xsl:variable name="month" select="substring($ped, 5, 2)"/>
            <xsl:variable name="day" select="substring($ped, 7, 2)"/>
            <fo:inline xsl:use-attribute-sets="data">
                <xsl:value-of select="$day"/>
                <xsl:text>/</xsl:text>
                <xsl:value-of select="$month"/>
                <xsl:text>/</xsl:text>
                <xsl:value-of select="$year"/>
            </fo:inline>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-commentaire-document </xd:desc>
        <xd:param name="commentaire-document"/>
    </xd:doc>
    <xsl:template name="show-commentaire-document">
        <xsl:param name="commentaire-document"/>
        <xsl:if
            test="$commentaire-document/hl7:table/hl7:tbody/hl7:tr/hl7:td/hl7:content[@ID = 'commentaire-document']">
            <xsl:variable name="comm"
                select="$commentaire-document/hl7:table/hl7:tbody/hl7:tr/hl7:td/hl7:content[@ID = 'commentaire-document']"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$comm"/>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> informant : Correspondance relatedEntity/classCode et libellé affiché </xd:desc>
        <xd:param name="clsCode"/>
    </xd:doc>
    <xsl:template name="show-relatedEntityClass">
        <xsl:param name="clsCode"/>
        <xsl:choose>
            <xsl:when test="$clsCode = 'ECON'">
                <fo:inline font-size="6" margin-top="3px">
                    <xsl:text>Contact en cas d'urgence</xsl:text>
                </fo:inline>
            </xsl:when>
            <xsl:when test="$clsCode = 'NOK'">
                <fo:inline font-size="6" margin-top="3px">
                    <xsl:text>Personne de confiance</xsl:text>
                </fo:inline>
            </xsl:when>
            <xsl:when test="$clsCode = 'CON'">
                <fo:inline font-size="6" margin-top="3px">
                    <xsl:text>Informateur</xsl:text>
                </fo:inline>
            </xsl:when>
            <xsl:otherwise>
                <fo:inline font-size="6" margin-top="3px">
                    <xsl:value-of select="$clsCode"/>
                    <xsl:text>  </xsl:text>
                </fo:inline>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-comm-patient </xd:desc>
        <xd:param name="commentaire"/>
    </xd:doc>
    <xsl:template name="show-comm-patient">
        <xsl:param name="commentaire"/>
        <fo:block xsl:use-attribute-sets="data">
            <xsl:value-of select="$commentaire"/>
        </fo:block>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-commentaire-pediatrie </xd:desc>
        <xd:param name="commentaire-pediatrie"/>
    </xd:doc>
    <xsl:template name="show-commentaire-pediatrie">
        <xsl:param name="commentaire-pediatrie"/>
        <xsl:if test="$commentaire-pediatrie/hl7:paragraph/hl7:content/@ID">
            <xsl:variable name="comm"
                select="$commentaire-pediatrie/hl7:paragraph/hl7:content[@ID = 'commentaire-pediatrie']"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$comm"/>
            </fo:block>
        </xsl:if>
    </xsl:template>


    <xd:doc>
        <xd:desc> show-pédiatrie </xd:desc>
        <xd:param name="pediatrie"/>
    </xd:doc>
    <xsl:template name="show-pediatrie">
        <xsl:param name="pediatrie"/>
        <xsl:if test="$pediatrie/hl7:paragraph/hl7:content/@ID">
            <xsl:variable name="ped"
                select="$pediatrie/hl7:paragraph/hl7:content[@ID = 'pediatrie']"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$ped"/>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> Affichage du contenu d'une section </xd:desc>
    </xd:doc>
    <xsl:template name="corpsSection">
        <xsl:call-template name="section-text"/>
        <xsl:for-each select="hl7:component/hl7:section">
            <xsl:call-template name="nestedSection">
                <xsl:with-param name="margin" select="2"/>
            </xsl:call-template>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-date-consultation-annonce </xd:desc>
        <xd:param name="consult"/>
    </xd:doc>
    <xsl:template name="show-date-consultation-annonce">
        <xsl:param name="consult"/>
        <xsl:if test="$consult">
            <xsl:variable name="ped" select="$consult"/>
            <xsl:variable name="year" select="substring($ped, 1, 4)"/>
            <xsl:variable name="month" select="substring($ped, 5, 2)"/>
            <xsl:variable name="day" select="substring($ped, 7, 2)"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$day"/>
                <xsl:text>/</xsl:text>
                <xsl:value-of select="$month"/>
                <xsl:text>/</xsl:text>
                <xsl:value-of select="$year"/>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-lot-version (du document) </xd:desc>
        <xd:param name="lot"/>
    </xd:doc>
    <xsl:template name="show-lot-version">
        <xsl:param name="lot"/>
        <xsl:choose>
            <xsl:when test="not($lot)">
                <xsl:if test="not(@nullFlavor)">
                    <xsl:if test="@extension">
                        <fo:block xsl:use-attribute-sets="data">
                            <xsl:value-of select="@extension"/>
                        </fo:block>
                    </xsl:if>
                    <xsl:if test="@root">
                        <fo:block xsl:use-attribute-sets="data">
                            <xsl:text> [</xsl:text>
                            <xsl:value-of select="@root"/>
                            <xsl:text>]</xsl:text>
                        </fo:block>
                    </xsl:if>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:if test="not($lot/@nullFlavor)">
                    <xsl:if test="$lot/@extension">
                        <fo:block xsl:use-attribute-sets="data">
                            <xsl:value-of select="$lot/@extension"/>
                        </fo:block>
                    </xsl:if>
                    <xsl:if test="$lot/@root">
                        <fo:block xsl:use-attribute-sets="data">
                            <xsl:text> [</xsl:text>
                            <xsl:value-of select="$lot/@root"/>
                            <xsl:text>]</xsl:text>
                        </fo:block>
                    </xsl:if>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-date-rcp </xd:desc>
        <xd:param name="date_rcp"/>
    </xd:doc>
    <xsl:template name="show-date-rcp">
        <xsl:param name="date_rcp"/>
        <xsl:if test="$date_rcp">
            <xsl:variable name="ped" select="$date_rcp"/>
            <xsl:variable name="year" select="substring($ped, 1, 4)"/>
            <xsl:variable name="month" select="substring($ped, 5, 2)"/>
            <xsl:variable name="day" select="substring($ped, 7, 2)"/>
            <fo:block xsl:use-attribute-sets="data">
                <xsl:value-of select="$day"/>
                <xsl:text>/</xsl:text>
                <xsl:value-of select="$month"/>
                <xsl:text>/</xsl:text>
                <xsl:value-of select="$year"/>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-creation (du document) </xd:desc>
        <xd:param name="creation"/>
    </xd:doc>
    <xsl:template name="show-creation">
        <xsl:param name="creation"/>
        <xsl:choose>
            <xsl:when test="not($creation)">
                <xsl:if test="not(@nullFlavor)">
                    <xsl:if test="@value">
                        <xsl:call-template name="formatDateTime">
                            <xsl:with-param name="date" select="@value"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <xsl:if test="not($creation/@nullFlavor)">
                    <xsl:if test="$creation/@value">
                        <xsl:call-template name="formatDateTime">
                            <xsl:with-param name="date" select="$creation/@value"/>
                        </xsl:call-template>
                    </xsl:if>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-patient-name </xd:desc>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-patient-name-2">
        <xsl:param name="name"/>
        <xsl:if test="$name/hl7:prefix">
            <xsl:text>Civilité</xsl:text>
            <xsl:for-each select="$name/hl7:prefix">
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="$name/hl7:family">
            <xsl:choose>
                <xsl:when test="@qualifier">
                    <xsl:choose>
                        <xsl:when test="@qualifier = &apos;BR&apos;">
                            <xsl:text>Nom de naissance </xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                            <xsl:text>Prénom(s) </xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;SP&apos;">
                            <xsl:text>Nom d'usage </xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;CL&apos;">
                            <xsl:text>Nom et prénom utilisés </xsl:text>
                            <xsl:text>&#160;</xsl:text>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nom </xsl:text>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-patient-name-field-2">
        <xsl:param name="name"/>
        <xsl:if test="$name/hl7:prefix">
            <xsl:for-each select="$name/hl7:prefix">
                <xsl:value-of select="."/>
                <fo:block line-height="0.1cm">&#160;</fo:block>
            </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="$name/hl7:family">
            <xsl:choose>
                <xsl:when test="@qualifier">
                    <xsl:choose>
                        <xsl:when test="@qualifier = &apos;BR&apos;">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                            </fo:block>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                            <xsl:variable name="count" select="count($name/hl7:given)"/>
                            <xsl:for-each select="$name/hl7:given">
                                <xsl:choose>
                                    <xsl:when test="@qualifier = &apos;BR&apos;">
                                        <xsl:value-of select="."/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="."/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="$count > 1">
                                    <xsl:if test="(position() != last()) and (position() > 1)">
                                        <xsl:text>, </xsl:text>
                                    </xsl:if>
                                    <xsl:if test="position() = 1">
                                        <xsl:text> [</xsl:text>
                                    </xsl:if>
                                    <xsl:if test="position() = last()">
                                        <xsl:text>]</xsl:text>
                                    </xsl:if>
                                </xsl:if>
                            </xsl:for-each>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;SP&apos;">
                            <xsl:value-of select="."/>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                        <xsl:when test="@qualifier = &apos;CL&apos;">
                            <fo:block font-weight="bold">
                                <xsl:value-of select="."/>
                                <xsl:text>&#160;</xsl:text>
                                <xsl:for-each select="$name/hl7:given">
                                    <xsl:if test="@qualifier = &apos;CL&apos;">
                                        <xsl:value-of select="."/>
                                    </xsl:if>
                                    <xsl:text>&#160;</xsl:text>
                                </xsl:for-each>
                            </fo:block>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:when>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="."/>
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>

    <xd:doc>
        <xd:desc> participant : Correspondance associatedEntity/@classCode et libellé affiché </xd:desc>
        <xd:param name="code"/>
    </xd:doc>
    <xsl:template name="translateRoleAssoCode">
        <xsl:param name="code"/>
        <xsl:choose>
            <xsl:when test="$code = 'AGNT'">
                <xsl:text>non PS</xsl:text>
            </xsl:when>
            <xsl:when test="$code = 'PROV'">
                <xsl:text>PS</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>code='</xsl:text>
                <xsl:value-of select="$code"/>
                <xsl:text>'</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> participant : Correspondance code et libellé affiché </xd:desc>
    </xd:doc>
    <xsl:template name="participant-1">
        <xsl:if test="hl7:participant">
            <fo:block line-height="0.3cm">&#160;</fo:block>
            <fo:block xsl:use-attribute-sets="contact">
                <xsl:text>Ccntacts Utiles</xsl:text>
            </fo:block>
            <fo:block>
                <fo:table xsl:use-attribute-sets="myBorder-1">
                    <fo:table-column column-number="1" column-width="20%"/>
                    <fo:table-column column-number="2" column-width="40%"/>
                    <fo:table-column column-number="2" column-width="40%"/>
                    <fo:table-body>
                        <xsl:for-each select="hl7:participant">
                            <fo:table-row>
                                <fo:table-cell>
                                    <fo:block font-size="6" margin-top="5px" font-weight="bold">
                                        <xsl:variable name="participtRole">
                                            <xsl:call-template name="translateRoleAssoCode">
                                                <xsl:with-param name="code"
                                                  select="hl7:associatedEntity/@classCode"/>
                                            </xsl:call-template>
                                        </xsl:variable>
                                        <xsl:choose>
                                            <xsl:when test="$participtRole">
                                                <fo:block>
                                                  <xsl:choose>
                                                  <xsl:when test="@typeCode = 'RESP'">
                                                  <xsl:if test="hl7:functionCode">
                                                  <xsl:if test="hl7:functionCode/@nullFlavor = 'NA'">
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-177'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Établissements de référence</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  </xsl:if>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'REF'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Prescripteur</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'REFB'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Praticien adresseur</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'INF'">
                                                  <xsl:if test="hl7:functionCode">
                                                  <xsl:choose>
                                                  <xsl:when test="hl7:functionCode/@code = 'PCP'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Médecin traitant</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="hl7:functionCode/@code = 'CORRE'">
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-180'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Organismes sociaux et de maintien dans l'emploi</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-181'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Structure de soutien et d'information</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-188'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Structures et professionnels de proximité impliqués dans les soins</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Informateur</xsl:text>
                                                  </fo:block>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'PRF'">
                                                  <xsl:if test="hl7:functionCode">
                                                  <xsl:choose>
                                                  <xsl:when
                                                  test="hl7:functionCode/@code = 'ATTPHYS'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Responsable de l'équipe de soins</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="hl7:functionCode/@code = '353'">
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-177'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Membre de l'équipe de soins</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:when test="hl7:functionCode/@code = 'CORRE'">
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-177'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Centre d'hébergement</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-178'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Structures et professionnels de proximité impliqués dans les soins</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-190'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Structures et professionnels de proximité impliqués dans les soins</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:when test="hl7:functionCode/@code = 'PRELV'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Préleveur</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Exécutant</xsl:text>
                                                  </fo:block>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'CON'">
                                                  <xsl:if test="hl7:functionCode">
                                                  <xsl:choose>
                                                  <xsl:when test="hl7:functionCode/@code = 'CORRE'">
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-179'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Structure de coordination ou d'interface ville-hôpital</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  <xsl:if
                                                  test="hl7:functionCode/hl7:translation/@code = 'ORG-191'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Structure de coordination ou d'interface ville-hôpital</xsl:text>
                                                  </fo:block>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Consultant</xsl:text>
                                                  </fo:block>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                  </xsl:if>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'VRF'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Vérificateur</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'ADM'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Responsable de l'admission</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'DIS'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Responsable de la sortie</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:when test="@typeCode = 'AUTHEN'">
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Valideur des résultats</xsl:text>
                                                  </fo:block>
                                                  </xsl:when>
                                                  <xsl:otherwise>
                                                  <fo:block font-weight="bold">
                                                  <xsl:text>Participant</xsl:text>
                                                  </fo:block>
                                                  </xsl:otherwise>
                                                  </xsl:choose>
                                                </fo:block>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <fo:block font-weight="bold">
                                                  <xsl:text>Participant</xsl:text>
                                                </fo:block>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell>
                                    <fo:block font-size="6" margin-top="5px">
                                        <xsl:if test="hl7:associatedEntity/hl7:associatedPerson">
                                            <xsl:if test="hl7:associatedEntity/hl7:code">
                                                <xsl:call-template name="show-profession">
                                                  <xsl:with-param name="code"
                                                  select="hl7:associatedEntity/hl7:code"/>
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:call-template name="show-contact-name">
                                                <xsl:with-param name="name"
                                                  select="hl7:associatedEntity/hl7:associatedPerson/hl7:name"
                                                />
                                            </xsl:call-template>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <xsl:if test="hl7:associatedEntity/hl7:addr">
                                                <xsl:for-each select="hl7:associatedEntity/hl7:addr">
                                                  <xsl:call-template name="show-address-2">
                                                  <xsl:with-param name="address" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:for-each>
                                            </xsl:if>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <xsl:if test="hl7:associatedEntity/hl7:telecom">
                                                <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:telecom">
                                                  <xsl:call-template name="show-telecom-1">
                                                  <xsl:with-param name="telecom" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                </xsl:for-each>
                                            </xsl:if>
                                        </xsl:if>
                                        <fo:block line-height="0.1cm">&#160;</fo:block>
                                        <xsl:if test="hl7:associatedEntity/hl7:scopingOrganization">
                                            <xsl:if
                                                test="hl7:associatedEntity/hl7:scopingOrganization/hl7:name">
                                                <xsl:call-template name="show-contact-name">
                                                  <xsl:with-param name="name"
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:name"
                                                  />
                                                </xsl:call-template>
                                                <fo:block line-height="0.1cm">&#160;</fo:block>
                                            </xsl:if>
                                            <xsl:choose>
                                                <xsl:when
                                                  test="hl7:associatedEntity/hl7:scopingOrganization/hl7:addr">
                                                  <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:addr">
                                                  <xsl:call-template name="show-address-2">
                                                  <xsl:with-param name="address" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                  </xsl:for-each>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                  <xsl:if
                                                  test="not(hl7:associatedEntity/hl7:associatedPerson)">
                                                  <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:addr">
                                                  <xsl:call-template name="show-address-2">
                                                  <xsl:with-param name="address" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                  </xsl:for-each>
                                                  </xsl:if>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                            <xsl:choose>
                                                <xsl:when
                                                  test="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom">
                                                  <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:scopingOrganization/hl7:telecom">
                                                  <xsl:call-template name="show-telecom-1">
                                                  <xsl:with-param name="telecom" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                  </xsl:for-each>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                  <xsl:if
                                                  test="not(hl7:associatedEntity/hl7:associatedPerson)">
                                                  <xsl:for-each
                                                  select="hl7:associatedEntity/hl7:telecom">
                                                  <xsl:call-template name="show-telecom-1">
                                                  <xsl:with-param name="telecom" select="."/>
                                                  </xsl:call-template>
                                                  <fo:block line-height="0.1cm">&#160;</fo:block>
                                                  </xsl:for-each>
                                                  </xsl:if>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <fo:block line-height="0.1cm">&#160;</fo:block>
                                        </xsl:if>
                                    </fo:block>
                                </fo:table-cell>
                                <fo:table-cell>
                                    <fo:block font-size="6" margin-top="5px" color="#003366">
                                        <xsl:value-of select="hl7:functionCode/hl7:originalText"/>
                                    </fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </xsl:for-each>
                    </fo:table-body>
                </fo:table>
            </fo:block>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-contact-name </xd:desc>
        <xd:param name="name"/>
    </xd:doc>
    <xsl:template name="show-contact-name">
        <xsl:param name="name"/>
        <xsl:choose>
            <xsl:when test="$name/hl7:family">
                <xsl:choose>
                    <xsl:when test="$name/hl7:suffix">
                        <xsl:for-each select="$name/hl7:suffix">
                            <fo:inline font-weight="bold" xsl:use-attribute-sets="data">
                                <xsl:value-of select="."/>
                            </fo:inline>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$name/hl7:prefix">
                            <fo:inline font-weight="bold" xsl:use-attribute-sets="data">
                                <xsl:value-of select="."/>
                            </fo:inline>
                            <xsl:text> </xsl:text>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$name/hl7:given">
                    <fo:inline font-weight="bold" xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                        <xsl:text> </xsl:text>
                    </fo:inline>
                </xsl:for-each>
                <xsl:for-each select="$name/hl7:family">
                    <fo:inline font-weight="bold" xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                    </fo:inline>
                    <xsl:if test="@qualifier">
                        <xsl:choose>
                            <xsl:when test="@qualifier = &apos;BR&apos;">
                                <xsl:text> (Nom de famille) </xsl:text>
                            </xsl:when>
                            <xsl:when test="@qualifier = &apos;SP&apos;">
                                <xsl:text> (Nom d'usage) </xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                                <fo:inline xsl:use-attribute-sets="data">
                                    <xsl:value-of select="@qualifier"/>
                                </fo:inline>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:text> </xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <fo:inline font-weight="bold" xsl:use-attribute-sets="data">
                    <xsl:value-of select="$name"/>
                </fo:inline>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show code (profession) </xd:desc>
        <xd:param name="code"/>
    </xd:doc>
    <xsl:template name="show-profession">
        <xsl:param name="code"/>
        <xsl:choose>
            <xsl:when test="$code/@displayName">
                <xsl:text> </xsl:text>
                <fo:block font-weight="bold" xsl:use-attribute-sets="data">
                    <xsl:value-of select="$code/@displayName"/>
                </fo:block>
                <xsl:text> </xsl:text>
            </xsl:when>
        </xsl:choose>
        <xsl:choose>
            <xsl:when test="$code/hl7:originalText">
                <xsl:text> </xsl:text>
                <xsl:value-of select="$code/hl7:originalText"/>
            </xsl:when>
        </xsl:choose>
    </xsl:template>

    <xd:doc>
        <xd:desc> show-address </xd:desc>
        <xd:param name="address"/>
    </xd:doc>
    <xsl:template name="show-address-2">
        <xsl:param name="address"/>
        <xsl:choose>
            <xsl:when test="$address">
                <xsl:if test="$address/@use">
                    <xsl:text> </xsl:text>
                    <xsl:call-template name="translateTelecomCode">
                        <xsl:with-param name="code" select="$address/@use"/>
                    </xsl:call-template>
                    <xsl:text>:</xsl:text>
                </xsl:if>
                <xsl:for-each select="$address/hl7:streetAddressLine">
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="."/>
                    </fo:inline>
                </xsl:for-each>
                <xsl:if test="$address/hl7:streetName">
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:if test="$address/hl7:additionalLocator">
                            <xsl:value-of select="$address/hl7:additionalLocator"/>
                            <fo:block line-height="0.1cm">&#160;</fo:block>
                        </xsl:if>
                        <xsl:value-of select="$address/hl7:houseNumber"/>
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="$address/hl7:streetNameType"/>
                        <xsl:text> </xsl:text>
                        <xsl:value-of select="$address/hl7:streetName"/>
                    </fo:inline>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:postalCode) > 0">
                    <fo:block line-height="0.1cm">&#160;</fo:block>
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="$address/hl7:postalCode"/>
                    </fo:inline>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:city) > 0">
                    <xsl:text>,&#160;</xsl:text>
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="$address/hl7:city"/>
                    </fo:inline>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:state) > 0">
                    <xsl:text>,&#160;</xsl:text>
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="$address/hl7:state"/>
                    </fo:inline>
                </xsl:if>
                <xsl:if test="string-length($address/hl7:country) > 0">
                    <xsl:text>,&#160;</xsl:text>
                    <fo:inline xsl:use-attribute-sets="data">
                        <xsl:value-of select="$address/hl7:country"/>
                    </fo:inline>
                </xsl:if>
            </xsl:when>
            <xsl:otherwise>
                <fo:inline xsl:use-attribute-sets="data">
                    <xsl:text>addresse non renseignée</xsl:text>
                </fo:inline>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <!-- ========================================================================================================================================= -->
    <!--                                                                FDS EXTERNE                                                                -->
    <!-- ========================================================================================================================================= -->





</xsl:stylesheet>